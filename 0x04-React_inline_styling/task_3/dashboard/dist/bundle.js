/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={272:(e,t,n)=>{"use strict";var r=n(723),l=[],a=[],o=r.makeRequestCallFromTimer((function(){if(a.length)throw a.shift()}));function i(e){var t;(t=l.length?l.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=i,u.prototype.call=function(){try{this.task.call()}catch(e){i.onerror?i.onerror(e):(a.push(e),o())}finally{this.task=null,l[l.length]=this}}},723:(e,t,n)=>{"use strict";function r(e){a.length||l(),a[a.length]=e}e.exports=r;var l,a=[],o=0,i=1024;function u(){for(;o<a.length;){var e=o;if(o+=1,a[e].call(),o>i){for(var t=0,n=a.length-o;t<n;t++)a[t]=a[t+o];a.length-=o,o=0}}a.length=0,o=0}var s,c,f,d=void 0!==n.g?n.g:self,p=d.MutationObserver||d.WebKitMutationObserver;function m(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof p?(s=1,c=new p(u),f=document.createTextNode(""),c.observe(f,{characterData:!0}),l=function(){s=-s,f.data=s}):l=m(u),r.requestFlush=l,r.makeRequestCallFromTimer=m},174:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(537),l=n.n(r),a=n(645),o=n.n(a)()(l());o.push([e.id,"\n.App-body {\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 1rem;\n\tpadding: 2.4rem;\n\theight: 45vh;\n}\n\n.App-body label {\n\tpadding-right: 10px;\n\tdisplay: inline-block;\n}\n","",{version:3,sources:["webpack://./src/Login/Login.css"],names:[],mappings:";AACA;CACC,yCAAyC;CACzC,eAAe;CACf,eAAe;CACf,YAAY;AACb;;AAEA;CACC,mBAAmB;CACnB,qBAAqB;AACtB",sourcesContent:["\n.App-body {\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 1rem;\n\tpadding: 2.4rem;\n\theight: 45vh;\n}\n\n.App-body label {\n\tpadding-right: 10px;\n\tdisplay: inline-block;\n}\n"],sourceRoot:""}]);const i=o},842:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(537),l=n.n(r),a=n(645),o=n.n(a)()(l());o.push([e.id,".menuItem {\n    position: absolute;\n    top: 7px;\n    right: 7px;\n}\n\n.Notifications {\n\tborder: 3px dotted red;\n\tpadding: 6px 12px;\n    position: absolute;\n    top: 21px;\n    right: 7px;\n\tmargin-top: 12px;\n}\n\n\nli[data-notification-type='default'] {\n\tcolor: blue;\n}\n\nli[data-notification-type='urgent'] {\n\tcolor: red;\n}\n\nbutton img {\n\twidth: 10px\n}\n","",{version:3,sources:["webpack://./src/Notifications/Notifications.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,QAAQ;IACR,UAAU;AACd;;AAEA;CACC,sBAAsB;CACtB,iBAAiB;IACd,kBAAkB;IAClB,SAAS;IACT,UAAU;CACb,gBAAgB;AACjB;;;AAGA;CACC,WAAW;AACZ;;AAEA;CACC,UAAU;AACX;;AAEA;CACC;AACD",sourcesContent:[".menuItem {\n    position: absolute;\n    top: 7px;\n    right: 7px;\n}\n\n.Notifications {\n\tborder: 3px dotted red;\n\tpadding: 6px 12px;\n    position: absolute;\n    top: 21px;\n    right: 7px;\n\tmargin-top: 12px;\n}\n\n\nli[data-notification-type='default'] {\n\tcolor: blue;\n}\n\nli[data-notification-type='urgent'] {\n\tcolor: red;\n}\n\nbutton img {\n\twidth: 10px\n}\n"],sourceRoot:""}]);const i=o},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,l,a){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var u=this[i][0];null!=u&&(o[u]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&o[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),l&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=l):c[4]="".concat(l)),t.push(c))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(l," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},703:(e,t,n)=>{"use strict";var r=n(414);function l(){}function a(){}a.resetWarningCache=l,e.exports=function(){function e(e,t,n,l,a,o){if(o!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:l};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),l=n(840);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function u(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},m={};function h(e,t,n,r,l,a,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=o}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function g(e){return e[1].toUpperCase()}function b(e,t,n,r){var l=y.hasOwnProperty(t)?y[t]:null;(null!==l?0!==l.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,l,r)&&(n=null),r||null===l?function(e){return!!f.call(m,e)||!f.call(p,e)&&(d.test(e)?m[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=null===n?3!==l.type&&"":n:(t=l.attributeName,r=l.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(l=l.type)||4===l&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,g);y[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,g);y[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,g);y[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),S=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),P=Symbol.for("react.context"),O=Symbol.for("react.forward_ref"),N=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),z=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var A=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function j(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var L,I=Object.assign;function F(e){if(void 0===L)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var D=!1;function B(e,t){if(!e||D)return"";D=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var l=t.stack.split("\n"),a=r.stack.split("\n"),o=l.length-1,i=a.length-1;1<=o&&0<=i&&l[o]!==a[i];)i--;for(;1<=o&&0<=i;o--,i--)if(l[o]!==a[i]){if(1!==o||1!==i)do{if(o--,0>--i||l[o]!==a[i]){var u="\n"+l[o].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=o&&0<=i);break}}}finally{D=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function W(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return B(e.type,!1);case 11:return B(e.type.render,!1);case 1:return B(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case C:return"Profiler";case E:return"StrictMode";case N:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case z:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return U(e(t))}catch(e){}}return null}function H(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function $(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=$(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var l=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function G(e,t){var n=t.checked;return I({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function Z(e,t){X(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,l=0;l<e.length;l++){if(e[l].value===n)return e[l].selected=!0,void(r&&(e[l].defaultSelected=!0));null!==t||e[l].disabled||(t=e[l])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return I({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function ae(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var se,ce,fe=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function he(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ye(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),l=he(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,l):e[n]=l}}Object.keys(pe).forEach((function(e){me.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ve=I({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ge(e,t){if(t){if(ve[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,xe=null,Ee=null;function Ce(e){if(e=bl(e)){if("function"!=typeof Se)throw Error(a(280));var t=e.stateNode;t&&(t=kl(t),Se(e.stateNode,e.type,t))}}function _e(e){xe?Ee?Ee.push(e):Ee=[e]:xe=e}function Pe(){if(xe){var e=xe,t=Ee;if(Ee=xe=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Oe(e,t){return e(t)}function Ne(){}var Te=!1;function ze(e,t,n){if(Te)return e(t,n);Te=!0;try{return Oe(e,t,n)}finally{Te=!1,(null!==xe||null!==Ee)&&(Ne(),Pe())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=kl(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}var Ae=!1;if(c)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Ae=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(ce){Ae=!1}function je(e,t,n,r,l,a,o,i,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Le=!1,Ie=null,Fe=!1,De=null,Be={onError:function(e){Le=!0,Ie=e}};function We(e,t,n,r,l,a,o,i,u){Le=!1,Ie=null,je.apply(Be,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function He(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(Ue(e)!==e)throw Error(a(188))}function $e(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var l=n.return;if(null===l)break;var o=l.alternate;if(null===o){if(null!==(r=l.return)){n=r;continue}break}if(l.child===o.child){for(o=l.child;o;){if(o===n)return Ve(l),e;if(o===r)return Ve(l),t;o=o.sibling}throw Error(a(188))}if(n.return!==r.return)n=l,r=o;else{for(var i=!1,u=l.child;u;){if(u===n){i=!0,n=l,r=o;break}if(u===r){i=!0,r=l,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=l;break}if(u===r){i=!0,r=o,n=l;break}u=u.sibling}if(!i)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?Qe(e):null}function Qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Qe(e);if(null!==t)return t;e=e.sibling}return null}var qe=l.unstable_scheduleCallback,Ke=l.unstable_cancelCallback,Ge=l.unstable_shouldYield,Ye=l.unstable_requestPaint,Xe=l.unstable_now,Ze=l.unstable_getCurrentPriorityLevel,Je=l.unstable_ImmediatePriority,et=l.unstable_UserBlockingPriority,tt=l.unstable_NormalPriority,nt=l.unstable_LowPriority,rt=l.unstable_IdlePriority,lt=null,at=null,ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(it(e)/ut|0)|0},it=Math.log,ut=Math.LN2,st=64,ct=4194304;function ft(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,l=e.suspendedLanes,a=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~l;0!==i?r=ft(i):0!=(a&=o)&&(r=ft(a))}else 0!=(o=n&~l)?r=ft(o):0!==a&&(r=ft(a));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&l)&&((l=r&-r)>=(a=t&-t)||16===l&&0!=(4194240&a)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)l=1<<(n=31-ot(t)),r|=e[n],t&=~l;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function mt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=st;return 0==(4194240&(st<<=1))&&(st=64),e}function yt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function vt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function gt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-ot(n),l=1<<r;l&t|e[r]&t&&(e[r]|=t),n&=~l}}var bt=0;function wt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var kt,St,xt,Et,Ct,_t=!1,Pt=[],Ot=null,Nt=null,Tt=null,zt=new Map,Rt=new Map,At=[],Mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function jt(e,t){switch(e){case"focusin":case"focusout":Ot=null;break;case"dragenter":case"dragleave":Nt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":zt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Lt(e,t,n,r,l,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[l]},null!==t&&null!==(t=bl(t))&&St(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==l&&-1===t.indexOf(l)&&t.push(l),e)}function It(e){var t=gl(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=He(n)))return e.blockedOn=t,void Ct(e.priority,(function(){xt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=bl(n))&&St(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function Dt(e,t,n){Ft(e)&&n.delete(t)}function Bt(){_t=!1,null!==Ot&&Ft(Ot)&&(Ot=null),null!==Nt&&Ft(Nt)&&(Nt=null),null!==Tt&&Ft(Tt)&&(Tt=null),zt.forEach(Dt),Rt.forEach(Dt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,Bt)))}function Ut(e){function t(t){return Wt(t,e)}if(0<Pt.length){Wt(Pt[0],e);for(var n=1;n<Pt.length;n++){var r=Pt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Ot&&Wt(Ot,e),null!==Nt&&Wt(Nt,e),null!==Tt&&Wt(Tt,e),zt.forEach(t),Rt.forEach(t),n=0;n<At.length;n++)(r=At[n]).blockedOn===e&&(r.blockedOn=null);for(;0<At.length&&null===(n=At[0]).blockedOn;)It(n),null===n.blockedOn&&At.shift()}var Ht=w.ReactCurrentBatchConfig,Vt=!0;function $t(e,t,n,r){var l=bt,a=Ht.transition;Ht.transition=null;try{bt=1,qt(e,t,n,r)}finally{bt=l,Ht.transition=a}}function Qt(e,t,n,r){var l=bt,a=Ht.transition;Ht.transition=null;try{bt=4,qt(e,t,n,r)}finally{bt=l,Ht.transition=a}}function qt(e,t,n,r){if(Vt){var l=Gt(e,t,n,r);if(null===l)Vr(e,t,r,Kt,n),jt(e,r);else if(function(e,t,n,r,l){switch(t){case"focusin":return Ot=Lt(Ot,e,t,n,r,l),!0;case"dragenter":return Nt=Lt(Nt,e,t,n,r,l),!0;case"mouseover":return Tt=Lt(Tt,e,t,n,r,l),!0;case"pointerover":var a=l.pointerId;return zt.set(a,Lt(zt.get(a)||null,e,t,n,r,l)),!0;case"gotpointercapture":return a=l.pointerId,Rt.set(a,Lt(Rt.get(a)||null,e,t,n,r,l)),!0}return!1}(l,e,t,n,r))r.stopPropagation();else if(jt(e,r),4&t&&-1<Mt.indexOf(e)){for(;null!==l;){var a=bl(l);if(null!==a&&kt(a),null===(a=Gt(e,t,n,r))&&Vr(e,t,r,Kt,n),a===l)break;l=a}null!==l&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Kt=null;function Gt(e,t,n,r){if(Kt=null,null!==(e=gl(e=ke(r))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=He(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Xt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,l="value"in Xt?Xt.value:Xt.textContent,a=l.length;for(e=0;e<r&&n[e]===l[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===l[a-t];t++);return Jt=l.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function ln(e){function t(t,n,r,l,a){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=l,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(l):l[o]);return this.isDefaultPrevented=(null!=l.defaultPrevented?l.defaultPrevented:!1===l.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return I(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var an,on,un,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=ln(sn),fn=I({},sn,{view:0,detail:0}),dn=ln(fn),pn=I({},fn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(an=e.screenX-un.screenX,on=e.screenY-un.screenY):on=an=0,un=e),an)},movementY:function(e){return"movementY"in e?e.movementY:on}}),mn=ln(pn),hn=ln(I({},pn,{dataTransfer:0})),yn=ln(I({},fn,{relatedTarget:0})),vn=ln(I({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),gn=I({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=ln(gn),wn=ln(I({},sn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function Cn(){return En}var _n=I({},fn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Pn=ln(_n),On=ln(I({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=ln(I({},fn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Tn=ln(I({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),zn=I({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=ln(zn),An=[9,13,27,32],Mn=c&&"CompositionEvent"in window,jn=null;c&&"documentMode"in document&&(jn=document.documentMode);var Ln=c&&"TextEvent"in window&&!jn,In=c&&(!Mn||jn&&8<jn&&11>=jn),Fn=String.fromCharCode(32),Dn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==An.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function $n(e,t,n,r){_e(r),0<(t=Qr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Qn=null,qn=null;function Kn(e){Fr(e,0)}function Gn(e){if(q(wl(e)))return e}function Yn(e,t){if("change"===e)return t}var Xn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Zn=Jn}else Zn=!1;Xn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){Qn&&(Qn.detachEvent("onpropertychange",nr),qn=Qn=null)}function nr(e){if("value"===e.propertyName&&Gn(qn)){var t=[];$n(t,qn,e,ke(e)),ze(Kn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(Qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function lr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Gn(qn)}function ar(e,t){if("click"===e)return Gn(t)}function or(e,t){if("input"===e||"change"===e)return Gn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var l=n[r];if(!f.call(t,l)||!ir(e[l],t[l]))return!1}return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function mr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&fr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var l=n.textContent.length,a=Math.min(r.start,l);r=void 0===r.end?a:Math.min(r.end,l),!e.extend&&a>r&&(l=r,r=a,a=l),l=cr(n,a);var o=cr(n,r);l&&o&&(1!==e.rangeCount||e.anchorNode!==l.node||e.anchorOffset!==l.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(l.node,l.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=c&&"documentMode"in document&&11>=document.documentMode,yr=null,vr=null,gr=null,br=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==yr||yr!==K(r)||(r="selectionStart"in(r=yr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ur(gr,r)||(gr=r,0<(r=Qr(vr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=yr)))}function kr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Sr={animationend:kr("Animation","AnimationEnd"),animationiteration:kr("Animation","AnimationIteration"),animationstart:kr("Animation","AnimationStart"),transitionend:kr("Transition","TransitionEnd")},xr={},Er={};function Cr(e){if(xr[e])return xr[e];if(!Sr[e])return e;var t,n=Sr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Er)return xr[e]=n[t];return e}c&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete Sr.animationend.animation,delete Sr.animationiteration.animation,delete Sr.animationstart.animation),"TransitionEvent"in window||delete Sr.transitionend.transition);var _r=Cr("animationend"),Pr=Cr("animationiteration"),Or=Cr("animationstart"),Nr=Cr("transitionend"),Tr=new Map,zr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Rr(e,t){Tr.set(e,t),u(t,[e])}for(var Ar=0;Ar<zr.length;Ar++){var Mr=zr[Ar];Rr(Mr.toLowerCase(),"on"+(Mr[0].toUpperCase()+Mr.slice(1)))}Rr(_r,"onAnimationEnd"),Rr(Pr,"onAnimationIteration"),Rr(Or,"onAnimationStart"),Rr("dblclick","onDoubleClick"),Rr("focusin","onFocus"),Rr("focusout","onBlur"),Rr(Nr,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var jr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Lr=new Set("cancel close invalid load scroll toggle".split(" ").concat(jr));function Ir(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,l,o,i,u,s){if(We.apply(this,arguments),Le){if(!Le)throw Error(a(198));var c=Ie;Le=!1,Ie=null,Fe||(Fe=!0,De=c)}}(r,t,void 0,e),e.currentTarget=null}function Fr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],l=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],u=i.instance,s=i.currentTarget;if(i=i.listener,u!==a&&l.isPropagationStopped())break e;Ir(l,i,s),a=u}else for(o=0;o<r.length;o++){if(u=(i=r[o]).instance,s=i.currentTarget,i=i.listener,u!==a&&l.isPropagationStopped())break e;Ir(l,i,s),a=u}}}if(Fe)throw e=De,Fe=!1,De=null,e}function Dr(e,t){var n=t[hl];void 0===n&&(n=t[hl]=new Set);var r=e+"__bubble";n.has(r)||(Hr(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Hr(n,e,r,t)}var Wr="_reactListening"+Math.random().toString(36).slice(2);function Ur(e){if(!e[Wr]){e[Wr]=!0,o.forEach((function(t){"selectionchange"!==t&&(Lr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wr]||(t[Wr]=!0,Br("selectionchange",!1,t))}}function Hr(e,t,n,r){switch(Yt(t)){case 1:var l=$t;break;case 4:l=Qt;break;default:l=qt}n=l.bind(null,t,n,e),l=void 0,!Ae||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(l=!0),r?void 0!==l?e.addEventListener(t,n,{capture:!0,passive:l}):e.addEventListener(t,n,!0):void 0!==l?e.addEventListener(t,n,{passive:l}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,l){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===l||8===i.nodeType&&i.parentNode===l)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===l||8===u.nodeType&&u.parentNode===l))return;o=o.return}for(;null!==i;){if(null===(o=gl(i)))return;if(5===(u=o.tag)||6===u){r=a=o;continue e}i=i.parentNode}}r=r.return}ze((function(){var r=a,l=ke(n),o=[];e:{var i=Tr.get(e);if(void 0!==i){var u=cn,s=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case _r:case Pr:case Or:u=vn;break;case Nr:u=Tn;break;case"scroll":u=dn;break;case"wheel":u=Rn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=On}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,m=r;null!==m;){var h=(p=m).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==d&&null!=(h=Re(m,d))&&c.push($r(m,h,p))),f)break;m=m.return}0<c.length&&(i=new u(i,s,null,n,l),o.push({event:i,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===we||!(s=n.relatedTarget||n.fromElement)||!gl(s)&&!s[ml])&&(u||i)&&(i=l.window===l?l:(i=l.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?gl(s):null)&&(s!==(f=Ue(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=mn,h="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(c=On,h="onPointerLeave",d="onPointerEnter",m="pointer"),f=null==u?i:wl(u),p=null==s?i:wl(s),(i=new c(h,m+"leave",u,n,l)).target=f,i.relatedTarget=p,h=null,gl(l)===r&&((c=new c(d,m+"enter",s,n,l)).target=p,c.relatedTarget=f,h=c),f=h,u&&s)e:{for(d=s,m=0,p=c=u;p;p=qr(p))m++;for(p=0,h=d;h;h=qr(h))p++;for(;0<m-p;)c=qr(c),m--;for(;0<p-m;)d=qr(d),p--;for(;m--;){if(c===d||null!==d&&c===d.alternate)break e;c=qr(c),d=qr(d)}c=null}else c=null;null!==u&&Kr(o,i,u,c,!1),null!==s&&null!==f&&Kr(o,f,s,c,!0)}if("select"===(u=(i=r?wl(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var y=Yn;else if(Vn(i))if(Xn)y=or;else{y=lr;var v=rr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(y=ar);switch(y&&(y=y(e,r))?$n(o,y,n,l):(v&&v(e,i,r),"focusout"===e&&(v=i._wrapperState)&&v.controlled&&"number"===i.type&&ee(i,"number",i.value)),v=r?wl(r):window,e){case"focusin":(Vn(v)||"true"===v.contentEditable)&&(yr=v,vr=r,gr=null);break;case"focusout":gr=vr=yr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(o,n,l);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":wr(o,n,l)}var g;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Un?Bn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(In&&"ko"!==n.locale&&(Un||"onCompositionStart"!==b?"onCompositionEnd"===b&&Un&&(g=en()):(Zt="value"in(Xt=l)?Xt.value:Xt.textContent,Un=!0)),0<(v=Qr(r,b)).length&&(b=new wn(b,e,null,n,l),o.push({event:b,listeners:v}),(g||null!==(g=Wn(n)))&&(b.data=g))),(g=Ln?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Dn=!0,Fn);case"textInput":return(e=t.data)===Fn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Mn&&Bn(e,t)?(e=en(),Jt=Zt=Xt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return In&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Qr(r,"onBeforeInput")).length&&(l=new wn("onBeforeInput","beforeinput",null,n,l),o.push({event:l,listeners:r}),l.data=g)}Fr(o,t)}))}function $r(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var l=e,a=l.stateNode;5===l.tag&&null!==a&&(l=a,null!=(a=Re(e,n))&&r.unshift($r(e,a,l)),null!=(a=Re(e,t))&&r.push($r(e,a,l))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,t,n,r,l){for(var a=t._reactName,o=[];null!==n&&n!==r;){var i=n,u=i.alternate,s=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==s&&(i=s,l?null!=(u=Re(n,a))&&o.unshift($r(n,u,i)):l||null!=(u=Re(n,a))&&o.push($r(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Gr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Xr(e){return("string"==typeof e?e:""+e).replace(Gr,"\n").replace(Yr,"")}function Zr(e,t,n){if(t=Xr(t),Xr(e)!==t&&n)throw Error(a(425))}function Jr(){}var el=null,tl=null;function nl(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var rl="function"==typeof setTimeout?setTimeout:void 0,ll="function"==typeof clearTimeout?clearTimeout:void 0,al="function"==typeof Promise?Promise:void 0,ol="function"==typeof queueMicrotask?queueMicrotask:void 0!==al?function(e){return al.resolve(null).then(e).catch(il)}:rl;function il(e){setTimeout((function(){throw e}))}function ul(e,t){var n=t,r=0;do{var l=n.nextSibling;if(e.removeChild(n),l&&8===l.nodeType)if("/$"===(n=l.data)){if(0===r)return e.removeChild(l),void Ut(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=l}while(n);Ut(t)}function sl(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cl(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fl=Math.random().toString(36).slice(2),dl="__reactFiber$"+fl,pl="__reactProps$"+fl,ml="__reactContainer$"+fl,hl="__reactEvents$"+fl,yl="__reactListeners$"+fl,vl="__reactHandles$"+fl;function gl(e){var t=e[dl];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ml]||n[dl]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=cl(e);null!==e;){if(n=e[dl])return n;e=cl(e)}return t}n=(e=n).parentNode}return null}function bl(e){return!(e=e[dl]||e[ml])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wl(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function kl(e){return e[pl]||null}var Sl=[],xl=-1;function El(e){return{current:e}}function Cl(e){0>xl||(e.current=Sl[xl],Sl[xl]=null,xl--)}function _l(e,t){xl++,Sl[xl]=e.current,e.current=t}var Pl={},Ol=El(Pl),Nl=El(!1),Tl=Pl;function zl(e,t){var n=e.type.contextTypes;if(!n)return Pl;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l,a={};for(l in n)a[l]=t[l];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Rl(e){return null!=e.childContextTypes}function Al(){Cl(Nl),Cl(Ol)}function Ml(e,t,n){if(Ol.current!==Pl)throw Error(a(168));_l(Ol,t),_l(Nl,n)}function jl(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var l in r=r.getChildContext())if(!(l in t))throw Error(a(108,H(e)||"Unknown",l));return I({},n,r)}function Ll(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Pl,Tl=Ol.current,_l(Ol,e),_l(Nl,Nl.current),!0}function Il(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=jl(e,t,Tl),r.__reactInternalMemoizedMergedChildContext=e,Cl(Nl),Cl(Ol),_l(Ol,e)):Cl(Nl),_l(Nl,n)}var Fl=null,Dl=!1,Bl=!1;function Wl(e){null===Fl?Fl=[e]:Fl.push(e)}function Ul(){if(!Bl&&null!==Fl){Bl=!0;var e=0,t=bt;try{var n=Fl;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Fl=null,Dl=!1}catch(t){throw null!==Fl&&(Fl=Fl.slice(e+1)),qe(Je,Ul),t}finally{bt=t,Bl=!1}}return null}var Hl=[],Vl=0,$l=null,Ql=0,ql=[],Kl=0,Gl=null,Yl=1,Xl="";function Zl(e,t){Hl[Vl++]=Ql,Hl[Vl++]=$l,$l=e,Ql=t}function Jl(e,t,n){ql[Kl++]=Yl,ql[Kl++]=Xl,ql[Kl++]=Gl,Gl=e;var r=Yl;e=Xl;var l=32-ot(r)-1;r&=~(1<<l),n+=1;var a=32-ot(t)+l;if(30<a){var o=l-l%5;a=(r&(1<<o)-1).toString(32),r>>=o,l-=o,Yl=1<<32-ot(t)+l|n<<l|r,Xl=a+e}else Yl=1<<a|n<<l|r,Xl=e}function ea(e){null!==e.return&&(Zl(e,1),Jl(e,1,0))}function ta(e){for(;e===$l;)$l=Hl[--Vl],Hl[Vl]=null,Ql=Hl[--Vl],Hl[Vl]=null;for(;e===Gl;)Gl=ql[--Kl],ql[Kl]=null,Xl=ql[--Kl],ql[Kl]=null,Yl=ql[--Kl],ql[Kl]=null}var na=null,ra=null,la=!1,aa=null;function oa(e,t){var n=Rs(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function ia(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,na=e,ra=sl(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,na=e,ra=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Gl?{id:Yl,overflow:Xl}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Rs(18,null,null,0)).stateNode=t,n.return=e,e.child=n,na=e,ra=null,!0);default:return!1}}function ua(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function sa(e){if(la){var t=ra;if(t){var n=t;if(!ia(e,t)){if(ua(e))throw Error(a(418));t=sl(n.nextSibling);var r=na;t&&ia(e,t)?oa(r,n):(e.flags=-4097&e.flags|2,la=!1,na=e)}}else{if(ua(e))throw Error(a(418));e.flags=-4097&e.flags|2,la=!1,na=e}}}function ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;na=e}function fa(e){if(e!==na)return!1;if(!la)return ca(e),la=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nl(e.type,e.memoizedProps)),t&&(t=ra)){if(ua(e))throw da(),Error(a(418));for(;t;)oa(e,t),t=sl(t.nextSibling)}if(ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ra=sl(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ra=null}}else ra=na?sl(e.stateNode.nextSibling):null;return!0}function da(){for(var e=ra;e;)e=sl(e.nextSibling)}function pa(){ra=na=null,la=!1}function ma(e){null===aa?aa=[e]:aa.push(e)}var ha=w.ReactCurrentBatchConfig;function ya(e,t){if(e&&e.defaultProps){for(var n in t=I({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var va=El(null),ga=null,ba=null,wa=null;function ka(){wa=ba=ga=null}function Sa(e){var t=va.current;Cl(va),e._currentValue=t}function xa(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Ea(e,t){ga=e,wa=ba=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(wi=!0),e.firstContext=null)}function Ca(e){var t=e._currentValue;if(wa!==e)if(e={context:e,memoizedValue:t,next:null},null===ba){if(null===ga)throw Error(a(308));ba=e,ga.dependencies={lanes:0,firstContext:e}}else ba=ba.next=e;return t}var _a=null;function Pa(e){null===_a?_a=[e]:_a.push(e)}function Oa(e,t,n,r){var l=t.interleaved;return null===l?(n.next=n,Pa(t)):(n.next=l.next,l.next=n),t.interleaved=n,Na(e,r)}function Na(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ta=!1;function za(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ra(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Aa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ma(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Nu)){var l=r.pending;return null===l?t.next=t:(t.next=l.next,l.next=t),r.pending=t,Na(e,n)}return null===(l=r.interleaved)?(t.next=t,Pa(r)):(t.next=l.next,l.next=t),r.interleaved=t,Na(e,n)}function ja(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,gt(e,n)}}function La(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var l=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?l=a=o:a=a.next=o,n=n.next}while(null!==n);null===a?l=a=t:a=a.next=t}else l=a=t;return n={baseState:r.baseState,firstBaseUpdate:l,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ia(e,t,n,r){var l=e.updateQueue;Ta=!1;var a=l.firstBaseUpdate,o=l.lastBaseUpdate,i=l.shared.pending;if(null!==i){l.shared.pending=null;var u=i,s=u.next;u.next=null,null===o?a=s:o.next=s,o=u;var c=e.alternate;null!==c&&(i=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===i?c.firstBaseUpdate=s:i.next=s,c.lastBaseUpdate=u)}if(null!==a){var f=l.baseState;for(o=0,c=s=u=null,i=a;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var m=e,h=i;switch(d=t,p=n,h.tag){case 1:if("function"==typeof(m=h.payload)){f=m.call(p,f,d);break e}f=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null==(d="function"==typeof(m=h.payload)?m.call(p,f,d):m))break e;f=I({},f,d);break e;case 2:Ta=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=l.effects)?l.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(s=c=p,u=f):c=c.next=p,o|=d;if(null===(i=i.next)){if(null===(i=l.shared.pending))break;i=(d=i).next,d.next=null,l.lastBaseUpdate=d,l.shared.pending=null}}if(null===c&&(u=f),l.baseState=u,l.firstBaseUpdate=s,l.lastBaseUpdate=c,null!==(t=l.shared.interleaved)){l=t;do{o|=l.lane,l=l.next}while(l!==t)}else null===a&&(l.shared.lanes=0);Iu|=o,e.lanes=o,e.memoizedState=f}}function Fa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],l=r.callback;if(null!==l){if(r.callback=null,r=n,"function"!=typeof l)throw Error(a(191,l));l.call(r)}}}var Da=(new r.Component).refs;function Ba(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:I({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Wa={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ts(),l=ns(e),a=Aa(r,l);a.payload=t,null!=n&&(a.callback=n),null!==(t=Ma(e,a,l))&&(rs(t,e,l,r),ja(t,e,l))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ts(),l=ns(e),a=Aa(r,l);a.tag=1,a.payload=t,null!=n&&(a.callback=n),null!==(t=Ma(e,a,l))&&(rs(t,e,l,r),ja(t,e,l))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ts(),r=ns(e),l=Aa(n,r);l.tag=2,null!=t&&(l.callback=t),null!==(t=Ma(e,l,r))&&(rs(t,e,r,n),ja(t,e,r))}};function Ua(e,t,n,r,l,a,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,o):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(l,a))}function Ha(e,t,n){var r=!1,l=Pl,a=t.contextType;return"object"==typeof a&&null!==a?a=Ca(a):(l=Rl(t)?Tl:Ol.current,a=(r=null!=(r=t.contextTypes))?zl(e,l):Pl),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Wa,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=a),t}function Va(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Wa.enqueueReplaceState(t,t.state,null)}function $a(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=Da,za(e);var a=t.contextType;"object"==typeof a&&null!==a?l.context=Ca(a):(a=Rl(t)?Tl:Ol.current,l.context=zl(e,a)),l.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(Ba(e,t,a,n),l.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(t=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&Wa.enqueueReplaceState(l,l.state,null),Ia(e,n,l,r),l.state=e.memoizedState),"function"==typeof l.componentDidMount&&(e.flags|=4194308)}function Qa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var l=r,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=l.refs;t===Da&&(t=l.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function qa(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ka(e){return(0,e._init)(e._payload)}function Ga(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function l(e,t){return(e=Ms(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Fs(n,e.mode,r)).return=e,t):((t=l(t,n)).return=e,t)}function s(e,t,n,r){var a=n.type;return a===x?f(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"==typeof a&&null!==a&&a.$$typeof===R&&Ka(a)===t.type)?((r=l(t,n.props)).ref=Qa(e,t,n),r.return=e,r):((r=js(n.type,n.key,n.props,null,e.mode,r)).ref=Qa(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ds(n,e.mode,r)).return=e,t):((t=l(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Ls(n,e.mode,r,a)).return=e,t):((t=l(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Fs(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=js(t.type,t.key,t.props,null,e.mode,n)).ref=Qa(e,null,t),n.return=e,n;case S:return(t=Ds(t,e.mode,n)).return=e,t;case R:return d(e,(0,t._init)(t._payload),n)}if(te(t)||j(t))return(t=Ls(t,e.mode,n,null)).return=e,t;qa(e,t)}return null}function p(e,t,n,r){var l=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==l?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===l?s(e,t,n,r):null;case S:return n.key===l?c(e,t,n,r):null;case R:return p(e,t,(l=n._init)(n._payload),r)}if(te(n)||j(n))return null!==l?null:f(e,t,n,r,null);qa(e,n)}return null}function m(e,t,n,r,l){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,l);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return s(t,e=e.get(null===r.key?n:r.key)||null,r,l);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,l);case R:return m(e,t,n,(0,r._init)(r._payload),l)}if(te(r)||j(r))return f(t,e=e.get(n)||null,r,l,null);qa(t,r)}return null}function h(l,a,i,u){for(var s=null,c=null,f=a,h=a=0,y=null;null!==f&&h<i.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var v=p(l,f,i[h],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(l,f),a=o(v,a,h),null===c?s=v:c.sibling=v,c=v,f=y}if(h===i.length)return n(l,f),la&&Zl(l,h),s;if(null===f){for(;h<i.length;h++)null!==(f=d(l,i[h],u))&&(a=o(f,a,h),null===c?s=f:c.sibling=f,c=f);return la&&Zl(l,h),s}for(f=r(l,f);h<i.length;h++)null!==(y=m(f,l,h,i[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),a=o(y,a,h),null===c?s=y:c.sibling=y,c=y);return e&&f.forEach((function(e){return t(l,e)})),la&&Zl(l,h),s}function y(l,i,u,s){var c=j(u);if("function"!=typeof c)throw Error(a(150));if(null==(u=c.call(u)))throw Error(a(151));for(var f=c=null,h=i,y=i=0,v=null,g=u.next();null!==h&&!g.done;y++,g=u.next()){h.index>y?(v=h,h=null):v=h.sibling;var b=p(l,h,g.value,s);if(null===b){null===h&&(h=v);break}e&&h&&null===b.alternate&&t(l,h),i=o(b,i,y),null===f?c=b:f.sibling=b,f=b,h=v}if(g.done)return n(l,h),la&&Zl(l,y),c;if(null===h){for(;!g.done;y++,g=u.next())null!==(g=d(l,g.value,s))&&(i=o(g,i,y),null===f?c=g:f.sibling=g,f=g);return la&&Zl(l,y),c}for(h=r(l,h);!g.done;y++,g=u.next())null!==(g=m(h,l,y,g.value,s))&&(e&&null!==g.alternate&&h.delete(null===g.key?y:g.key),i=o(g,i,y),null===f?c=g:f.sibling=g,f=g);return e&&h.forEach((function(e){return t(l,e)})),la&&Zl(l,y),c}return function e(r,a,o,u){if("object"==typeof o&&null!==o&&o.type===x&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case k:e:{for(var s=o.key,c=a;null!==c;){if(c.key===s){if((s=o.type)===x){if(7===c.tag){n(r,c.sibling),(a=l(c,o.props.children)).return=r,r=a;break e}}else if(c.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===R&&Ka(s)===c.type){n(r,c.sibling),(a=l(c,o.props)).ref=Qa(r,c,o),a.return=r,r=a;break e}n(r,c);break}t(r,c),c=c.sibling}o.type===x?((a=Ls(o.props.children,r.mode,u,o.key)).return=r,r=a):((u=js(o.type,o.key,o.props,null,r.mode,u)).ref=Qa(r,a,o),u.return=r,r=u)}return i(r);case S:e:{for(c=o.key;null!==a;){if(a.key===c){if(4===a.tag&&a.stateNode.containerInfo===o.containerInfo&&a.stateNode.implementation===o.implementation){n(r,a.sibling),(a=l(a,o.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=Ds(o,r.mode,u)).return=r,r=a}return i(r);case R:return e(r,a,(c=o._init)(o._payload),u)}if(te(o))return h(r,a,o,u);if(j(o))return y(r,a,o,u);qa(r,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==a&&6===a.tag?(n(r,a.sibling),(a=l(a,o)).return=r,r=a):(n(r,a),(a=Fs(o,r.mode,u)).return=r,r=a),i(r)):n(r,a)}}var Ya=Ga(!0),Xa=Ga(!1),Za={},Ja=El(Za),eo=El(Za),to=El(Za);function no(e){if(e===Za)throw Error(a(174));return e}function ro(e,t){switch(_l(to,t),_l(eo,e),_l(Ja,Za),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Cl(Ja),_l(Ja,t)}function lo(){Cl(Ja),Cl(eo),Cl(to)}function ao(e){no(to.current);var t=no(Ja.current),n=ue(t,e.type);t!==n&&(_l(eo,e),_l(Ja,n))}function oo(e){eo.current===e&&(Cl(Ja),Cl(eo))}var io=El(0);function uo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var so=[];function co(){for(var e=0;e<so.length;e++)so[e]._workInProgressVersionPrimary=null;so.length=0}var fo=w.ReactCurrentDispatcher,po=w.ReactCurrentBatchConfig,mo=0,ho=null,yo=null,vo=null,go=!1,bo=!1,wo=0,ko=0;function So(){throw Error(a(321))}function xo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function Eo(e,t,n,r,l,o){if(mo=o,ho=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,fo.current=null===e||null===e.memoizedState?ii:ui,e=n(r,l),bo){o=0;do{if(bo=!1,wo=0,25<=o)throw Error(a(301));o+=1,vo=yo=null,t.updateQueue=null,fo.current=si,e=n(r,l)}while(bo)}if(fo.current=oi,t=null!==yo&&null!==yo.next,mo=0,vo=yo=ho=null,go=!1,t)throw Error(a(300));return e}function Co(){var e=0!==wo;return wo=0,e}function _o(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===vo?ho.memoizedState=vo=e:vo=vo.next=e,vo}function Po(){if(null===yo){var e=ho.alternate;e=null!==e?e.memoizedState:null}else e=yo.next;var t=null===vo?ho.memoizedState:vo.next;if(null!==t)vo=t,yo=e;else{if(null===e)throw Error(a(310));e={memoizedState:(yo=e).memoizedState,baseState:yo.baseState,baseQueue:yo.baseQueue,queue:yo.queue,next:null},null===vo?ho.memoizedState=vo=e:vo=vo.next=e}return vo}function Oo(e,t){return"function"==typeof t?t(e):t}function No(e){var t=Po(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=yo,l=r.baseQueue,o=n.pending;if(null!==o){if(null!==l){var i=l.next;l.next=o.next,o.next=i}r.baseQueue=l=o,n.pending=null}if(null!==l){o=l.next,r=r.baseState;var u=i=null,s=null,c=o;do{var f=c.lane;if((mo&f)===f)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(u=s=d,i=r):s=s.next=d,ho.lanes|=f,Iu|=f}c=c.next}while(null!==c&&c!==o);null===s?i=r:s.next=u,ir(r,t.memoizedState)||(wi=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=s,n.lastRenderedState=r}if(null!==(e=n.interleaved)){l=e;do{o=l.lane,ho.lanes|=o,Iu|=o,l=l.next}while(l!==e)}else null===l&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function To(e){var t=Po(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,l=n.pending,o=t.memoizedState;if(null!==l){n.pending=null;var i=l=l.next;do{o=e(o,i.action),i=i.next}while(i!==l);ir(o,t.memoizedState)||(wi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function zo(){}function Ro(e,t){var n=ho,r=Po(),l=t(),o=!ir(r.memoizedState,l);if(o&&(r.memoizedState=l,wi=!0),r=r.queue,Vo(jo.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==vo&&1&vo.memoizedState.tag){if(n.flags|=2048,Do(9,Mo.bind(null,n,r,l,t),void 0,null),null===Tu)throw Error(a(349));0!=(30&mo)||Ao(n,t,l)}return l}function Ao(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ho.updateQueue)?(t={lastEffect:null,stores:null},ho.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Mo(e,t,n,r){t.value=n,t.getSnapshot=r,Lo(t)&&Io(e)}function jo(e,t,n){return n((function(){Lo(t)&&Io(e)}))}function Lo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ir(e,n)}catch(e){return!0}}function Io(e){var t=Na(e,1);null!==t&&rs(t,e,1,-1)}function Fo(e){var t=_o();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Oo,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,ho,e),[t.memoizedState,e]}function Do(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ho.updateQueue)?(t={lastEffect:null,stores:null},ho.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Bo(){return Po().memoizedState}function Wo(e,t,n,r){var l=_o();ho.flags|=e,l.memoizedState=Do(1|t,n,void 0,void 0===r?null:r)}function Uo(e,t,n,r){var l=Po();r=void 0===r?null:r;var a=void 0;if(null!==yo){var o=yo.memoizedState;if(a=o.destroy,null!==r&&xo(r,o.deps))return void(l.memoizedState=Do(t,n,a,r))}ho.flags|=e,l.memoizedState=Do(1|t,n,a,r)}function Ho(e,t){return Wo(8390656,8,e,t)}function Vo(e,t){return Uo(2048,8,e,t)}function $o(e,t){return Uo(4,2,e,t)}function Qo(e,t){return Uo(4,4,e,t)}function qo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ko(e,t,n){return n=null!=n?n.concat([e]):null,Uo(4,4,qo.bind(null,t,e),n)}function Go(){}function Yo(e,t){var n=Po();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Xo(e,t){var n=Po();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Zo(e,t,n){return 0==(21&mo)?(e.baseState&&(e.baseState=!1,wi=!0),e.memoizedState=n):(ir(n,t)||(n=ht(),ho.lanes|=n,Iu|=n,e.baseState=!0),t)}function Jo(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=po.transition;po.transition={};try{e(!1),t()}finally{bt=n,po.transition=r}}function ei(){return Po().memoizedState}function ti(e,t,n){var r=ns(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},ri(e)?li(t,n):null!==(n=Oa(e,t,n,r))&&(rs(n,e,r,ts()),ai(n,t,r))}function ni(e,t,n){var r=ns(e),l={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(ri(e))li(t,l);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=a(o,n);if(l.hasEagerState=!0,l.eagerState=i,ir(i,o)){var u=t.interleaved;return null===u?(l.next=l,Pa(t)):(l.next=u.next,u.next=l),void(t.interleaved=l)}}catch(e){}null!==(n=Oa(e,t,l,r))&&(rs(n,e,r,l=ts()),ai(n,t,r))}}function ri(e){var t=e.alternate;return e===ho||null!==t&&t===ho}function li(e,t){bo=go=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function ai(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,gt(e,n)}}var oi={readContext:Ca,useCallback:So,useContext:So,useEffect:So,useImperativeHandle:So,useInsertionEffect:So,useLayoutEffect:So,useMemo:So,useReducer:So,useRef:So,useState:So,useDebugValue:So,useDeferredValue:So,useTransition:So,useMutableSource:So,useSyncExternalStore:So,useId:So,unstable_isNewReconciler:!1},ii={readContext:Ca,useCallback:function(e,t){return _o().memoizedState=[e,void 0===t?null:t],e},useContext:Ca,useEffect:Ho,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Wo(4194308,4,qo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Wo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Wo(4,2,e,t)},useMemo:function(e,t){var n=_o();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=_o();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ti.bind(null,ho,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},_o().memoizedState=e},useState:Fo,useDebugValue:Go,useDeferredValue:function(e){return _o().memoizedState=e},useTransition:function(){var e=Fo(!1),t=e[0];return e=Jo.bind(null,e[1]),_o().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ho,l=_o();if(la){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===Tu)throw Error(a(349));0!=(30&mo)||Ao(r,t,n)}l.memoizedState=n;var o={value:n,getSnapshot:t};return l.queue=o,Ho(jo.bind(null,r,o,e),[e]),r.flags|=2048,Do(9,Mo.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=_o(),t=Tu.identifierPrefix;if(la){var n=Xl;t=":"+t+"R"+(n=(Yl&~(1<<32-ot(Yl)-1)).toString(32)+n),0<(n=wo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ko++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ui={readContext:Ca,useCallback:Yo,useContext:Ca,useEffect:Vo,useImperativeHandle:Ko,useInsertionEffect:$o,useLayoutEffect:Qo,useMemo:Xo,useReducer:No,useRef:Bo,useState:function(){return No(Oo)},useDebugValue:Go,useDeferredValue:function(e){return Zo(Po(),yo.memoizedState,e)},useTransition:function(){return[No(Oo)[0],Po().memoizedState]},useMutableSource:zo,useSyncExternalStore:Ro,useId:ei,unstable_isNewReconciler:!1},si={readContext:Ca,useCallback:Yo,useContext:Ca,useEffect:Vo,useImperativeHandle:Ko,useInsertionEffect:$o,useLayoutEffect:Qo,useMemo:Xo,useReducer:To,useRef:Bo,useState:function(){return To(Oo)},useDebugValue:Go,useDeferredValue:function(e){var t=Po();return null===yo?t.memoizedState=e:Zo(t,yo.memoizedState,e)},useTransition:function(){return[To(Oo)[0],Po().memoizedState]},useMutableSource:zo,useSyncExternalStore:Ro,useId:ei,unstable_isNewReconciler:!1};function ci(e,t){try{var n="",r=t;do{n+=W(r),r=r.return}while(r);var l=n}catch(e){l="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:l,digest:null}}function fi(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function di(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var pi="function"==typeof WeakMap?WeakMap:Map;function mi(e,t,n){(n=Aa(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){$u||($u=!0,Qu=r),di(0,t)},n}function hi(e,t,n){(n=Aa(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var l=t.value;n.payload=function(){return r(l)},n.callback=function(){di(0,t)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){di(0,t),"function"!=typeof r&&(null===qu?qu=new Set([this]):qu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function yi(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pi;var l=new Set;r.set(t,l)}else void 0===(l=r.get(t))&&(l=new Set,r.set(t,l));l.has(n)||(l.add(n),e=_s.bind(null,e,t,n),t.then(e,e))}function vi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function gi(e,t,n,r,l){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Aa(-1,1)).tag=2,Ma(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=l,e)}var bi=w.ReactCurrentOwner,wi=!1;function ki(e,t,n,r){t.child=null===e?Xa(t,null,n,r):Ya(t,e.child,n,r)}function Si(e,t,n,r,l){n=n.render;var a=t.ref;return Ea(t,l),r=Eo(e,t,n,r,a,l),n=Co(),null===e||wi?(la&&n&&ea(t),t.flags|=1,ki(e,t,r,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,$i(e,t,l))}function xi(e,t,n,r,l){if(null===e){var a=n.type;return"function"!=typeof a||As(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=js(n.type,null,r,t,t.mode,l)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ei(e,t,a,r,l))}if(a=e.child,0==(e.lanes&l)){var o=a.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)return $i(e,t,l)}return t.flags|=1,(e=Ms(a,r)).ref=t.ref,e.return=t,t.child=e}function Ei(e,t,n,r,l){if(null!==e){var a=e.memoizedProps;if(ur(a,r)&&e.ref===t.ref){if(wi=!1,t.pendingProps=r=a,0==(e.lanes&l))return t.lanes=e.lanes,$i(e,t,l);0!=(131072&e.flags)&&(wi=!0)}}return Pi(e,t,n,r,l)}function Ci(e,t,n){var r=t.pendingProps,l=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},_l(Mu,Au),Au|=n;else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,_l(Mu,Au),Au|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:n,_l(Mu,Au),Au|=r}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,_l(Mu,Au),Au|=r;return ki(e,t,l,n),t.child}function _i(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Pi(e,t,n,r,l){var a=Rl(n)?Tl:Ol.current;return a=zl(t,a),Ea(t,l),n=Eo(e,t,n,r,a,l),r=Co(),null===e||wi?(la&&r&&ea(t),t.flags|=1,ki(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~l,$i(e,t,l))}function Oi(e,t,n,r,l){if(Rl(n)){var a=!0;Ll(t)}else a=!1;if(Ea(t,l),null===t.stateNode)Vi(e,t),Ha(t,n,r),$a(t,n,r,l),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,s=n.contextType;s="object"==typeof s&&null!==s?Ca(s):zl(t,s=Rl(n)?Tl:Ol.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||u!==s)&&Va(t,o,r,s),Ta=!1;var d=t.memoizedState;o.state=d,Ia(t,r,o,l),u=t.memoizedState,i!==r||d!==u||Nl.current||Ta?("function"==typeof c&&(Ba(t,n,c,r),u=t.memoizedState),(i=Ta||Ua(t,n,i,r,d,u,s))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=s,r=i):("function"==typeof o.componentDidMount&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,Ra(e,t),i=t.memoizedProps,s=t.type===t.elementType?i:ya(t.type,i),o.props=s,f=t.pendingProps,d=o.context,u="object"==typeof(u=n.contextType)&&null!==u?Ca(u):zl(t,u=Rl(n)?Tl:Ol.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==u)&&Va(t,o,r,u),Ta=!1,d=t.memoizedState,o.state=d,Ia(t,r,o,l);var m=t.memoizedState;i!==f||d!==m||Nl.current||Ta?("function"==typeof p&&(Ba(t,n,p,r),m=t.memoizedState),(s=Ta||Ua(t,n,s,r,d,m,u)||!1)?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,m,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=m),o.props=r,o.state=m,o.context=u,r=s):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Ni(e,t,n,r,a,l)}function Ni(e,t,n,r,l,a){_i(e,t);var o=0!=(128&t.flags);if(!r&&!o)return l&&Il(t,n,!1),$i(e,t,a);r=t.stateNode,bi.current=t;var i=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=Ya(t,e.child,null,a),t.child=Ya(t,null,i,a)):ki(e,t,i,a),t.memoizedState=r.state,l&&Il(t,n,!0),t.child}function Ti(e){var t=e.stateNode;t.pendingContext?Ml(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ml(0,t.context,!1),ro(e,t.containerInfo)}function zi(e,t,n,r,l){return pa(),ma(l),t.flags|=256,ki(e,t,n,r),t.child}var Ri,Ai,Mi,ji,Li={dehydrated:null,treeContext:null,retryLane:0};function Ii(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fi(e,t,n){var r,l=t.pendingProps,o=io.current,i=!1,u=0!=(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),_l(io,1&o),null===e)return sa(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=l.children,e=l.fallback,i?(l=t.mode,i=t.child,u={mode:"hidden",children:u},0==(1&l)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Is(u,l,0,null),e=Ls(e,l,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Ii(n),t.memoizedState=Li,e):Di(t,u));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,l,o,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,r=fi(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,l=t.mode,r=Is({mode:"visible",children:r.children},l,0,null),(o=Ls(o,l,i,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!=(1&t.mode)&&Ya(t,e.child,null,i),t.child.memoizedState=Ii(i),t.memoizedState=Li,o);if(0==(1&t.mode))return Bi(e,t,i,null);if("$!"===l.data){if(r=l.nextSibling&&l.nextSibling.dataset)var u=r.dgst;return r=u,Bi(e,t,i,r=fi(o=Error(a(419)),r,void 0))}if(u=0!=(i&e.childLanes),wi||u){if(null!==(r=Tu)){switch(i&-i){case 4:l=2;break;case 16:l=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:l=32;break;case 536870912:l=268435456;break;default:l=0}0!==(l=0!=(l&(r.suspendedLanes|i))?0:l)&&l!==o.retryLane&&(o.retryLane=l,Na(e,l),rs(r,e,l,-1))}return ys(),Bi(e,t,i,r=fi(Error(a(421))))}return"$?"===l.data?(t.flags|=128,t.child=e.child,t=Os.bind(null,e),l._reactRetry=t,null):(e=o.treeContext,ra=sl(l.nextSibling),na=t,la=!0,aa=null,null!==e&&(ql[Kl++]=Yl,ql[Kl++]=Xl,ql[Kl++]=Gl,Yl=e.id,Xl=e.overflow,Gl=t),(t=Di(t,r.children)).flags|=4096,t)}(e,t,u,l,r,o,n);if(i){i=l.fallback,u=t.mode,r=(o=e.child).sibling;var s={mode:"hidden",children:l.children};return 0==(1&u)&&t.child!==o?((l=t.child).childLanes=0,l.pendingProps=s,t.deletions=null):(l=Ms(o,s)).subtreeFlags=14680064&o.subtreeFlags,null!==r?i=Ms(r,i):(i=Ls(i,u,n,null)).flags|=2,i.return=t,l.return=t,l.sibling=i,t.child=l,l=i,i=t.child,u=null===(u=e.child.memoizedState)?Ii(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~n,t.memoizedState=Li,l}return e=(i=e.child).sibling,l=Ms(i,{mode:"visible",children:l.children}),0==(1&t.mode)&&(l.lanes=n),l.return=t,l.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=l,t.memoizedState=null,l}function Di(e,t){return(t=Is({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,r){return null!==r&&ma(r),Ya(t,e.child,null,n),(e=Di(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),xa(e.return,t,n)}function Ui(e,t,n,r,l){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:l}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=l)}function Hi(e,t,n){var r=t.pendingProps,l=r.revealOrder,a=r.tail;if(ki(e,t,r.children,n),0!=(2&(r=io.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(_l(io,r),0==(1&t.mode))t.memoizedState=null;else switch(l){case"forwards":for(n=t.child,l=null;null!==n;)null!==(e=n.alternate)&&null===uo(e)&&(l=n),n=n.sibling;null===(n=l)?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),Ui(t,!1,l,n,a);break;case"backwards":for(n=null,l=t.child,t.child=null;null!==l;){if(null!==(e=l.alternate)&&null===uo(e)){t.child=l;break}e=l.sibling,l.sibling=n,n=l,l=e}Ui(t,!0,n,null,a);break;case"together":Ui(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Vi(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function $i(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Iu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Ms(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ms(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Qi(e,t){if(!la)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var l=e.child;null!==l;)n|=l.lanes|l.childLanes,r|=14680064&l.subtreeFlags,r|=14680064&l.flags,l.return=e,l=l.sibling;else for(l=e.child;null!==l;)n|=l.lanes|l.childLanes,r|=l.subtreeFlags,r|=l.flags,l.return=e,l=l.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Ki(e,t,n){var r=t.pendingProps;switch(ta(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Rl(t.type)&&Al(),qi(t),null;case 3:return r=t.stateNode,lo(),Cl(Nl),Cl(Ol),co(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fa(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==aa&&(is(aa),aa=null))),Ai(e,t),qi(t),null;case 5:oo(t);var l=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)Mi(e,t,n,r,l),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return qi(t),null}if(e=no(Ja.current),fa(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[dl]=t,r[pl]=o,e=0!=(1&t.mode),n){case"dialog":Dr("cancel",r),Dr("close",r);break;case"iframe":case"object":case"embed":Dr("load",r);break;case"video":case"audio":for(l=0;l<jr.length;l++)Dr(jr[l],r);break;case"source":Dr("error",r);break;case"img":case"image":case"link":Dr("error",r),Dr("load",r);break;case"details":Dr("toggle",r);break;case"input":Y(r,o),Dr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Dr("invalid",r);break;case"textarea":le(r,o),Dr("invalid",r)}for(var u in ge(n,o),l=null,o)if(o.hasOwnProperty(u)){var s=o[u];"children"===u?"string"==typeof s?r.textContent!==s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),l=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),l=["children",""+s]):i.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&Dr("scroll",r)}switch(n){case"input":Q(r),J(r,o,!0);break;case"textarea":Q(r),oe(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Jr)}r=l,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===l.nodeType?l:l.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[dl]=t,e[pl]=r,Ri(e,t,!1,!1),t.stateNode=e;e:{switch(u=be(n,r),n){case"dialog":Dr("cancel",e),Dr("close",e),l=r;break;case"iframe":case"object":case"embed":Dr("load",e),l=r;break;case"video":case"audio":for(l=0;l<jr.length;l++)Dr(jr[l],e);l=r;break;case"source":Dr("error",e),l=r;break;case"img":case"image":case"link":Dr("error",e),Dr("load",e),l=r;break;case"details":Dr("toggle",e),l=r;break;case"input":Y(e,r),l=G(e,r),Dr("invalid",e);break;case"option":default:l=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=I({},r,{value:void 0}),Dr("invalid",e);break;case"textarea":le(e,r),l=re(e,r),Dr("invalid",e)}for(o in ge(n,l),s=l)if(s.hasOwnProperty(o)){var c=s[o];"style"===o?ye(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===o?"string"==typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Dr("scroll",e):null!=c&&b(e,o,c,u))}switch(n){case"input":Q(e),J(e,r,!1);break;case"textarea":Q(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ne(e,!!r.multiple,o,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)ji(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));if(n=no(to.current),no(Ja.current),fa(t)){if(r=t.stateNode,n=t.memoizedProps,r[dl]=t,(o=r.nodeValue!==n)&&null!==(e=na))switch(e.tag){case 3:Zr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!=(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[dl]=t,t.stateNode=r}return qi(t),null;case 13:if(Cl(io),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(la&&null!==ra&&0!=(1&t.mode)&&0==(128&t.flags))da(),pa(),t.flags|=98560,o=!1;else if(o=fa(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(a(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(a(317));o[dl]=t}else pa(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==aa&&(is(aa),aa=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&io.current)?0===ju&&(ju=3):ys())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return lo(),Ai(e,t),null===e&&Ur(t.stateNode.containerInfo),qi(t),null;case 10:return Sa(t.type._context),qi(t),null;case 19:if(Cl(io),null===(o=t.memoizedState))return qi(t),null;if(r=0!=(128&t.flags),null===(u=o.rendering))if(r)Qi(o,!1);else{if(0!==ju||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=uo(e))){for(t.flags|=128,Qi(o,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(u=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=u.childLanes,o.lanes=u.lanes,o.child=u.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=u.memoizedProps,o.memoizedState=u.memoizedState,o.updateQueue=u.updateQueue,o.type=u.type,e=u.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return _l(io,1&io.current|2),t.child}e=e.sibling}null!==o.tail&&Xe()>Hu&&(t.flags|=128,r=!0,Qi(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=uo(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Qi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!u.alternate&&!la)return qi(t),null}else 2*Xe()-o.renderingStartTime>Hu&&1073741824!==n&&(t.flags|=128,r=!0,Qi(o,!1),t.lanes=4194304);o.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=o.last)?n.sibling=u:t.child=u,o.last=u)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Xe(),t.sibling=null,n=io.current,_l(io,r?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return ds(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Au)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Gi(e,t){switch(ta(t),t.tag){case 1:return Rl(t.type)&&Al(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return lo(),Cl(Nl),Cl(Ol),co(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Cl(io),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));pa()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Cl(io),null;case 4:return lo(),null;case 10:return Sa(t.type._context),null;case 22:case 23:return ds(),null;default:return null}}Ri=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ai=function(){},Mi=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,no(Ja.current);var a,o=null;switch(n){case"input":l=G(e,l),r=G(e,r),o=[];break;case"select":l=I({},l,{value:void 0}),r=I({},r,{value:void 0}),o=[];break;case"textarea":l=re(e,l),r=re(e,r),o=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ge(n,r),n=null,l)if(!r.hasOwnProperty(c)&&l.hasOwnProperty(c)&&null!=l[c])if("style"===c){var u=l[c];for(a in u)u.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(i.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var s=r[c];if(u=null!=l?l[c]:void 0,r.hasOwnProperty(c)&&s!==u&&(null!=s||null!=u))if("style"===c)if(u){for(a in u)!u.hasOwnProperty(a)||s&&s.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in s)s.hasOwnProperty(a)&&u[a]!==s[a]&&(n||(n={}),n[a]=s[a])}else n||(o||(o=[]),o.push(c,n)),n=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(o=o||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(o=o||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(i.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&Dr("scroll",e),o||u===s||(o=[])):(o=o||[]).push(c,s))}n&&(o=o||[]).push("style",n);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},ji=function(e,t,n,r){n!==r&&(t.flags|=4)};var Yi=!1,Xi=!1,Zi="function"==typeof WeakSet?WeakSet:Set,Ji=null;function eu(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Cs(e,t,n)}else n.current=null}function tu(e,t,n){try{n()}catch(n){Cs(e,t,n)}}var nu=!1;function ru(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var l=r=r.next;do{if((l.tag&e)===e){var a=l.destroy;l.destroy=void 0,void 0!==a&&tu(t,n,a)}l=l.next}while(l!==r)}}function lu(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function au(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ou(e){var t=e.alternate;null!==t&&(e.alternate=null,ou(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[dl],delete t[pl],delete t[hl],delete t[yl],delete t[vl]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function iu(e){return 5===e.tag||3===e.tag||4===e.tag}function uu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||iu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function su(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}function cu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var fu=null,du=!1;function pu(e,t,n){for(n=n.child;null!==n;)mu(e,t,n),n=n.sibling}function mu(e,t,n){if(at&&"function"==typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(lt,n)}catch(e){}switch(n.tag){case 5:Xi||eu(n,t);case 6:var r=fu,l=du;fu=null,pu(e,t,n),du=l,null!==(fu=r)&&(du?(e=fu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):fu.removeChild(n.stateNode));break;case 18:null!==fu&&(du?(e=fu,n=n.stateNode,8===e.nodeType?ul(e.parentNode,n):1===e.nodeType&&ul(e,n),Ut(e)):ul(fu,n.stateNode));break;case 4:r=fu,l=du,fu=n.stateNode.containerInfo,du=!0,pu(e,t,n),fu=r,du=l;break;case 0:case 11:case 14:case 15:if(!Xi&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){l=r=r.next;do{var a=l,o=a.destroy;a=a.tag,void 0!==o&&(0!=(2&a)||0!=(4&a))&&tu(n,t,o),l=l.next}while(l!==r)}pu(e,t,n);break;case 1:if(!Xi&&(eu(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Cs(n,t,e)}pu(e,t,n);break;case 21:pu(e,t,n);break;case 22:1&n.mode?(Xi=(r=Xi)||null!==n.memoizedState,pu(e,t,n),Xi=r):pu(e,t,n);break;default:pu(e,t,n)}}function hu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var r=Ns.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function yu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var l=n[r];try{var o=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:fu=u.stateNode,du=!1;break e;case 3:case 4:fu=u.stateNode.containerInfo,du=!0;break e}u=u.return}if(null===fu)throw Error(a(160));mu(o,i,l),fu=null,du=!1;var s=l.alternate;null!==s&&(s.return=null),l.return=null}catch(e){Cs(l,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)vu(t,e),t=t.sibling}function vu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(yu(t,e),gu(e),4&r){try{ru(3,e,e.return),lu(3,e)}catch(t){Cs(e,e.return,t)}try{ru(5,e,e.return)}catch(t){Cs(e,e.return,t)}}break;case 1:yu(t,e),gu(e),512&r&&null!==n&&eu(n,n.return);break;case 5:if(yu(t,e),gu(e),512&r&&null!==n&&eu(n,n.return),32&e.flags){var l=e.stateNode;try{de(l,"")}catch(t){Cs(e,e.return,t)}}if(4&r&&null!=(l=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,u=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===u&&"radio"===o.type&&null!=o.name&&X(l,o),be(u,i);var c=be(u,o);for(i=0;i<s.length;i+=2){var f=s[i],d=s[i+1];"style"===f?ye(l,d):"dangerouslySetInnerHTML"===f?fe(l,d):"children"===f?de(l,d):b(l,f,d,c)}switch(u){case"input":Z(l,o);break;case"textarea":ae(l,o);break;case"select":var p=l._wrapperState.wasMultiple;l._wrapperState.wasMultiple=!!o.multiple;var m=o.value;null!=m?ne(l,!!o.multiple,m,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(l,!!o.multiple,o.defaultValue,!0):ne(l,!!o.multiple,o.multiple?[]:"",!1))}l[pl]=o}catch(t){Cs(e,e.return,t)}}break;case 6:if(yu(t,e),gu(e),4&r){if(null===e.stateNode)throw Error(a(162));l=e.stateNode,o=e.memoizedProps;try{l.nodeValue=o}catch(t){Cs(e,e.return,t)}}break;case 3:if(yu(t,e),gu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(t){Cs(e,e.return,t)}break;case 4:default:yu(t,e),gu(e);break;case 13:yu(t,e),gu(e),8192&(l=e.child).flags&&(o=null!==l.memoizedState,l.stateNode.isHidden=o,!o||null!==l.alternate&&null!==l.alternate.memoizedState||(Uu=Xe())),4&r&&hu(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(Xi=(c=Xi)||f,yu(t,e),Xi=c):yu(t,e),gu(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&0!=(1&e.mode))for(Ji=e,f=e.child;null!==f;){for(d=Ji=f;null!==Ji;){switch(m=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:ru(4,p,p.return);break;case 1:eu(p,p.return);var h=p.stateNode;if("function"==typeof h.componentWillUnmount){r=p,n=p.return;try{t=r,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(e){Cs(r,n,e)}}break;case 5:eu(p,p.return);break;case 22:if(null!==p.memoizedState){Su(d);continue}}null!==m?(m.return=p,Ji=m):Su(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{l=d.stateNode,c?"function"==typeof(o=l.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=d.stateNode,i=null!=(s=d.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,u.style.display=he("display",i))}catch(t){Cs(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(t){Cs(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:yu(t,e),gu(e),4&r&&hu(e);case 21:}}function gu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(iu(n)){var r=n;break e}n=n.return}throw Error(a(160))}switch(r.tag){case 5:var l=r.stateNode;32&r.flags&&(de(l,""),r.flags&=-33),cu(e,uu(e),l);break;case 3:case 4:var o=r.stateNode.containerInfo;su(e,uu(e),o);break;default:throw Error(a(161))}}catch(t){Cs(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bu(e,t,n){Ji=e,wu(e,t,n)}function wu(e,t,n){for(var r=0!=(1&e.mode);null!==Ji;){var l=Ji,a=l.child;if(22===l.tag&&r){var o=null!==l.memoizedState||Yi;if(!o){var i=l.alternate,u=null!==i&&null!==i.memoizedState||Xi;i=Yi;var s=Xi;if(Yi=o,(Xi=u)&&!s)for(Ji=l;null!==Ji;)u=(o=Ji).child,22===o.tag&&null!==o.memoizedState?xu(l):null!==u?(u.return=o,Ji=u):xu(l);for(;null!==a;)Ji=a,wu(a,t,n),a=a.sibling;Ji=l,Yi=i,Xi=s}ku(e)}else 0!=(8772&l.subtreeFlags)&&null!==a?(a.return=l,Ji=a):ku(e)}}function ku(e){for(;null!==Ji;){var t=Ji;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xi||lu(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Xi)if(null===n)r.componentDidMount();else{var l=t.elementType===t.type?n.memoizedProps:ya(t.type,n.memoizedProps);r.componentDidUpdate(l,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Fa(t,o,r);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Fa(t,i,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var s=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&n.focus();break;case"img":s.src&&(n.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Ut(d)}}}break;default:throw Error(a(163))}Xi||512&t.flags&&au(t)}catch(e){Cs(t,t.return,e)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function Su(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function xu(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{lu(4,t)}catch(e){Cs(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var l=t.return;try{r.componentDidMount()}catch(e){Cs(t,l,e)}}var a=t.return;try{au(t)}catch(e){Cs(t,a,e)}break;case 5:var o=t.return;try{au(t)}catch(e){Cs(t,o,e)}}}catch(e){Cs(t,t.return,e)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Eu,Cu=Math.ceil,_u=w.ReactCurrentDispatcher,Pu=w.ReactCurrentOwner,Ou=w.ReactCurrentBatchConfig,Nu=0,Tu=null,zu=null,Ru=0,Au=0,Mu=El(0),ju=0,Lu=null,Iu=0,Fu=0,Du=0,Bu=null,Wu=null,Uu=0,Hu=1/0,Vu=null,$u=!1,Qu=null,qu=null,Ku=!1,Gu=null,Yu=0,Xu=0,Zu=null,Ju=-1,es=0;function ts(){return 0!=(6&Nu)?Xe():-1!==Ju?Ju:Ju=Xe()}function ns(e){return 0==(1&e.mode)?1:0!=(2&Nu)&&0!==Ru?Ru&-Ru:null!==ha.transition?(0===es&&(es=ht()),es):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function rs(e,t,n,r){if(50<Xu)throw Xu=0,Zu=null,Error(a(185));vt(e,n,r),0!=(2&Nu)&&e===Tu||(e===Tu&&(0==(2&Nu)&&(Fu|=n),4===ju&&us(e,Ru)),ls(e,r),1===n&&0===Nu&&0==(1&t.mode)&&(Hu=Xe()+500,Dl&&Ul()))}function ls(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,l=e.expirationTimes,a=e.pendingLanes;0<a;){var o=31-ot(a),i=1<<o,u=l[o];-1===u?0!=(i&n)&&0==(i&r)||(l[o]=pt(i,t)):u<=t&&(e.expiredLanes|=i),a&=~i}}(e,t);var r=dt(e,e===Tu?Ru:0);if(0===r)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Dl=!0,Wl(e)}(ss.bind(null,e)):Wl(ss.bind(null,e)),ol((function(){0==(6&Nu)&&Ul()})),n=null;else{switch(wt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Ts(n,as.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function as(e,t){if(Ju=-1,es=0,0!=(6&Nu))throw Error(a(327));var n=e.callbackNode;if(xs()&&e.callbackNode!==n)return null;var r=dt(e,e===Tu?Ru:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=vs(e,r);else{t=r;var l=Nu;Nu|=2;var o=hs();for(Tu===e&&Ru===t||(Vu=null,Hu=Xe()+500,ps(e,t));;)try{bs();break}catch(t){ms(e,t)}ka(),_u.current=o,Nu=l,null!==zu?t=0:(Tu=null,Ru=0,t=ju)}if(0!==t){if(2===t&&0!==(l=mt(e))&&(r=l,t=os(e,l)),1===t)throw n=Lu,ps(e,0),us(e,r),ls(e,Xe()),n;if(6===t)us(e,r);else{if(l=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var l=n[r],a=l.getSnapshot;l=l.value;try{if(!ir(a(),l))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(l)&&(2===(t=vs(e,r))&&0!==(o=mt(e))&&(r=o,t=os(e,o)),1===t))throw n=Lu,ps(e,0),us(e,r),ls(e,Xe()),n;switch(e.finishedWork=l,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:Ss(e,Wu,Vu);break;case 3:if(us(e,r),(130023424&r)===r&&10<(t=Uu+500-Xe())){if(0!==dt(e,0))break;if(((l=e.suspendedLanes)&r)!==r){ts(),e.pingedLanes|=e.suspendedLanes&l;break}e.timeoutHandle=rl(Ss.bind(null,e,Wu,Vu),t);break}Ss(e,Wu,Vu);break;case 4:if(us(e,r),(4194240&r)===r)break;for(t=e.eventTimes,l=-1;0<r;){var i=31-ot(r);o=1<<i,(i=t[i])>l&&(l=i),r&=~o}if(r=l,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cu(r/1960))-r)){e.timeoutHandle=rl(Ss.bind(null,e,Wu,Vu),r);break}Ss(e,Wu,Vu);break;default:throw Error(a(329))}}}return ls(e,Xe()),e.callbackNode===n?as.bind(null,e):null}function os(e,t){var n=Bu;return e.current.memoizedState.isDehydrated&&(ps(e,t).flags|=256),2!==(e=vs(e,t))&&(t=Wu,Wu=n,null!==t&&is(t)),e}function is(e){null===Wu?Wu=e:Wu.push.apply(Wu,e)}function us(e,t){for(t&=~Du,t&=~Fu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),r=1<<n;e[n]=-1,t&=~r}}function ss(e){if(0!=(6&Nu))throw Error(a(327));xs();var t=dt(e,0);if(0==(1&t))return ls(e,Xe()),null;var n=vs(e,t);if(0!==e.tag&&2===n){var r=mt(e);0!==r&&(t=r,n=os(e,r))}if(1===n)throw n=Lu,ps(e,0),us(e,t),ls(e,Xe()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ss(e,Wu,Vu),ls(e,Xe()),null}function cs(e,t){var n=Nu;Nu|=1;try{return e(t)}finally{0===(Nu=n)&&(Hu=Xe()+500,Dl&&Ul())}}function fs(e){null!==Gu&&0===Gu.tag&&0==(6&Nu)&&xs();var t=Nu;Nu|=1;var n=Ou.transition,r=bt;try{if(Ou.transition=null,bt=1,e)return e()}finally{bt=r,Ou.transition=n,0==(6&(Nu=t))&&Ul()}}function ds(){Au=Mu.current,Cl(Mu)}function ps(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ll(n)),null!==zu)for(n=zu.return;null!==n;){var r=n;switch(ta(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Al();break;case 3:lo(),Cl(Nl),Cl(Ol),co();break;case 5:oo(r);break;case 4:lo();break;case 13:case 19:Cl(io);break;case 10:Sa(r.type._context);break;case 22:case 23:ds()}n=n.return}if(Tu=e,zu=e=Ms(e.current,null),Ru=Au=t,ju=0,Lu=null,Du=Fu=Iu=0,Wu=Bu=null,null!==_a){for(t=0;t<_a.length;t++)if(null!==(r=(n=_a[t]).interleaved)){n.interleaved=null;var l=r.next,a=n.pending;if(null!==a){var o=a.next;a.next=l,r.next=o}n.pending=r}_a=null}return e}function ms(e,t){for(;;){var n=zu;try{if(ka(),fo.current=oi,go){for(var r=ho.memoizedState;null!==r;){var l=r.queue;null!==l&&(l.pending=null),r=r.next}go=!1}if(mo=0,vo=yo=ho=null,bo=!1,wo=0,Pu.current=null,null===n||null===n.return){ju=1,Lu=t,zu=null;break}e:{var o=e,i=n.return,u=n,s=t;if(t=Ru,u.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s,f=u,d=f.tag;if(0==(1&f.mode)&&(0===d||11===d||15===d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var m=vi(i);if(null!==m){m.flags&=-257,gi(m,i,u,0,t),1&m.mode&&yi(o,c,t),s=c;var h=(t=m).updateQueue;if(null===h){var y=new Set;y.add(s),t.updateQueue=y}else h.add(s);break e}if(0==(1&t)){yi(o,c,t),ys();break e}s=Error(a(426))}else if(la&&1&u.mode){var v=vi(i);if(null!==v){0==(65536&v.flags)&&(v.flags|=256),gi(v,i,u,0,t),ma(ci(s,u));break e}}o=s=ci(s,u),4!==ju&&(ju=2),null===Bu?Bu=[o]:Bu.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,La(o,mi(0,s,t));break e;case 1:u=s;var g=o.type,b=o.stateNode;if(0==(128&o.flags)&&("function"==typeof g.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===qu||!qu.has(b)))){o.flags|=65536,t&=-t,o.lanes|=t,La(o,hi(o,u,t));break e}}o=o.return}while(null!==o)}ks(n)}catch(e){t=e,zu===n&&null!==n&&(zu=n=n.return);continue}break}}function hs(){var e=_u.current;return _u.current=oi,null===e?oi:e}function ys(){0!==ju&&3!==ju&&2!==ju||(ju=4),null===Tu||0==(268435455&Iu)&&0==(268435455&Fu)||us(Tu,Ru)}function vs(e,t){var n=Nu;Nu|=2;var r=hs();for(Tu===e&&Ru===t||(Vu=null,ps(e,t));;)try{gs();break}catch(t){ms(e,t)}if(ka(),Nu=n,_u.current=r,null!==zu)throw Error(a(261));return Tu=null,Ru=0,ju}function gs(){for(;null!==zu;)ws(zu)}function bs(){for(;null!==zu&&!Ge();)ws(zu)}function ws(e){var t=Eu(e.alternate,e,Au);e.memoizedProps=e.pendingProps,null===t?ks(e):zu=t,Pu.current=null}function ks(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Ki(n,t,Au)))return void(zu=n)}else{if(null!==(n=Gi(n,t)))return n.flags&=32767,void(zu=n);if(null===e)return ju=6,void(zu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(zu=t);zu=t=e}while(null!==t);0===ju&&(ju=5)}function Ss(e,t,n){var r=bt,l=Ou.transition;try{Ou.transition=null,bt=1,function(e,t,n,r){do{xs()}while(null!==Gu);if(0!=(6&Nu))throw Error(a(327));n=e.finishedWork;var l=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var l=31-ot(n),a=1<<l;t[l]=0,r[l]=-1,e[l]=-1,n&=~a}}(e,o),e===Tu&&(zu=Tu=null,Ru=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Ku||(Ku=!0,Ts(tt,(function(){return xs(),null}))),o=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||o){o=Ou.transition,Ou.transition=null;var i=bt;bt=1;var u=Nu;Nu|=4,Pu.current=null,function(e,t){if(el=Vt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var l=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(e){n=null;break e}var i=0,u=-1,s=-1,c=0,f=0,d=e,p=null;t:for(;;){for(var m;d!==n||0!==l&&3!==d.nodeType||(u=i+l),d!==o||0!==r&&3!==d.nodeType||(s=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(m=d.firstChild);)p=d,d=m;for(;;){if(d===e)break t;if(p===n&&++c===l&&(u=i),p===o&&++f===r&&(s=i),null!==(m=d.nextSibling))break;p=(d=p).parentNode}d=m}n=-1===u||-1===s?null:{start:u,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(tl={focusedElem:e,selectionRange:n},Vt=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var h=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var y=h.memoizedProps,v=h.memoizedState,g=t.stateNode,b=g.getSnapshotBeforeUpdate(t.elementType===t.type?y:ya(t.type,y),v);g.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(a(163))}}catch(e){Cs(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}h=nu,nu=!1}(e,n),vu(n,e),mr(tl),Vt=!!el,tl=el=null,e.current=n,bu(n,e,l),Ye(),Nu=u,bt=i,Ou.transition=o}else e.current=n;if(Ku&&(Ku=!1,Gu=e,Yu=l),0===(o=e.pendingLanes)&&(qu=null),function(e){if(at&&"function"==typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(lt,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),ls(e,Xe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((l=t[n]).value,{componentStack:l.stack,digest:l.digest});if($u)throw $u=!1,e=Qu,Qu=null,e;0!=(1&Yu)&&0!==e.tag&&xs(),0!=(1&(o=e.pendingLanes))?e===Zu?Xu++:(Xu=0,Zu=e):Xu=0,Ul()}(e,t,n,r)}finally{Ou.transition=l,bt=r}return null}function xs(){if(null!==Gu){var e=wt(Yu),t=Ou.transition,n=bt;try{if(Ou.transition=null,bt=16>e?16:e,null===Gu)var r=!1;else{if(e=Gu,Gu=null,Yu=0,0!=(6&Nu))throw Error(a(331));var l=Nu;for(Nu|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!=(16&Ji.flags)){var u=o.deletions;if(null!==u){for(var s=0;s<u.length;s++){var c=u[s];for(Ji=c;null!==Ji;){var f=Ji;switch(f.tag){case 0:case 11:case 15:ru(8,f,o)}var d=f.child;if(null!==d)d.return=f,Ji=d;else for(;null!==Ji;){var p=(f=Ji).sibling,m=f.return;if(ou(f),f===c){Ji=null;break}if(null!==p){p.return=m,Ji=p;break}Ji=m}}}var h=o.alternate;if(null!==h){var y=h.child;if(null!==y){h.child=null;do{var v=y.sibling;y.sibling=null,y=v}while(null!==y)}}Ji=o}}if(0!=(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!=(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:ru(9,o,o.return)}var g=o.sibling;if(null!==g){g.return=o.return,Ji=g;break e}Ji=o.return}}var b=e.current;for(Ji=b;null!==Ji;){var w=(i=Ji).child;if(0!=(2064&i.subtreeFlags)&&null!==w)w.return=i,Ji=w;else e:for(i=b;null!==Ji;){if(0!=(2048&(u=Ji).flags))try{switch(u.tag){case 0:case 11:case 15:lu(9,u)}}catch(e){Cs(u,u.return,e)}if(u===i){Ji=null;break e}var k=u.sibling;if(null!==k){k.return=u.return,Ji=k;break e}Ji=u.return}}if(Nu=l,Ul(),at&&"function"==typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(lt,e)}catch(e){}r=!0}return r}finally{bt=n,Ou.transition=t}}return!1}function Es(e,t,n){e=Ma(e,t=mi(0,t=ci(n,t),1),1),t=ts(),null!==e&&(vt(e,1,t),ls(e,t))}function Cs(e,t,n){if(3===e.tag)Es(e,e,n);else for(;null!==t;){if(3===t.tag){Es(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qu||!qu.has(r))){t=Ma(t,e=hi(t,e=ci(n,e),1),1),e=ts(),null!==t&&(vt(t,1,e),ls(t,e));break}}t=t.return}}function _s(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ts(),e.pingedLanes|=e.suspendedLanes&n,Tu===e&&(Ru&n)===n&&(4===ju||3===ju&&(130023424&Ru)===Ru&&500>Xe()-Uu?ps(e,0):Du|=n),ls(e,t)}function Ps(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var n=ts();null!==(e=Na(e,t))&&(vt(e,t,n),ls(e,n))}function Os(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Ps(e,n)}function Ns(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,l=e.memoizedState;null!==l&&(n=l.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),Ps(e,n)}function Ts(e,t){return qe(e,t)}function zs(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Rs(e,t,n,r){return new zs(e,t,n,r)}function As(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ms(e,t){var n=e.alternate;return null===n?((n=Rs(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function js(e,t,n,r,l,o){var i=2;if(r=e,"function"==typeof e)As(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Ls(n.children,l,o,t);case E:i=8,l|=8;break;case C:return(e=Rs(12,n,t,2|l)).elementType=C,e.lanes=o,e;case N:return(e=Rs(13,n,t,l)).elementType=N,e.lanes=o,e;case T:return(e=Rs(19,n,t,l)).elementType=T,e.lanes=o,e;case A:return Is(n,l,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case _:i=10;break e;case P:i=9;break e;case O:i=11;break e;case z:i=14;break e;case R:i=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Rs(i,n,t,l)).elementType=e,t.type=r,t.lanes=o,t}function Ls(e,t,n,r){return(e=Rs(7,e,r,t)).lanes=n,e}function Is(e,t,n,r){return(e=Rs(22,e,r,t)).elementType=A,e.lanes=n,e.stateNode={isHidden:!1},e}function Fs(e,t,n){return(e=Rs(6,e,null,t)).lanes=n,e}function Ds(e,t,n){return(t=Rs(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bs(e,t,n,r,l){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=yt(0),this.expirationTimes=yt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=yt(0),this.identifierPrefix=r,this.onRecoverableError=l,this.mutableSourceEagerHydrationData=null}function Ws(e,t,n,r,l,a,o,i,u){return e=new Bs(e,t,n,i,u),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Rs(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},za(a),e}function Us(e){if(!e)return Pl;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Rl(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Rl(n))return jl(e,n,t)}return t}function Hs(e,t,n,r,l,a,o,i,u){return(e=Ws(n,r,!0,e,0,a,0,i,u)).context=Us(null),n=e.current,(a=Aa(r=ts(),l=ns(n))).callback=null!=t?t:null,Ma(n,a,l),e.current.lanes=l,vt(e,l,r),ls(e,r),e}function Vs(e,t,n,r){var l=t.current,a=ts(),o=ns(l);return n=Us(n),null===t.context?t.context=n:t.pendingContext=n,(t=Aa(a,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Ma(l,t,o))&&(rs(e,l,o,a),ja(e,l,o)),o}function $s(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Qs(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qs(e,t){Qs(e,t),(e=e.alternate)&&Qs(e,t)}Eu=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Nl.current)wi=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return wi=!1,function(e,t,n){switch(t.tag){case 3:Ti(t),pa();break;case 5:ao(t);break;case 1:Rl(t.type)&&Ll(t);break;case 4:ro(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,l=t.memoizedProps.value;_l(va,r._currentValue),r._currentValue=l;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(_l(io,1&io.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Fi(e,t,n):(_l(io,1&io.current),null!==(e=$i(e,t,n))?e.sibling:null);_l(io,1&io.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Hi(e,t,n);t.flags|=128}if(null!==(l=t.memoizedState)&&(l.rendering=null,l.tail=null,l.lastEffect=null),_l(io,io.current),r)break;return null;case 22:case 23:return t.lanes=0,Ci(e,t,n)}return $i(e,t,n)}(e,t,n);wi=0!=(131072&e.flags)}else wi=!1,la&&0!=(1048576&t.flags)&&Jl(t,Ql,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Vi(e,t),e=t.pendingProps;var l=zl(t,Ol.current);Ea(t,n),l=Eo(null,t,r,e,l,n);var o=Co();return t.flags|=1,"object"==typeof l&&null!==l&&"function"==typeof l.render&&void 0===l.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Rl(r)?(o=!0,Ll(t)):o=!1,t.memoizedState=null!==l.state&&void 0!==l.state?l.state:null,za(t),l.updater=Wa,t.stateNode=l,l._reactInternals=t,$a(t,r,e,n),t=Ni(null,t,r,!0,o,n)):(t.tag=0,la&&o&&ea(t),ki(null,t,l,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Vi(e,t),e=t.pendingProps,r=(l=r._init)(r._payload),t.type=r,l=t.tag=function(e){if("function"==typeof e)return As(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===z)return 14}return 2}(r),e=ya(r,e),l){case 0:t=Pi(null,t,r,e,n);break e;case 1:t=Oi(null,t,r,e,n);break e;case 11:t=Si(null,t,r,e,n);break e;case 14:t=xi(null,t,r,ya(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,l=t.pendingProps,Pi(e,t,r,l=t.elementType===r?l:ya(r,l),n);case 1:return r=t.type,l=t.pendingProps,Oi(e,t,r,l=t.elementType===r?l:ya(r,l),n);case 3:e:{if(Ti(t),null===e)throw Error(a(387));r=t.pendingProps,l=(o=t.memoizedState).element,Ra(e,t),Ia(t,r,null,n);var i=t.memoizedState;if(r=i.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=zi(e,t,r,n,l=ci(Error(a(423)),t));break e}if(r!==l){t=zi(e,t,r,n,l=ci(Error(a(424)),t));break e}for(ra=sl(t.stateNode.containerInfo.firstChild),na=t,la=!0,aa=null,n=Xa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pa(),r===l){t=$i(e,t,n);break e}ki(e,t,r,n)}t=t.child}return t;case 5:return ao(t),null===e&&sa(t),r=t.type,l=t.pendingProps,o=null!==e?e.memoizedProps:null,i=l.children,nl(r,l)?i=null:null!==o&&nl(r,o)&&(t.flags|=32),_i(e,t),ki(e,t,i,n),t.child;case 6:return null===e&&sa(t),null;case 13:return Fi(e,t,n);case 4:return ro(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ya(t,null,r,n):ki(e,t,r,n),t.child;case 11:return r=t.type,l=t.pendingProps,Si(e,t,r,l=t.elementType===r?l:ya(r,l),n);case 7:return ki(e,t,t.pendingProps,n),t.child;case 8:case 12:return ki(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,l=t.pendingProps,o=t.memoizedProps,i=l.value,_l(va,r._currentValue),r._currentValue=i,null!==o)if(ir(o.value,i)){if(o.children===l.children&&!Nl.current){t=$i(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var u=o.dependencies;if(null!==u){i=o.child;for(var s=u.firstContext;null!==s;){if(s.context===r){if(1===o.tag){(s=Aa(-1,n&-n)).tag=2;var c=o.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?s.next=s:(s.next=f.next,f.next=s),c.pending=s}}o.lanes|=n,null!==(s=o.alternate)&&(s.lanes|=n),xa(o.return,n,t),u.lanes|=n;break}s=s.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(a(341));i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),xa(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}ki(e,t,l.children,n),t=t.child}return t;case 9:return l=t.type,r=t.pendingProps.children,Ea(t,n),r=r(l=Ca(l)),t.flags|=1,ki(e,t,r,n),t.child;case 14:return l=ya(r=t.type,t.pendingProps),xi(e,t,r,l=ya(r.type,l),n);case 15:return Ei(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,l=t.pendingProps,l=t.elementType===r?l:ya(r,l),Vi(e,t),t.tag=1,Rl(r)?(e=!0,Ll(t)):e=!1,Ea(t,n),Ha(t,r,l),$a(t,r,l,n),Ni(null,t,r,!0,e,n);case 19:return Hi(e,t,n);case 22:return Ci(e,t,n)}throw Error(a(156,t.tag))};var Ks="function"==typeof reportError?reportError:function(e){console.error(e)};function Gs(e){this._internalRoot=e}function Ys(e){this._internalRoot=e}function Xs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Js(){}function ec(e,t,n,r,l){var a=n._reactRootContainer;if(a){var o=a;if("function"==typeof l){var i=l;l=function(){var e=$s(o);i.call(e)}}Vs(t,o,e,l)}else o=function(e,t,n,r,l){if(l){if("function"==typeof r){var a=r;r=function(){var e=$s(o);a.call(e)}}var o=Hs(t,r,e,0,null,!1,0,"",Js);return e._reactRootContainer=o,e[ml]=o.current,Ur(8===e.nodeType?e.parentNode:e),fs(),o}for(;l=e.lastChild;)e.removeChild(l);if("function"==typeof r){var i=r;r=function(){var e=$s(u);i.call(e)}}var u=Ws(e,0,!1,null,0,!1,0,"",Js);return e._reactRootContainer=u,e[ml]=u.current,Ur(8===e.nodeType?e.parentNode:e),fs((function(){Vs(t,u,n,r)})),u}(n,t,e,l,r);return $s(o)}Ys.prototype.render=Gs.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Vs(e,t,null,null)},Ys.prototype.unmount=Gs.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;fs((function(){Vs(null,e,null,null)})),t[ml]=null}},Ys.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var n=0;n<At.length&&0!==t&&t<At[n].priority;n++);At.splice(n,0,e),0===n&&It(e)}},kt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ft(t.pendingLanes);0!==n&&(gt(t,1|n),ls(t,Xe()),0==(6&Nu)&&(Hu=Xe()+500,Ul()))}break;case 13:fs((function(){var t=Na(e,1);if(null!==t){var n=ts();rs(t,e,1,n)}})),qs(e,1)}},St=function(e){if(13===e.tag){var t=Na(e,134217728);null!==t&&rs(t,e,134217728,ts()),qs(e,134217728)}},xt=function(e){if(13===e.tag){var t=ns(e),n=Na(e,t);null!==n&&rs(n,e,t,ts()),qs(e,t)}},Et=function(){return bt},Ct=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},Se=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var l=kl(r);if(!l)throw Error(a(90));q(r),Z(r,l)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Oe=cs,Ne=fs;var tc={usingClientEntryPoint:!1,Events:[bl,wl,kl,_e,Pe,cs]},nc={findFiberByHostInstance:gl,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var lc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!lc.isDisabled&&lc.supportsFiber)try{lt=lc.inject(rc),at=lc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xs(t))throw Error(a(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Xs(e))throw Error(a(299));var n=!1,r="",l=Ks;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(l=t.onRecoverableError)),t=Ws(e,1,!1,null,0,n,0,r,l),e[ml]=t.current,Ur(8===e.nodeType?e.parentNode:e),new Gs(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e){return fs(e)},t.hydrate=function(e,t,n){if(!Zs(t))throw Error(a(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Xs(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,l=!1,o="",i=Ks;if(null!=n&&(!0===n.unstable_strictMode&&(l=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Hs(t,null,e,1,null!=n?n:null,l,0,o,i),e[ml]=t.current,Ur(e),r)for(e=0;e<r.length;e++)l=(l=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,l]:t.mutableSourceEagerHydrationData.push(n,l);return new Ys(t)},t.render=function(e,t,n){if(!Zs(t))throw Error(a(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zs(e))throw Error(a(40));return!!e._reactRootContainer&&(fs((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[ml]=null}))})),!0)},t.unstable_batchedUpdates=cs,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zs(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return ec(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.s=r.createRoot,r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),l=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,y={};function v(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||m}function g(){}function b(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||m}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=v.prototype;var w=b.prototype=new g;w.constructor=b,h(w,v.prototype),w.isPureReactComponent=!0;var k=Array.isArray,S=Object.prototype.hasOwnProperty,x={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,r){var l,a={},o=null,i=null;if(null!=t)for(l in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)S.call(t,l)&&!E.hasOwnProperty(l)&&(a[l]=t[l]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(l in u=e.defaultProps)void 0===a[l]&&(a[l]=u[l]);return{$$typeof:n,type:e,key:o,ref:i,props:a,_owner:x.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var P=/\/+/g;function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,l,a,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return o=o(u=e),e=""===a?"."+O(u,0):a,k(o)?(l="",null!=e&&(l=e.replace(P,"$&/")+"/"),N(o,t,l,"",(function(e){return e}))):null!=o&&(_(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,l+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(P,"$&/")+"/")+e)),t.push(o)),1;if(u=0,a=""===a?".":a+":",k(e))for(var s=0;s<e.length;s++){var c=a+O(i=e[s],s);u+=N(i,t,l,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(i=e.next()).done;)u+=N(i=i.value,t,l,c=a+O(i,s++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function T(e,t,n){if(null==e)return e;var r=[],l=0;return N(e,r,"","",(function(e){return t.call(n,e,l++)})),r}function z(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},A={transition:null},M={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:A,ReactCurrentOwner:x};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=v,t.Fragment=l,t.Profiler=o,t.PureComponent=b,t.StrictMode=a,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var l=h({},e.props),a=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=x.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)S.call(t,s)&&!E.hasOwnProperty(s)&&(l[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)l.children=r;else if(1<s){u=Array(s);for(var c=0;c<s;c++)u[c]=arguments[c+2];l.children=u}return{$$typeof:n,type:e.type,key:a,ref:o,props:l,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:z}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=A.transition;A.transition={};try{e()}finally{A.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,l=e[r];if(!(0<a(l,t)))break e;e[r]=t,e[n]=l,n=r}}function r(e){return 0===e.length?null:e[0]}function l(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,l=e.length,o=l>>>1;r<o;){var i=2*(r+1)-1,u=e[i],s=i+1,c=e[s];if(0>a(u,n))s<l&&0>a(c,u)?(e[r]=c,e[s]=n,r=s):(e[r]=u,e[i]=n,r=i);else{if(!(s<l&&0>a(c,n)))break e;e[r]=c,e[s]=n,r=s}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}var s=[],c=[],f=1,d=null,p=3,m=!1,h=!1,y=!1,v="function"==typeof setTimeout?setTimeout:null,g="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var t=r(c);null!==t;){if(null===t.callback)l(c);else{if(!(t.startTime<=e))break;l(c),t.sortIndex=t.expirationTime,n(s,t)}t=r(c)}}function k(e){if(y=!1,w(e),!h)if(null!==r(s))h=!0,A(S);else{var t=r(c);null!==t&&M(k,t.startTime-e)}}function S(e,n){h=!1,y&&(y=!1,g(_),_=-1),m=!0;var a=p;try{for(w(n),d=r(s);null!==d&&(!(d.expirationTime>n)||e&&!N());){var o=d.callback;if("function"==typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?d.callback=i:d===r(s)&&l(s),w(n)}else l(s);d=r(s)}if(null!==d)var u=!0;else{var f=r(c);null!==f&&M(k,f.startTime-n),u=!1}return u}finally{d=null,p=a,m=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,E=!1,C=null,_=-1,P=5,O=-1;function N(){return!(t.unstable_now()-O<P)}function T(){if(null!==C){var e=t.unstable_now();O=e;var n=!0;try{n=C(!0,e)}finally{n?x():(E=!1,C=null)}}else E=!1}if("function"==typeof b)x=function(){b(T)};else if("undefined"!=typeof MessageChannel){var z=new MessageChannel,R=z.port2;z.port1.onmessage=T,x=function(){R.postMessage(null)}}else x=function(){v(T,0)};function A(e){C=e,E||(E=!0,x())}function M(e,n){_=v((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||m||(h=!0,A(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(s)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,l,a){var o=t.unstable_now();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?o+a:o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:l,priorityLevel:e,startTime:a,expirationTime:i=a+i,sortIndex:-1},a>o?(e.sortIndex=a,n(c,e),null===r(s)&&e===r(c)&&(y?(g(_),_=-1):y=!0,M(k,a-o))):(e.sortIndex=i,n(s,e),h||m||(h=!0,A(S))),e},t.unstable_shouldYield=N,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},887:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},o=[],i=0;i<e.length;i++){var u=e[i],s=r.base?u[0]+r.base:u[0],c=a[s]||0,f="".concat(s," ").concat(c);a[s]=c+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var m=l(p,r);r.byIndex=i,t.splice(i,0,{identifier:f,updater:m,references:1})}o.push(f)}return o}function l(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,l){var a=r(e=e||[],l=l||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var i=n(a[o]);t[i].references--}for(var u=r(e,l),s=0;s<a.length;s++){var c=n(a[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var l=void 0!==n.layer;l&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,l&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var l=t[r];if(void 0!==l)return l.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";var e=n(294),t=n(745);var r=StyleSheet.create({h1:{marginLeft:"3rem"},appHeader:{display:"flex",flexDirection:"row",alignItems:"center",color:"#E11D3F",borderBottom:"1px solid #E11D3F"},appLogo:{height:"200px",width:"200px"}});const l=function(){return e.createElement("div",{className:css(r.appHeader)},e.createElement("img",{src:"images/holberton_logo.jpg",alt:"logo",className:css(r.appLogo)}),e.createElement("h1",{className:css(r.h1)},"School dashboard"))},a=function(){return e.createElement("div",{className:"App-footer"},e.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School main dashboard"))};var o=n(379),i=n.n(o),u=n(795),s=n.n(u),c=n(569),f=n.n(c),d=n(565),p=n.n(d),m=n(216),h=n.n(m),y=n(589),v=n.n(y),g=n(842),b={};b.styleTagTransform=v(),b.setAttributes=p(),b.insert=f().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=h(),i()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;var w=n(697),k=n.n(w);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,l=function(e,t){if("object"!==S(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===S(l)?l:String(l)),r)}var l}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var _=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(i,t);var n,r,l,a,o=(l=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(l);if(a){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),o.call(this,e)}return n=i,(r=[{key:"render",value:function(){var t=this;return this.props.value?e.createElement("li",{"data-notification-type":this.props.type,onClick:function(){return t.props.markAsRead(t.props.id)}},this.props.value):e.createElement("li",{"data-notification-type":this.props.type,dangerouslySetInnerHTML:this.props.html,onClick:function(){return t.props.markAsRead(t.props.id)}})}}])&&x(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(e.PureComponent);_.defaultProps={type:"default",markAsRead:function(){console.log("empty func")},id:0},_.propTypes={html:k().shape({__html:k().string}),type:k().string.isRequired,value:k().string,markAsRead:k().func,id:k().number};const P=_,O=k().shape({id:k().number.isRequired,html:k().shape({__html:k().string}),type:k().string.isRequired,value:k().string});function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,M(r.key),r)}}function z(e,t){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},z(e,t)}function R(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}function M(e){var t=function(e,t){if("object"!==N(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===N(t)?t:String(t)}var j=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&z(e,t)}(i,t);var n,r,l,a,o=(l=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(l);if(a){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===N(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return R(e)}(this,e)});function i(){var e,t,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i);for(var l=arguments.length,a=new Array(l),u=0;u<l;u++)a[u]=arguments[u];return t=R(e=o.call.apply(o,[this].concat(a))),r=function(e){console.log("Notification ".concat(e," has been marked as read"))},(n=M(n="markAsRead"))in t?Object.defineProperty(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r,e}return n=i,(r=[{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length}},{key:"render",value:function(){var t=this;return e.createElement(e.Fragment,null,e.createElement("div",{className:"menuItem"},"Your notifications"),this.props.displayDrawer?e.createElement("div",{className:"Notifications"},e.createElement("button",{style:{color:"#3a3a3a",fontWeight:"bold",background:"none",border:"none",fontSize:"15px",position:"absolute",right:"3px",top:"3px",cursor:"pointer",outline:"none"},"aria-label":"Close",onClick:function(e){console.log("Close button has been clicked")}},e.createElement("img",{src:"images/close-icon.png",alt:"close icon",width:"15px"})),0!=this.props.listNotifications.length?e.createElement("p",null,"Here is the list of notifications"):null,e.createElement("ul",null,0==this.props.listNotifications.length?e.createElement(P,{type:"default",value:"No new notification for now"}):null,this.props.listNotifications.map((function(n){return e.createElement(P,{type:n.type,value:n.value,html:n.html,key:n.id,markAsRead:t.markAsRead,id:n.id})})))):null)}}])&&T(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(e.Component);j.defaultProps={displayDrawer:!1,listNotifications:[]},j.propTypes={displayDrawer:k().bool,listNotifications:k().arrayOf(O)};const L=j;var I=n(174),F={};F.styleTagTransform=v(),F.setAttributes=p(),F.insert=f().bind(null,"head"),F.domAPI=s(),F.insertStyleElement=h(),i()(I.Z,F),I.Z&&I.Z.locals&&I.Z.locals;const D=function(){return e.createElement(e.Fragment,null,e.createElement("div",{className:"App-body"},e.createElement("p",null,"Login to access the full dashboard"),e.createElement("label",{htmlFor:"email"},"Email: "),e.createElement("input",{type:"email",id:"email",name:"email"}),e.createElement("label",{htmlFor:"password"},"Password: "),e.createElement("input",{type:"password",id:"password",name:"password"}),e.createElement("button",null,"OK")))},B=k().shape({id:k().number.isRequired,name:k().string.isRequired,credit:k().number.isRequired});function W(t){var n=t.isHeader,r=t.textFirstCell,l=t.textSecondCell;return e.createElement("tr",{style:n?{backgroundColor:"#deb5b545"}:{backgroundColor:"#f5f5f5ab"}},n?null===l?e.createElement("th",{colSpan:2},r):e.createElement(e.Fragment,null,e.createElement("th",null,r),e.createElement("th",null,l)):e.createElement(e.Fragment,null,e.createElement("td",null,r),e.createElement("td",null,l)))}W.propTypes={isHeader:k().bool,textFirstCell:k().string.isRequired,textSecondCell:k().oneOfType([k().string,k().number])},W.defaultProps={isHeader:!1,textSecondCell:null};const U=W;var H=n(887),V=n.n(H),$=n(272),Q=n.n($);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function K(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function G(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){K(e,t,n[t])}))}return e}function Y(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var X=/([A-Z])/g,Z=function(e){return"-".concat(e.toLowerCase())},J={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ee=["Webkit","ms","Moz","O"];Object.keys(J).forEach((function(e){ee.forEach((function(t){J[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=J[e]}))}));var te=function(e,t){return"number"==typeof t?J[e]?""+t:t+"px":""+t},ne=function(e,t){return le(te(e,t))},re=function(e,t){return V()(e).toString(36)},le=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},ae="undefined"!=typeof Map,oe=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var l=this.keyOrder.indexOf(t);this.keyOrder.splice(l,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(ae&&n instanceof Map||n instanceof e){var a=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){a.set(t,e,r)})),void(this.elements[t]=a)}if(Array.isArray(n)||"object"!==q(n))this.elements[t]=n;else{for(var o=this.elements.hasOwnProperty(t)?this.elements[t]:new e,i=Object.keys(n),u=0;u<i.length;u+=1)o.set(i[u],n[i[u]],r);this.elements[t]=o}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(ae&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),l=0;l<r.length;l++)this.set(r[l],t[r[l]],!0)},e}();function ie(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function ue(e,t){return e(t={exports:{}},t.exports),t.exports}var se=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));ie(se);var ce=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var l={},a=e[t],o=(0,r.default)(t),i=Object.keys(n),u=0;u<i.length;u++){var s=i[u];if(s===t)for(var c=0;c<a.length;c++)l[a[c]+o]=n[t];l[s]=n[s]}return l}return n};var n,r=(n=se)&&n.__esModule?n:{default:n}}));ie(ce);var fe=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,l){for(var a=0,o=e.length;a<o;++a){var i=e[a](t,n,r,l);if(i)return i}}}));ie(fe);var de=ue((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,l=t.length;r<l;++r)n(e,t[r]);else n(e,t)}}));ie(de);var pe=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));ie(pe);var me=ie(ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,o=e.plugins;return function e(i){for(var u in i){var s=i[u];if((0,a.default)(s))i[u]=e(s);else if(Array.isArray(s)){for(var c=[],f=0,d=s.length;f<d;++f){var p=(0,r.default)(o,u,s[f],i,t);(0,l.default)(c,p||s[f])}c.length>0&&(i[u]=c)}else{var m=(0,r.default)(o,u,s,i,t);m&&(i[u]=m),i=(0,n.default)(t,u,i)}}return i}};var n=o(ce),r=o(fe),l=o(de),a=o(pe);function o(e){return e&&e.__esModule?e:{default:e}}}))),he=ie(ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}}))),ye=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));ie(ye);var ve=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return l.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=ye)&&n.__esModule?n:{default:n},l=["-webkit-","-moz-",""]})),ge=ie(ve),be=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return l.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=ye)&&n.__esModule?n:{default:n},l=["-webkit-",""]})),we=ie(be),ke=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),Se=ie(ke),xe=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return l.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=ye)&&n.__esModule?n:{default:n},l=["-webkit-",""]})),Ee=ie(xe),Ce=ie(ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}}))),_e=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){if(Object.prototype.hasOwnProperty.call(r,e)&&(o[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(l,t))return void(o.msFlex=l[t]);if(a.test(t))return void(o.msFlex=t+" 1 0%");var i=t.split(/\s/);switch(i.length){case 1:return void(o.msFlex="1 1 "+t);case 2:return void(a.test(i[1])?o.msFlex=i[0]+" "+i[1]+" 0%":o.msFlex=i[0]+" 1 "+i[1]);default:o.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},l={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},a=/^\d+(\.\d+)?$/})),Pe=ie(_e),Oe=ie(ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?l.WebkitBoxOrient="vertical":l.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?l.WebkitBoxDirection="reverse":l.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(l[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}}))),Ne=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&a.test(t))return l.map((function(e){return t.replace(a,(function(t){return e+t}))}))};var n,r=(n=ye)&&n.__esModule?n:{default:n},l=["-webkit-","-moz-",""],a=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),Te=ie(Ne),ze=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,l=!1,a=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){l=!0,a=e}finally{try{!r&&i.return&&i.return()}finally{if(l)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in a)return a[t];e in o&&(0,o[e])(t,n)};var l=["center","end","start","stretch"],a={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},o={alignSelf:function(e,t){l.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var l=e.split("/").map((function(e){return+e})),a=n(l,2),i=a[0],u=a[1];o.gridColumnStart(i,t),o.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var l=e.split("/").map((function(e){return+e})),a=n(l,2),i=a[0],u=a[1];o.gridRowStart(i,t),o.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){l.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),Re=ie(ze),Ae=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return l.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=ye)&&n.__esModule?n:{default:n},l=["-webkit-",""]})),Me=ie(Ae),je=ie(ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var l=n[e],a=0,o=l.length;a<o;++a)r[l[a]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}}))),Le=ie(ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}}))),Ie=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&l.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},l={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),Fe=ie(Ie),De=/[A-Z]/g,Be=/^ms-/,We={};function Ue(e){return"-"+e.toLowerCase()}var He,Ve=(He=Object.freeze({default:function(e){if(We.hasOwnProperty(e))return We[e];var t=e.replace(De,Ue);return We[e]=Be.test(t)?"-"+t:t}}))&&He.default||He,$e=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=Ve)&&n.__esModule?n:{default:n};e.exports=t.default}));ie($e);var Qe=ue((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,a,u){if("string"==typeof t&&o.hasOwnProperty(e)){var s=function(e,t){if((0,r.default)(e))return e;for(var l=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),a=0,o=l.length;a<o;++a){var u=l[a],s=[u];for(var c in t){var f=(0,n.default)(c);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[c],p=0,m=d.length;p<m;++p)s.unshift(u.replace(f,i[d[p]]+f))}l[a]=s.join(",")}return l.join(",")}(t,u),c=s.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return c;var f=s.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(a["Webkit"+(0,l.default)(e)]=c,a["Moz"+(0,l.default)(e)]=f,s)}};var n=a($e),r=a(ye),l=a(se);function a(e){return e&&e.__esModule?e:{default:e}}var o={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},i={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),qe=["Webkit"],Ke=["Moz"],Ge=["ms"],Ye=["Webkit","Moz"],Xe=["Webkit","ms"],Ze=["Webkit","Moz","ms"],Je=me({plugins:[he,ge,we,Se,Ee,Ce,Pe,Oe,Te,Re,Me,je,Le,Fe,ie(Qe)],prefixMap:{transform:Xe,transformOrigin:Xe,transformOriginX:Xe,transformOriginY:Xe,backfaceVisibility:qe,perspective:qe,perspectiveOrigin:qe,transformStyle:qe,transformOriginZ:qe,animation:qe,animationDelay:qe,animationDirection:qe,animationFillMode:qe,animationDuration:qe,animationIterationCount:qe,animationName:qe,animationPlayState:qe,animationTimingFunction:qe,appearance:Ye,userSelect:Ze,fontKerning:qe,textEmphasisPosition:qe,textEmphasis:qe,textEmphasisStyle:qe,textEmphasisColor:qe,boxDecorationBreak:qe,clipPath:qe,maskImage:qe,maskMode:qe,maskRepeat:qe,maskPosition:qe,maskClip:qe,maskOrigin:qe,maskSize:qe,maskComposite:qe,mask:qe,maskBorderSource:qe,maskBorderMode:qe,maskBorderSlice:qe,maskBorderWidth:qe,maskBorderOutset:qe,maskBorderRepeat:qe,maskBorder:qe,maskType:qe,textDecorationStyle:Ye,textDecorationSkip:Ye,textDecorationLine:Ye,textDecorationColor:Ye,filter:qe,fontFeatureSettings:Ye,breakAfter:Ze,breakBefore:Ze,breakInside:Ze,columnCount:Ye,columnFill:Ye,columnGap:Ye,columnRule:Ye,columnRuleColor:Ye,columnRuleStyle:Ye,columnRuleWidth:Ye,columns:Ye,columnSpan:Ye,columnWidth:Ye,writingMode:Xe,flex:Xe,flexBasis:qe,flexDirection:Xe,flexGrow:qe,flexFlow:Xe,flexShrink:qe,flexWrap:Xe,alignContent:qe,alignItems:qe,alignSelf:qe,justifyContent:qe,order:qe,transitionDelay:qe,transitionDuration:qe,transitionProperty:qe,transitionTimingFunction:qe,backdropFilter:qe,scrollSnapType:Xe,scrollSnapPointsX:Xe,scrollSnapPointsY:Xe,scrollSnapDestination:Xe,scrollSnapCoordinate:Xe,shapeImageThreshold:qe,shapeImageMargin:qe,shapeImageOutside:qe,hyphens:Ze,flowInto:Xe,flowFrom:Xe,regionFragment:Xe,textOrientation:qe,boxSizing:Ke,textAlignLast:Ke,tabSize:Ke,wrapFlow:Ge,wrapThrough:Ge,wrapMargin:Ge,touchAction:Ge,textSizeAdjust:Xe,borderImage:qe,borderImageOutset:qe,borderImageRepeat:qe,borderImageSlice:qe,borderImageSource:qe,borderImageWidth:qe}}),et=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],tt=function e(t,n,r,l,a){for(var o=new oe,i=0;i<n.length;i++)o.addStyleType(n[i]);var u=new oe,s=[];o.forEach((function(n,o){r.some((function(i){var u=i(o,t,(function(t){return e(t,[n],r,l,a)}));if(null!=u)return Array.isArray(u)?s.push.apply(s,Y(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",i),s.push("@media all {".concat(u,"}"))),!0}))||u.set(o,n,!0)}));var c=lt(t,u,l,a,r);return c&&s.unshift(c),s},nt=function(e,t,n){return"".concat((r=e,l=r.replace(X,Z),"m"===l[0]&&"s"===l[1]&&"-"===l[2]?"-".concat(l):l),":").concat(n(e,t),";");var r,l},rt=function(e,t){return e[t]=!0,e},lt=function(e,t,n,r,l){!function(e,t,n){if(t)for(var r=Object.keys(t),l=0;l<r.length;l++){var a=r[l];e.has(a)&&e.set(a,t[a](e.get(a),n),!1)}}(t,n,l);var a=Object.keys(t.elements).reduce(rt,Object.create(null)),o=Je(t.elements),i=Object.keys(o);if(i.length!==t.keyOrder.length)for(var u=0;u<i.length;u++)if(!a[i[u]]){var s;if((s="W"===i[u][0]?i[u][6].toLowerCase()+i[u].slice(7):"o"===i[u][1]?i[u][3].toLowerCase()+i[u].slice(4):i[u][2].toLowerCase()+i[u].slice(3))&&a[s]){var c=t.keyOrder.indexOf(s);t.keyOrder.splice(c,0,i[u])}else t.keyOrder.unshift(i[u])}for(var f=!1===r?te:ne,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=o[m];if(Array.isArray(h))for(var y=0;y<h.length;y++)d.push(nt(m,h[y],f));else d.push(nt(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},at=null,ot={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===q(t)?(ft(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===q(t)){var r="keyframe_".concat((a=t,re(JSON.stringify(a)))),l="@keyframes ".concat(r,"{");return t instanceof oe?t.forEach((function(e,t){l+=tt(t,[e],n,ot,!1).join("")})):Object.keys(t).forEach((function(e){l+=tt(e,[t[e]],n,ot,!1).join("")})),ct(r,[l+="}"]),r}return t;var a}},it={},ut=[],st=!1,ct=function(e,t){var n;if(!it[e]){if(!st){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");st=!0,Q()(ht)}(n=ut).push.apply(n,Y(t)),it[e]=!0}},ft=function(e,t,n,r){var l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!it[e]){var a=tt(t,n,l,ot,r);ct(e,a)}},dt=function(){ut=[],it={},st=!1,at=null},pt=function(e){delete it[e]},mt=function(){st=!1;var e=ut;return ut=[],e},ht=function(){var e=mt();e.length>0&&function(e){if(null==at&&null==(at=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(at=document.createElement("style")).type="text/css",at.setAttribute("data-aphrodite",""),t.appendChild(at)}var n=at.styleSheet||at.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else at.innerText=(at.innerText||"")+e.join("")}(e)},yt=function(e){e.forEach((function(e){it[e]=!0}))},vt=function e(t,n,r,l){for(var a=0;a<t.length;a+=1)if(t[a])if(Array.isArray(t[a]))l+=e(t[a],n,r,l);else{if(!("_definition"in(o=t[a])&&"_name"in o&&"_len"in o))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[a]._name),r.push(t[a]._definition),l+=t[a]._len}var o;return l},gt=function(e,t,n){var r,l=[],a=[],o=vt(t,l,a,0);return 0===l.length?"":(r=1===l.length?"_".concat(l[0]):"_".concat(re(l.join())).concat((o%36).toString(36)),ft(r,".".concat(r),a,e,n),r)},bt=function(e,t){return"".concat(t,"_").concat(re(e))},wt=re,kt={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var l=n[r],a=e[l],o=JSON.stringify(a);t[l]={_len:o.length,_name:wt(o,l),_definition:a}}return t},rehydrate:function(){yt(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[])}},St="undefined"!=typeof window?null:{renderStatic:function(e){return dt(),function(){if(st)throw new Error("Cannot buffer while already buffering");st=!0}(),{html:e(),css:{content:mt().join(""),renderedClassNames:Object.keys(it)}}}},xt=null,Et=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:et;return{StyleSheet:G({},kt,{extend:function(r){var l=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(l))}}),StyleSheetServer:St,StyleSheetTestUtils:xt,minify:function(e){wt=e?re:bt},css:function(){for(var e=arguments.length,r=new Array(e),l=0;l<e;l++)r[l]=arguments[l];return gt(t,r,n)},flushToStyleTag:ht,injectAndGetClassName:gt,defaultSelectorHandlers:et,reset:dt,resetInjectedStyle:pt}}(!0),Ct=Et.StyleSheet,_t=(Et.StyleSheetServer,Et.StyleSheetTestUtils,Et.css);function Pt(t){var n=t.listCourses;return e.createElement("table",{id:"CourseList",className:_t(Ot.table)},e.createElement("thead",null,e.createElement(U,{isHeader:!0,textFirstCell:"Available courses"}),e.createElement(U,{isHeader:!0,textFirstCell:"Course name",textSecondCell:"Credit"})),e.createElement("tbody",null,0==n.length?e.createElement(U,{isHeader:!1,textFirstCell:"No course available yet"}):null,n.map((function(t){return e.createElement(U,{isHeader:!1,textFirstCell:t.name,textSecondCell:t.credit,key:t.id})}))))}Et.minify,Et.flushToStyleTag,Et.injectAndGetClassName,Et.defaultSelectorHandlers,Et.reset,Et.resetInjectedStyle;var Ot=Ct.create({table:{display:"table",border:"1px solid",borderCollapse:"collapse",margin:"2rem auto 0 auto",width:"90%"}});Pt.defaultProps={listCourses:[]},Pt.PropType={listCourses:k().arrayOf(B)};const Nt=Pt;function Tt(e){return Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Tt(e)}function zt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,l=function(e,t){if("object"!==Tt(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==Tt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===Tt(l)?l:String(l)),r)}var l}function Rt(e,t){return Rt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Rt(e,t)}function At(e){return At=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},At(e)}var Mt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Rt(e,t)}(i,t);var n,r,l,a,o=(l=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=At(l);if(a){var n=At(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Tt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function i(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return n=i,(r=[{key:"render",value:function(){var t=this.props,n=t.title,r=t.children;return e.createElement("div",{className:"bodySection"},e.createElement("h2",null,n),r)}}])&&zt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(e.Component);Mt.propTypes={title:k().string.isRequired,children:k().oneOfType([k().string,k().element])};const jt=Mt;function Lt(e){return Lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Lt(e)}function It(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,l=function(e,t){if("object"!==Lt(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==Lt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===Lt(l)?l:String(l)),r)}var l}function Ft(e,t){return Ft=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ft(e,t)}function Dt(e){return Dt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Dt(e)}var Bt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ft(e,t)}(i,t);var n,r,l,a,o=(l=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Dt(l);if(a){var n=Dt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Lt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function i(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),o.apply(this,arguments)}return n=i,(r=[{key:"render",value:function(){return e.createElement("div",{className:_t(Wt.marginBottom)},e.createElement(jt,this.props))}}])&&It(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),i}(e.Component),Wt=Ct.create({marginBottom:{marginBottom:"40px"}});Bt.defaultProps={children:e.createElement(e.Fragment,null)},Bt.Proptypes={title:k().string.isRequired,children:k().oneOfType([k().string,k().element])};const Ut=Bt;function Ht(e){return Ht="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ht(e)}function Vt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Kt(r.key),r)}}function $t(e,t){return $t=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},$t(e,t)}function Qt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function qt(e){return qt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},qt(e)}function Kt(e){var t=function(e,t){if("object"!==Ht(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==Ht(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Ht(t)?t:String(t)}var Gt=[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}],Yt=[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}],Xt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&$t(e,t)}(s,t);var n,r,o,i,u=(o=s,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=qt(o);if(i){var n=qt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Ht(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Qt(e)}(this,e)});function s(e){var t,n,r,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),n=Qt(t=u.call(this,e)),l=function(e){e.preventDefault(),e.ctrlKey&&"h"===e.key&&(window.alert("Logging you out"),t.props.logOut())},(r=Kt(r="handleKeyDown"))in n?Object.defineProperty(n,r,{value:l,enumerable:!0,configurable:!0,writable:!0}):n[r]=l,t}return n=s,(r=[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.handleKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleKeyDown)}},{key:"render",value:function(){return e.createElement(e.Fragment,null,e.createElement(L,{listNotifications:Yt}),e.createElement("div",{className:_t(Zt.App)},e.createElement(l,null),this.props.isLoggedIn?e.createElement(Ut,{title:"Course list"},e.createElement(Nt,{listCourses:Gt})):e.createElement(Ut,{title:"Log in to continue"},e.createElement(D,null)),e.createElement(jt,{title:"News from the School"},e.createElement("p",null,"Starting out your frontend dreams")),e.createElement("div",{className:_t(Jt.footer)},e.createElement(a,null))))}}])&&Vt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),s}(e.Component),Zt=Ct.create({App:{position:"relative",minHeight:"100vh"}}),Jt=Ct.create({footer:{display:"flex",flexDirection:"row",justifyContent:"center",alignItems:"center",borderTop:"3px solid #E11D3F",padding:"1rem",fontStyle:"italic"}});Xt.defaultProps={isLoggedIn:!1,logOut:function(){}},Xt.propTypes={isLoggedIn:k().bool,logOut:k().func};const en=Xt;var tn=document.getElementById("root");(0,t.s)(tn).render(e.createElement(e.StrictMode,null,e.createElement(en,null)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,