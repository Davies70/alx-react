/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var t={272:(e,t,n)=>{"use strict";var r=n(723),o=[],i=[],l=r.makeRequestCallFromTimer((function(){if(i.length)throw i.shift()}));function a(e){var t;(t=o.length?o.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=a,u.prototype.call=function(){try{this.task.call()}catch(e){a.onerror?a.onerror(e):(i.push(e),l())}finally{this.task=null,o[o.length]=this}}},723:(e,t,n)=>{"use strict";function r(e){i.length||o(),i[i.length]=e}e.exports=r;var o,i=[],l=0,a=1024;function u(){for(;l<i.length;){var e=l;if(l+=1,i[e].call(),l>a){for(var t=0,n=i.length-l;t<n;t++)i[t]=i[t+l];i.length-=l,l=0}}i.length=0,l=0}var c,s,f,d=void 0!==n.g?n.g:self,p=d.MutationObserver||d.WebKitMutationObserver;function m(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof p?(c=1,s=new p(u),f=document.createTextNode(""),s.observe(f,{characterData:!0}),o=function(){c=-c,f.data=c}):o=m(u),r.requestFlush=o,r.makeRequestCallFromTimer=m},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,a=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))n.call(i,c)&&(a[c]=i[c]);if(t){l=t(i);for(var s=0;s<l.length;s++)r.call(i,l[s])&&(a[l[s]]=i[l[s]])}}return a}},703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),o=n(418),i=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var v=null,b={};function w(){if(v)for(var e in b){var t=b[e],n=v.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(E.hasOwnProperty(u))throw Error(l(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],a,u);o=!0}else i.registrationName?(k(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function k(e,t,n){if(S[e])throw Error(l(100,e));S[e]=t,T[e]=t.eventTypes[n].dependencies}var x=[],E={},S={},T={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var _=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),P=null,O=null,N=null;function j(e){if(e=h(e)){if("function"!=typeof P)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),P(e.stateNode,e.type,t))}}function M(e){O?N?N.push(e):N=[e]:O=e}function R(){if(O){var e=O,t=N;if(N=O=null,j(e),t)for(e=0;e<t.length;e++)j(t[e])}}function z(e,t){return e(t)}function I(e,t,n,r,o){return e(t,n,r,o)}function D(){}var F=z,A=!1,L=!1;function W(){null===O&&null===N||(D(),R())}function B(e,t,n){if(L)return e(t,n);L=!0;try{return F(e,t,n)}finally{L=!1,W()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},Q={};function $(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,G);q[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=q.hasOwnProperty(t)?q[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(Q,e)||!H.call(V,e)&&(U.test(e)?Q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ye(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ye(e.type);case pe:return ye(e.render);case de:if(e=1===e._status?e._result:null)return ye(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ye(e.type);n=null,r&&(n=ye(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Te(e,t){Se(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_e(e,t.type,n):t.hasOwnProperty("defaultValue")&&_e(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _e(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function je(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function Me(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Re(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ze(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ie(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ze(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var De,Fe,Ae=(Fe=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((De=De||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=De.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Fe(e,t)}))}:Fe);function Le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function We(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Be={animationend:We("Animation","AnimationEnd"),animationiteration:We("Animation","AnimationIteration"),animationstart:We("Animation","AnimationStart"),transitionend:We("Transition","TransitionEnd")},Ue={},He={};function Ve(e){if(Ue[e])return Ue[e];if(!Be[e])return e;var t,n=Be[e];for(t in n)if(n.hasOwnProperty(t)&&t in He)return Ue[e]=n[t];return e}_&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete Be.animationend.animation,delete Be.animationiteration.animation,delete Be.animationstart.animation),"TransitionEvent"in window||delete Be.transitionend.transition);var Qe=Ve("animationend"),$e=Ve("animationiteration"),qe=Ve("animationstart"),Ke=Ve("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ye.get(e);return void 0===t&&(t=new Map,Ye.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Ze(e)!==e)throw Error(l(188))}function tt(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return et(o),e;if(i===r)return et(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function nt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=nt(ot,e)),e=ot,ot=null,e){if(rt(e,it),ot)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function at(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!_)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function st(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ft(e,t,n,r){if(ct.length){var o=ct.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=jn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=at(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=nt(a,c))}lt(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&$t(e,t)}n.set(e,null)}}var mt,ht,yt,gt=!1,vt=[],bt=null,wt=null,kt=null,xt=new Map,Et=new Map,St=[],Tt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ct="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":bt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Ot(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,o,i),null!==t&&null!==(t=Mn(t))&&ht(t),e):(e.eventSystemFlags|=r,e)}function Nt(e){var t=jn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function jt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Mn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){jt(e)&&n.delete(t)}function Rt(){for(gt=!1;0<vt.length;){var e=vt[0];if(null!==e.blockedOn){null!==(e=Mn(e.blockedOn))&&mt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:vt.shift()}null!==bt&&jt(bt)&&(bt=null),null!==wt&&jt(wt)&&(wt=null),null!==kt&&jt(kt)&&(kt=null),xt.forEach(Mt),Et.forEach(Mt)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Rt)))}function It(e){function t(t){return zt(t,e)}if(0<vt.length){zt(vt[0],e);for(var n=1;n<vt.length;n++){var r=vt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==bt&&zt(bt,e),null!==wt&&zt(wt,e),null!==kt&&zt(kt,e),xt.forEach(t),Et.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Nt(n),null===n.blockedOn&&St.shift()}var Dt={},Ft=new Map,At=new Map,Lt=["abort","abort",Qe,"animationEnd",$e,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ke,"transitionEnd","waiting","waiting"];function Wt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},At.set(r,t),Ft.set(r,i),Dt[o]=i}}Wt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Wt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Wt(Lt,2);for(var Bt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<Bt.length;Ut++)At.set(Bt[Ut],0);var Ht=i.unstable_UserBlockingPriority,Vt=i.unstable_runWithPriority,Qt=!0;function $t(e,t){qt(t,e,!1)}function qt(e,t,n){var r=At.get(t);switch(void 0===r?2:r){case 0:r=Kt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Yt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Kt(e,t,n,r){A||D();var o=Yt,i=A;A=!0;try{I(o,e,t,n,r)}finally{(A=i)||W()}}function Gt(e,t,n,r){Vt(Ht,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){if(Qt)if(0<vt.length&&-1<Tt.indexOf(e))e=_t(null,e,t,n,r),vt.push(e);else{var o=Xt(e,t,n,r);if(null===o)Pt(e,r);else if(-1<Tt.indexOf(e))e=_t(o,e,t,n,r),vt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return bt=Ot(bt,e,t,n,r,o),!0;case"dragenter":return wt=Ot(wt,e,t,n,r,o),!0;case"mouseover":return kt=Ot(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,Ot(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Et.set(i,Ot(Et.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Pt(e,r),e=ft(e,r,null,t);try{B(dt,e)}finally{st(e)}}}}function Xt(e,t,n,r){if(null!==(n=jn(n=at(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=Je(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{B(dt,e)}finally{st(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Jt=["Webkit","ms","Moz","O"];function en(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function tn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=en(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){Jt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var nn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rn(e,t){if(t){if(nn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln="http://www.w3.org/1999/xhtml";function an(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=T[t];for(var r=0;r<t.length;r++)pt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=sn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sn(r)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn="$",yn="/$",gn="$?",vn="$!",bn=null,wn=null;function kn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function xn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var En="function"==typeof setTimeout?setTimeout:void 0,Sn="function"==typeof clearTimeout?clearTimeout:void 0;function Tn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Cn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===hn||n===vn||n===gn){if(0===t)return e;t--}else n===yn&&t++}e=e.previousSibling}return null}var _n=Math.random().toString(36).slice(2),Pn="__reactInternalInstance$"+_n,On="__reactEventHandlers$"+_n,Nn="__reactContainere$"+_n;function jn(e){var t=e[Pn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Nn]||n[Pn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Cn(e);null!==e;){if(n=e[Pn])return n;e=Cn(e)}return t}n=(e=n).parentNode}return null}function Mn(e){return!(e=e[Pn]||e[Nn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Rn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function zn(e){return e[On]||null}function In(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Dn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Fn(e,t,n){(t=Dn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function An(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=In(t);for(t=n.length;0<t--;)Fn(n[t],"captured",e);for(t=0;t<n.length;t++)Fn(n[t],"bubbled",e)}}function Ln(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Dn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Wn(e){e&&e.dispatchConfig.registrationName&&Ln(e._targetInst,null,e)}function Bn(e){rt(e,An)}var Un=null,Hn=null,Vn=null;function Qn(){if(Vn)return Vn;var e,t,n=Hn,r=n.length,o="value"in Un?Un.value:Un.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Vn=o.slice(e,1<t?1-t:void 0)}function $n(){return!0}function qn(){return!1}function Kn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?$n:qn,this.isPropagationStopped=qn,this}function Gn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Yn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Xn(e){e.eventPool=[],e.getPooled=Gn,e.release=Yn}o(Kn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=$n)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=$n)},persist:function(){this.isPersistent=$n},isPersistent:qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=qn,this._dispatchInstances=this._dispatchListeners=null}}),Kn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Kn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Xn(n),n},Xn(Kn);var Zn=Kn.extend({data:null}),Jn=Kn.extend({data:null}),er=[9,13,27,32],tr=_&&"CompositionEvent"in window,nr=null;_&&"documentMode"in document&&(nr=document.documentMode);var rr=_&&"TextEvent"in window&&!nr,or=_&&(!tr||nr&&8<nr&&11>=nr),ir=String.fromCharCode(32),lr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ar=!1;function ur(e,t){switch(e){case"keyup":return-1!==er.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function cr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var sr=!1,fr={eventTypes:lr,extractEvents:function(e,t,n,r){var o;if(tr)e:{switch(e){case"compositionstart":var i=lr.compositionStart;break e;case"compositionend":i=lr.compositionEnd;break e;case"compositionupdate":i=lr.compositionUpdate;break e}i=void 0}else sr?ur(e,n)&&(i=lr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=lr.compositionStart);return i?(or&&"ko"!==n.locale&&(sr||i!==lr.compositionStart?i===lr.compositionEnd&&sr&&(o=Qn()):(Hn="value"in(Un=r)?Un.value:Un.textContent,sr=!0)),i=Zn.getPooled(i,t,n,r),(o||null!==(o=cr(n)))&&(i.data=o),Bn(i),o=i):o=null,(e=rr?function(e,t){switch(e){case"compositionend":return cr(t);case"keypress":return 32!==t.which?null:(ar=!0,ir);case"textInput":return(e=t.data)===ir&&ar?null:e;default:return null}}(e,n):function(e,t){if(sr)return"compositionend"===e||!tr&&ur(e,t)?(e=Qn(),Vn=Hn=Un=null,sr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return or&&"ko"!==t.locale?null:t.data}}(e,n))?((t=Jn.getPooled(lr.beforeInput,t,n,r)).data=e,Bn(t)):t=null,null===o?t:null===t?o:[o,t]}},dr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!dr[e.type]:"textarea"===t}var mr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function hr(e,t,n){return(e=Kn.getPooled(mr.change,e,t,n)).type="change",M(n),Bn(e),e}var yr=null,gr=null;function vr(e){lt(e)}function br(e){if(ke(Rn(e)))return e}function wr(e,t){if("change"===e)return t}var kr=!1;function xr(){yr&&(yr.detachEvent("onpropertychange",Er),gr=yr=null)}function Er(e){if("value"===e.propertyName&&br(gr))if(e=hr(gr,e,at(e)),A)lt(e);else{A=!0;try{z(vr,e)}finally{A=!1,W()}}}function Sr(e,t,n){"focus"===e?(xr(),gr=n,(yr=t).attachEvent("onpropertychange",Er)):"blur"===e&&xr()}function Tr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return br(gr)}function Cr(e,t){if("click"===e)return br(t)}function _r(e,t){if("input"===e||"change"===e)return br(t)}_&&(kr=ut("input")&&(!document.documentMode||9<document.documentMode));var Pr={eventTypes:mr,_isInputEventSupported:kr,extractEvents:function(e,t,n,r){var o=t?Rn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=wr;else if(pr(o))if(kr)l=_r;else{l=Tr;var a=Sr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=Cr);if(l&&(l=l(e,t)))return hr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&_e(o,"number",o.value)}},Or=Kn.extend({view:null,detail:null}),Nr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function jr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nr[e])&&!!t[e]}function Mr(){return jr}var Rr=0,zr=0,Ir=!1,Dr=!1,Fr=Or.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Mr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Rr;return Rr=e.screenX,Ir?"mousemove"===e.type?e.screenX-t:0:(Ir=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=zr;return zr=e.screenY,Dr?"mousemove"===e.type?e.screenY-t:0:(Dr=!0,0)}}),Ar=Fr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Lr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Wr={eventTypes:Lr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?jn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null,l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Fr,u=Lr.mouseLeave,c=Lr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Ar,u=Lr.pointerLeave,c=Lr.pointerEnter,s="pointer");if(e=null==l?i:Rn(l),i=null==t?i:Rn(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=In(e))l++;for(e=0,t=c;t;t=In(t))e++;for(;0<l-e;)a=In(a),l--;for(;0<e-l;)c=In(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=In(a),c=In(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=In(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=In(s);for(s=0;s<a.length;s++)Ln(a[s],"bubbled",u);for(s=r.length;0<s--;)Ln(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}},Br="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ur=Object.prototype.hasOwnProperty;function Hr(e,t){if(Br(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ur.call(t,n[r])||!Br(e[n[r]],t[n[r]]))return!1;return!0}var Vr=_&&"documentMode"in document&&11>=document.documentMode,Qr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$r=null,qr=null,Kr=null,Gr=!1;function Yr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Gr||null==$r||$r!==cn(n)?null:(n="selectionStart"in(n=$r)&&mn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Kr&&Hr(Kr,n)?null:(Kr=n,(e=Kn.getPooled(Qr.select,qr,e,t)).type="select",e.target=$r,Bn(e),e))}var Xr={eventTypes:Qr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Xe(o),i=T.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Rn(t):window,e){case"focus":(pr(o)||"true"===o.contentEditable)&&($r=o,qr=t,Kr=null);break;case"blur":Kr=qr=$r=null;break;case"mousedown":Gr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Gr=!1,Yr(n,r);case"selectionchange":if(Vr)break;case"keydown":case"keyup":return Yr(n,r)}return null}},Zr=Kn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jr=Kn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),eo=Or.extend({relatedTarget:null});function to(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var no={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ro={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},oo=Or.extend({key:function(e){if(e.key){var t=no[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=to(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ro[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Mr,charCode:function(e){return"keypress"===e.type?to(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?to(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),io=Fr.extend({dataTransfer:null}),lo=Or.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Mr}),ao=Kn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),uo=Fr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),co={eventTypes:Dt,extractEvents:function(e,t,n,r){var o=Ft.get(e);if(!o)return null;switch(e){case"keypress":if(0===to(n))return null;case"keydown":case"keyup":e=oo;break;case"blur":case"focus":e=eo;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Fr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=io;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=lo;break;case Qe:case $e:case qe:e=Zr;break;case Ke:e=ao;break;case"scroll":e=Or;break;case"wheel":e=uo;break;case"copy":case"cut":case"paste":e=Jr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ar;break;default:e=Kn}return Bn(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(l(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=zn,h=Mn,y=Rn,C({SimpleEventPlugin:co,EnterLeaveEventPlugin:Wr,ChangeEventPlugin:Pr,SelectEventPlugin:Xr,BeforeInputEventPlugin:fr});var so=[],fo=-1;function po(e){0>fo||(e.current=so[fo],so[fo]=null,fo--)}function mo(e,t){fo++,so[fo]=e.current,e.current=t}var ho={},yo={current:ho},go={current:!1},vo=ho;function bo(e,t){var n=e.type.contextTypes;if(!n)return ho;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function wo(e){return null!=e.childContextTypes}function ko(){po(go),po(yo)}function xo(e,t,n){if(yo.current!==ho)throw Error(l(168));mo(yo,t),mo(go,n)}function Eo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ye(t)||"Unknown",i));return o({},n,{},r)}function So(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ho,vo=yo.current,mo(yo,e),mo(go,go.current),!0}function To(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=Eo(e,t,vo),r.__reactInternalMemoizedMergedChildContext=e,po(go),po(yo),mo(yo,e)):po(go),mo(go,n)}var Co=i.unstable_runWithPriority,_o=i.unstable_scheduleCallback,Po=i.unstable_cancelCallback,Oo=i.unstable_requestPaint,No=i.unstable_now,jo=i.unstable_getCurrentPriorityLevel,Mo=i.unstable_ImmediatePriority,Ro=i.unstable_UserBlockingPriority,zo=i.unstable_NormalPriority,Io=i.unstable_LowPriority,Do=i.unstable_IdlePriority,Fo={},Ao=i.unstable_shouldYield,Lo=void 0!==Oo?Oo:function(){},Wo=null,Bo=null,Uo=!1,Ho=No(),Vo=1e4>Ho?No:function(){return No()-Ho};function Qo(){switch(jo()){case Mo:return 99;case Ro:return 98;case zo:return 97;case Io:return 96;case Do:return 95;default:throw Error(l(332))}}function $o(e){switch(e){case 99:return Mo;case 98:return Ro;case 97:return zo;case 96:return Io;case 95:return Do;default:throw Error(l(332))}}function qo(e,t){return e=$o(e),Co(e,t)}function Ko(e,t,n){return e=$o(e),_o(e,t,n)}function Go(e){return null===Wo?(Wo=[e],Bo=_o(Mo,Xo)):Wo.push(e),Fo}function Yo(){if(null!==Bo){var e=Bo;Bo=null,Po(e)}Xo()}function Xo(){if(!Uo&&null!==Wo){Uo=!0;var e=0;try{var t=Wo;qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Wo=null}catch(t){throw null!==Wo&&(Wo=Wo.slice(e+1)),_o(Mo,Yo),t}finally{Uo=!1}}}function Zo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ei={current:null},ti=null,ni=null,ri=null;function oi(){ri=ni=ti=null}function ii(e){var t=ei.current;po(ei),e.type._context._currentValue=t}function li(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ai(e,t){ti=e,ri=ni=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(zl=!0),e.firstContext=null)}function ui(e,t){if(ri!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ri=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ni){if(null===ti)throw Error(l(308));ni=t,ti.dependencies={expirationTime:0,firstContext:t,responders:null}}else ni=ni.next=t;return e._currentValue}var ci=!1;function si(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function fi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function di(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function pi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function mi(e,t){var n=e.alternate;null!==n&&fi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function hi(e,t,n,r){var i=e.updateQueue;ci=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&null!==(u=u.updateQueue)&&(u.baseQueue=a)}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),wu(a,m.suspenseConfig);e:{var y=e,g=m;switch(a=t,h=n,g.tag){case 1:if("function"==typeof(y=g.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=g.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ci=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,ku(s),e.expirationTime=s,e.memoizedState=c}}function yi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var gi=Y.ReactCurrentBatchConfig,vi=(new r.Component).refs;function bi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var wi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=au(),o=gi.suspense;(o=di(r=uu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),pi(e,o),cu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=au(),r=gi.suspense;(r=di(n=uu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),pi(e,r),cu(e,n)}};function ki(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!(t.prototype&&t.prototype.isPureReactComponent&&Hr(n,r)&&Hr(o,i))}function xi(e,t,n){var r=!1,o=ho,i=t.contextType;return"object"==typeof i&&null!==i?i=ui(i):(o=wo(t)?vo:yo.current,i=(r=null!=(r=t.contextTypes))?bo(e,o):ho),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Ei(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&wi.enqueueReplaceState(t,t.state,null)}function Si(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=vi,si(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ui(i):(i=wo(t)?vo:yo.current,o.context=bo(e,i)),hi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(bi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&wi.enqueueReplaceState(o,o.state,null),hi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ti=Array.isArray;function Ci(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===vi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function _i(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Pi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Bu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ci(e,t,n),r.return=e,r):((r=Uu(n.type,n.key,n.props,null,e.mode,r)).ref=Ci(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Qu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Uu(t.type,t.key,t.props,null,e.mode,n)).ref=Ci(e,null,t),n.return=e,n;case te:return(t=Qu(t,e.mode,n)).return=e,t}if(Ti(t)||he(t))return(t=Hu(t,e.mode,n,null)).return=e,t;_i(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ti(n)||he(n))return null!==o?null:f(e,t,n,r,null);_i(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ti(r)||he(r))return f(t,e=e.get(n)||null,r,o,null);_i(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var g=p(o,f,a[h],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(o,f),l=i(g,l,h),null===s?c=g:s.sibling=g,s=g,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=he(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,g=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(g=h,h=null):g=h.sibling;var b=p(o,h,v.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b,h=g}if(v.done)return n(o,h),s;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=d(o,v.value,c))&&(a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(o,h);!v.done;y++,v=u.next())null!==(v=m(h,o,y,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}}else if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Ci(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Hu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Uu(i.type,i.key,i.props,null,e.mode,u)).ref=Ci(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Qu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Vu(i,e.mode,u)).return=e,e=r),a(e);if(Ti(i))return h(e,r,i,u);if(he(i))return y(e,r,i,u);if(s&&_i(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Oi=Pi(!0),Ni=Pi(!1),ji={},Mi={current:ji},Ri={current:ji},zi={current:ji};function Ii(e){if(e===ji)throw Error(l(174));return e}function Di(e,t){switch(mo(zi,t),mo(Ri,e),mo(Mi,ji),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Ie(null,"");break;default:t=Ie(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}po(Mi),mo(Mi,t)}function Fi(){po(Mi),po(Ri),po(zi)}function Ai(e){Ii(zi.current);var t=Ii(Mi.current),n=Ie(t,e.type);t!==n&&(mo(Ri,e),mo(Mi,n))}function Li(e){Ri.current===e&&(po(Mi),po(Ri))}var Wi={current:0};function Bi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===gn||n.data===vn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ui(e,t){return{responder:e,props:t}}var Hi=Y.ReactCurrentDispatcher,Vi=Y.ReactCurrentBatchConfig,Qi=0,$i=null,qi=null,Ki=null,Gi=!1;function Yi(){throw Error(l(321))}function Xi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Br(e[n],t[n]))return!1;return!0}function Zi(e,t,n,r,o,i){if(Qi=i,$i=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Hi.current=null===e||null===e.memoizedState?kl:xl,e=n(r,o),t.expirationTime===Qi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Ki=qi=null,t.updateQueue=null,Hi.current=El,e=n(r,o)}while(t.expirationTime===Qi)}if(Hi.current=wl,t=null!==qi&&null!==qi.next,Qi=0,Ki=qi=$i=null,Gi=!1,t)throw Error(l(300));return e}function Ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e,Ki}function el(){if(null===qi){var e=$i.alternate;e=null!==e?e.memoizedState:null}else e=qi.next;var t=null===Ki?$i.memoizedState:Ki.next;if(null!==t)Ki=t,qi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(qi=e).memoizedState,baseState:qi.baseState,baseQueue:qi.baseQueue,queue:qi.queue,next:null},null===Ki?$i.memoizedState=Ki=e:Ki=Ki.next=e}return Ki}function tl(e,t){return"function"==typeof t?t(e):t}function nl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=qi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<Qi){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>$i.expirationTime&&($i.expirationTime=s,ku(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),wu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Br(r,t.memoizedState)||(zl=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function rl(e){var t=el(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Br(i,t.memoizedState)||(zl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ol(e){var t=Ji();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:tl,lastRenderedState:e}).dispatch=bl.bind(null,$i,e),[t.memoizedState,e]}function il(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=$i.updateQueue)?(t={lastEffect:null},$i.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ll(){return el().memoizedState}function al(e,t,n,r){var o=Ji();$i.effectTag|=e,o.memoizedState=il(1|t,n,void 0,void 0===r?null:r)}function ul(e,t,n,r){var o=el();r=void 0===r?null:r;var i=void 0;if(null!==qi){var l=qi.memoizedState;if(i=l.destroy,null!==r&&Xi(r,l.deps))return void il(t,n,i,r)}$i.effectTag|=e,o.memoizedState=il(1|t,n,i,r)}function cl(e,t){return al(516,4,e,t)}function sl(e,t){return ul(516,4,e,t)}function fl(e,t){return ul(4,2,e,t)}function dl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function pl(e,t,n){return n=null!=n?n.concat([e]):null,ul(4,2,dl.bind(null,t,e),n)}function ml(){}function hl(e,t){return Ji().memoizedState=[e,void 0===t?null:t],e}function yl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function gl(e,t){var n=el();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function vl(e,t,n){var r=Qo();qo(98>r?98:r,(function(){e(!0)})),qo(97<r?97:r,(function(){var r=Vi.suspense;Vi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Vi.suspense=r}}))}function bl(e,t,n){var r=au(),o=gi.suspense;o={expirationTime:r=uu(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===$i||null!==i&&i===$i)Gi=!0,o.expirationTime=Qi,$i.expirationTime=Qi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Br(a,l))return}catch(e){}cu(e,r)}}var wl={readContext:ui,useCallback:Yi,useContext:Yi,useEffect:Yi,useImperativeHandle:Yi,useLayoutEffect:Yi,useMemo:Yi,useReducer:Yi,useRef:Yi,useState:Yi,useDebugValue:Yi,useResponder:Yi,useDeferredValue:Yi,useTransition:Yi},kl={readContext:ui,useCallback:hl,useContext:ui,useEffect:cl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,al(4,2,dl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return al(4,2,e,t)},useMemo:function(e,t){var n=Ji();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ji();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=bl.bind(null,$i,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ji().memoizedState=e},useState:ol,useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=ol(e),r=n[0],o=n[1];return cl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ol(!1),n=t[0];return t=t[1],[hl(vl.bind(null,t,e),[t,e]),n]}},xl={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:nl,useRef:ll,useState:function(){return nl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=nl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=nl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},El={readContext:ui,useCallback:yl,useContext:ui,useEffect:sl,useImperativeHandle:pl,useLayoutEffect:fl,useMemo:gl,useReducer:rl,useRef:ll,useState:function(){return rl(tl)},useDebugValue:ml,useResponder:Ui,useDeferredValue:function(e,t){var n=rl(tl),r=n[0],o=n[1];return sl((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=rl(tl),n=t[0];return t=t[1],[yl(vl.bind(null,t,e),[t,e]),n]}},Sl=null,Tl=null,Cl=!1;function _l(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Pl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Ol(e){if(Cl){var t=Tl;if(t){var n=t;if(!Pl(e,t)){if(!(t=Tn(n.nextSibling))||!Pl(e,t))return e.effectTag=-1025&e.effectTag|2,Cl=!1,void(Sl=e);_l(Sl,n)}Sl=e,Tl=Tn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Cl=!1,Sl=e}}function Nl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Sl=e}function jl(e){if(e!==Sl)return!1;if(!Cl)return Nl(e),Cl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!xn(t,e.memoizedProps))for(t=Tl;t;)_l(e,t),t=Tn(t.nextSibling);if(Nl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===yn){if(0===t){Tl=Tn(e.nextSibling);break e}t--}else n!==hn&&n!==vn&&n!==gn||t++}e=e.nextSibling}Tl=null}}else Tl=Sl?Tn(e.stateNode.nextSibling):null;return!0}function Ml(){Tl=Sl=null,Cl=!1}var Rl=Y.ReactCurrentOwner,zl=!1;function Il(e,t,n,r){t.child=null===e?Ni(t,null,n,r):Oi(t,e.child,n,r)}function Dl(e,t,n,r,o){n=n.render;var i=t.ref;return ai(t,o),r=Zi(e,t,n,r,i,o),null===e||zl?(t.effectTag|=1,Il(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Fl(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Wu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Uu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Al(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Hr)(o,r)&&e.ref===t.ref)?Jl(e,t,i):(t.effectTag|=1,(e=Bu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Al(e,t,n,r,o,i){return null!==e&&Hr(e.memoizedProps,r)&&e.ref===t.ref&&(zl=!1,o<i)?(t.expirationTime=e.expirationTime,Jl(e,t,i)):Wl(e,t,n,r,i)}function Ll(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Wl(e,t,n,r,o){var i=wo(n)?vo:yo.current;return i=bo(t,i),ai(t,o),n=Zi(e,t,n,r,i,o),null===e||zl?(t.effectTag|=1,Il(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Jl(e,t,o))}function Bl(e,t,n,r,o){if(wo(n)){var i=!0;So(t)}else i=!1;if(ai(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),xi(t,n,r),Si(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1;var d=t.memoizedState;l.state=d,hi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),u=t.memoizedState),(a=ci||ki(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,fi(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Jo(t.type,a),u=l.context,c="object"==typeof(c=n.contextType)&&null!==c?ui(c):bo(t,c=wo(n)?vo:yo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&Ei(t,l,r,c),ci=!1,u=t.memoizedState,l.state=u,hi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),d=t.memoizedState),(s=ci||ki(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ul(e,t,n,r,i,o)}function Ul(e,t,n,r,o,i){Ll(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&To(t,n,!1),Jl(e,t,i);r=t.stateNode,Rl.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Oi(t,e.child,null,i),t.child=Oi(t,null,a,i)):Il(e,t,a,i),t.memoizedState=r.state,o&&To(t,n,!0),t.child}function Hl(e){var t=e.stateNode;t.pendingContext?xo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&xo(0,t.context,!1),Di(e,t.containerInfo)}var Vl,Ql,$l,ql,Kl={dehydrated:null,retryTime:0};function Gl(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Wi.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),mo(Wi,1&l),null===e){if(void 0!==i.fallback&&Ol(t),a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Kl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ni(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Bu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Bu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Kl,t.child=n,o}return n=Oi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=Hu(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Hu(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Kl,t.child=i,n}return t.memoizedState=null,t.child=Oi(t,e,i.children,n)}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),li(e.return,t)}function Xl(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Zl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Il(e,t,r.children,n),0!=(2&(r=Wi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(mo(Wi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Bi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Bi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xl(t,!0,n,null,i,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ku(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Bu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ea(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ta(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return wo(t.type)&&ko(),null;case 3:return Fi(),po(go),po(yo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!jl(t)||(t.effectTag|=4),Ql(t),null;case 5:Li(t),n=Ii(zi.current);var i=t.type;if(null!==e&&null!=t.stateNode)$l(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Ii(Mi.current),jl(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[Pn]=t,r[On]=a,i){case"iframe":case"object":case"embed":$t("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)$t(Ge[e],r);break;case"source":$t("error",r);break;case"img":case"image":case"link":$t("error",r),$t("load",r);break;case"form":$t("reset",r),$t("submit",r);break;case"details":$t("toggle",r);break;case"input":Ee(r,a),$t("invalid",r),an(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},$t("invalid",r),an(n,"onChange");break;case"textarea":je(r,a),$t("invalid",r),an(n,"onChange")}for(var u in rn(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):S.hasOwnProperty(u)&&null!=c&&an(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),Re(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=ze(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Pn]=t,e[On]=r,Vl(e,t,!1,!1),t.stateNode=e,u=on(i,r),i){case"iframe":case"object":case"embed":$t("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)$t(Ge[c],e);c=r;break;case"source":$t("error",e),c=r;break;case"img":case"image":case"link":$t("error",e),$t("load",e),c=r;break;case"form":$t("reset",e),$t("submit",e),c=r;break;case"details":$t("toggle",e),c=r;break;case"input":Ee(e,r),c=xe(e,r),$t("invalid",e),an(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),$t("invalid",e),an(n,"onChange");break;case"textarea":je(e,r),c=Ne(e,r),$t("invalid",e),an(n,"onChange");break;default:c=r}rn(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?tn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Ae(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Le(e,f):"number"==typeof f&&Le(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?null!=f&&an(n,a):null!=f&&X(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Re(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=un)}kn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Ii(zi.current),Ii(Mi.current),jl(t)?(n=t.stateNode,r=t.memoizedProps,n[Pn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Pn]=t,t.stateNode=n)}return null;case 13:return po(Wi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&jl(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Wi.current)?Ba===ja&&(Ba=za):(Ba!==ja&&Ba!==za||(Ba=Ia),0!==$a&&null!==Aa&&(Ku(Aa,Wa),Gu(Aa,$a)))),(n||r)&&(t.effectTag|=4),null);case 4:return Fi(),Ql(t),null;case 10:return ii(t),null;case 19:if(po(Wi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)ea(r,!1);else if(Ba!==ja||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Bi(a))){for(t.effectTag|=64,ea(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return mo(Wi,1&Wi.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Bi(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ea(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Vo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,ea(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Vo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Vo(),n.sibling=null,t=Wi.current,mo(Wi,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function na(e){switch(e.tag){case 1:wo(e.type)&&ko();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Fi(),po(go),po(yo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Li(e),null;case 13:return po(Wi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return po(Wi),null;case 4:return Fi(),null;case 10:return ii(e),null;default:return null}}function ra(e,t){return{value:e,source:t,stack:ge(t)}}Vl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ql=function(){},$l=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(Ii(Mi.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=Pe(c,l),r=Pe(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=un)}for(a in rn(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(S.hasOwnProperty(a)?(null!=s&&an(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},ql=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var oa="function"==typeof WeakSet?WeakSet:Set;function ia(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ye(n.type),t=t.value,null!==e&&1===e.tag&&ye(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function la(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function aa(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(l(163))}function ua(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ca(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function sa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ca(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Jo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&yi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}yi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&kn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&It(n)))))}throw Error(l(163))}function fa(e,t,n){switch("function"==typeof Fu&&Fu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Ru(o,e)}}e=e.next}while(e!==r)}))}break;case 1:la(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ru(e,t)}}(t,n);break;case 5:la(t);break;case 4:ga(e,t,n)}}function da(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&da(t)}function pa(e){return 5===e.tag||3===e.tag||4===e.tag}function ma(e){e:{for(var t=e.return;null!==t;){if(pa(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Le(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||pa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?ha(e,n,t):ya(e,n,t)}function ha(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=un));else if(4!==r&&null!==(e=e.child))for(ha(e,t,n),e=e.sibling;null!==e;)ha(e,t,n),e=e.sibling}function ya(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ya(e,t,n),e=e.sibling;null!==e;)ya(e,t,n),e=e.sibling}function ga(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(fa(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(fa(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function va(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ua(3,t);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[On]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Se(n,r),on(e,o),t=on(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?tn(n,u):"dangerouslySetInnerHTML"===a?Ae(n,u):"children"===a?Le(n,u):X(n,a,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":Me(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,It(t.containerInfo)));case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ka=Vo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=en("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ba(t);case 19:return void ba(t)}throw Error(l(163))}function ba(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new oa),t.forEach((function(t){var r=Iu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var wa="function"==typeof WeakMap?WeakMap:Map;function ka(e,t,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Xa||(Xa=!0,Za=r),ia(e,t)},n}function xa(e,t,n){(n=di(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ia(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ja?Ja=new Set([this]):Ja.add(this),ia(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Ea,Sa=Math.ceil,Ta=Y.ReactCurrentDispatcher,Ca=Y.ReactCurrentOwner,_a=0,Pa=8,Oa=16,Na=32,ja=0,Ma=1,Ra=2,za=3,Ia=4,Da=5,Fa=_a,Aa=null,La=null,Wa=0,Ba=ja,Ua=null,Ha=1073741823,Va=1073741823,Qa=null,$a=0,qa=!1,Ka=0,Ga=500,Ya=null,Xa=!1,Za=null,Ja=null,eu=!1,tu=null,nu=90,ru=null,ou=0,iu=null,lu=0;function au(){return(Fa&(Oa|Na))!==_a?1073741821-(Vo()/10|0):0!==lu?lu:lu=1073741821-(Vo()/10|0)}function uu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Qo();if(0==(4&t))return 99===r?1073741823:1073741822;if((Fa&Oa)!==_a)return Wa;if(null!==n)e=Zo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Aa&&e===Wa&&--e,e}function cu(e,t){if(50<ou)throw ou=0,iu=null,Error(l(185));if(null!==(e=su(e,t))){var n=Qo();1073741823===t?(Fa&Pa)!==_a&&(Fa&(Oa|Na))===_a?mu(e):(du(e),Fa===_a&&Yo()):du(e),(4&Fa)===_a||98!==n&&99!==n||(null===ru?ru=new Map([[e,t]]):(void 0===(n=ru.get(e))||n>t)&&ru.set(e,t))}}function su(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Aa===o&&(ku(t),Ba===Ia&&Ku(o,Wa)),Gu(o,t)),o}function fu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!qu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function du(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Go(mu.bind(null,e));else{var t=fu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=au();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Fo&&Po(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Go(mu.bind(null,e)):Ko(r,pu.bind(null,e),{timeout:10*(1073741821-t)-Vo()}),e.callbackNode=t}}}function pu(e,t){if(lu=0,t)return Yu(e,t=au()),du(e),null;var n=fu(e);if(0!==n){if(t=e.callbackNode,(Fa&(Oa|Na))!==_a)throw Error(l(327));if(Nu(),e===Aa&&n===Wa||gu(e,n),null!==La){var r=Fa;Fa|=Oa;for(var o=bu();;)try{Eu();break}catch(t){vu(e,t)}if(oi(),Fa=r,Ta.current=o,Ba===Ma)throw t=Ua,gu(e,n),Ku(e,n),du(e),t;if(null===La)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Ba,Aa=null,r){case ja:case Ma:throw Error(l(345));case Ra:Yu(e,2<n?2:n);break;case za:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),1073741823===Ha&&10<(o=Ka+Ga-Vo())){if(qa){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,gu(e,n);break}}if(0!==(i=fu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=En(_u.bind(null,e),o);break}_u(e);break;case Ia:if(Ku(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Cu(o)),qa&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,gu(e,n);break}if(0!==(o=fu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Va?r=10*(1073741821-Va)-Vo():1073741823===Ha?r=0:(r=10*(1073741821-Ha)-5e3,0>(r=(o=Vo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Sa(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=En(_u.bind(null,e),r);break}_u(e);break;case Da:if(1073741823!==Ha&&null!==Qa){i=Ha;var a=Qa;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Vo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Ku(e,n),e.timeoutHandle=En(_u.bind(null,e),r);break}}_u(e);break;default:throw Error(l(329))}if(du(e),e.callbackNode===t)return pu.bind(null,e)}}return null}function mu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,(Fa&(Oa|Na))!==_a)throw Error(l(327));if(Nu(),e===Aa&&t===Wa||gu(e,t),null!==La){var n=Fa;Fa|=Oa;for(var r=bu();;)try{xu();break}catch(t){vu(e,t)}if(oi(),Fa=n,Ta.current=r,Ba===Ma)throw n=Ua,gu(e,t),Ku(e,t),du(e),n;if(null!==La)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Aa=null,_u(e),du(e)}return null}function hu(e,t){var n=Fa;Fa|=1;try{return e(t)}finally{(Fa=n)===_a&&Yo()}}function yu(e,t){var n=Fa;Fa&=-2,Fa|=Pa;try{return e(t)}finally{(Fa=n)===_a&&Yo()}}function gu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Sn(n)),null!==La)for(n=La.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ko();break;case 3:Fi(),po(go),po(yo);break;case 5:Li(r);break;case 4:Fi();break;case 13:case 19:po(Wi);break;case 10:ii(r)}n=n.return}Aa=e,La=Bu(e.current,null),Wa=t,Ba=ja,Ua=null,Va=Ha=1073741823,Qa=null,$a=0,qa=!1}function vu(e,t){for(;;){try{if(oi(),Hi.current=wl,Gi)for(var n=$i.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Qi=0,Ki=qi=$i=null,Gi=!1,null===La||null===La.return)return Ba=Ma,Ua=t,La=null;e:{var o=e,i=La.return,l=La,a=t;if(t=Wa,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Wi.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=di(1073741823,null);g.tag=2,pi(l,g)}l.expirationTime=1073741823;break e}a=void 0,l=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new wa,a=new Set,v.set(u,a)):void 0===(a=v.get(u))&&(a=new Set,v.set(u,a)),!a.has(l)){a.add(l);var b=zu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ye(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(l))}Ba!==Da&&(Ba=Ra),a=ra(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,mi(f,ka(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Ja||!Ja.has(k)))){f.effectTag|=4096,f.expirationTime=t,mi(f,xa(f,u,t));break e}}f=f.return}while(null!==f)}La=Tu(La)}catch(e){t=e;continue}break}}function bu(){var e=Ta.current;return Ta.current=wl,null===e?wl:e}function wu(e,t){e<Ha&&2<e&&(Ha=e),null!==t&&e<Va&&2<e&&(Va=e,Qa=t)}function ku(e){e>$a&&($a=e)}function xu(){for(;null!==La;)La=Su(La)}function Eu(){for(;null!==La&&!Ao();)La=Su(La)}function Su(e){var t=Ea(e.alternate,e,Wa);return e.memoizedProps=e.pendingProps,null===t&&(t=Tu(e)),Ca.current=null,t}function Tu(e){La=e;do{var t=La.alternate;if(e=La.return,0==(2048&La.effectTag)){if(t=ta(t,La,Wa),1===Wa||1!==La.childExpirationTime){for(var n=0,r=La.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}La.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=La.firstEffect),null!==La.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=La.firstEffect),e.lastEffect=La.lastEffect),1<La.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=La:e.firstEffect=La,e.lastEffect=La))}else{if(null!==(t=na(La)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=La.sibling))return t;La=e}while(null!==La);return Ba===ja&&(Ba=Da),null}function Cu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function _u(e){var t=Qo();return qo(99,Pu.bind(null,e,t)),null}function Pu(e,t){do{Nu()}while(null!==tu);if((Fa&(Oa|Na))!==_a)throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=Cu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Aa&&(La=Aa=null,Wa=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Fa;Fa|=Na,Ca.current=null,bn=Qt;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,g=a,v=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)v=g,g=b;for(;;){if(g===a)break t;if(v===u&&++h===s&&(p=d),v===f&&++y===c&&(m=d),null!==(b=g.nextSibling))break;v=(g=v).parentNode}g=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;wn={activeElementDetached:null,focusedElem:a,selectionRange:u},Qt=!1,Ya=o;do{try{Ou()}catch(e){if(null===Ya)throw Error(l(330));Ru(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=o;do{try{for(a=e,u=t;null!==Ya;){var w=Ya.effectTag;if(16&w&&Le(Ya.stateNode,""),128&w){var k=Ya.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:ma(Ya),Ya.effectTag&=-3;break;case 6:ma(Ya),Ya.effectTag&=-3,va(Ya.alternate,Ya);break;case 1024:Ya.effectTag&=-1025;break;case 1028:Ya.effectTag&=-1025,va(Ya.alternate,Ya);break;case 4:va(Ya.alternate,Ya);break;case 8:ga(a,s=Ya,u),da(s)}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Ru(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);if(x=wn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&dn(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=fn(w,a),f=fn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Qt=!!bn,wn=bn=null,e.current=n,Ya=o;do{try{for(w=e;null!==Ya;){var E=Ya.effectTag;if(36&E&&sa(w,Ya.alternate,Ya),128&E){k=void 0;var S=Ya.ref;if(null!==S){var T=Ya.stateNode;Ya.tag,k=T,"function"==typeof S?S(k):S.current=k}}Ya=Ya.nextEffect}}catch(e){if(null===Ya)throw Error(l(330));Ru(Ya,e),Ya=Ya.nextEffect}}while(null!==Ya);Ya=null,Lo(),Fa=i}else e.current=n;if(eu)eu=!1,tu=e,nu=t;else for(Ya=o;null!==Ya;)t=Ya.nextEffect,Ya.nextEffect=null,Ya=t;if(0===(t=e.firstPendingTime)&&(Ja=null),1073741823===t?e===iu?ou++:(ou=0,iu=e):ou=0,"function"==typeof Du&&Du(n.stateNode,r),du(e),Xa)throw Xa=!1,e=Za,Za=null,e;return(Fa&Pa)!==_a||Yo(),null}function Ou(){for(;null!==Ya;){var e=Ya.effectTag;0!=(256&e)&&aa(Ya.alternate,Ya),0==(512&e)||eu||(eu=!0,Ko(97,(function(){return Nu(),null}))),Ya=Ya.nextEffect}}function Nu(){if(90!==nu){var e=97<nu?97:nu;return nu=90,qo(e,ju)}}function ju(){if(null===tu)return!1;var e=tu;if(tu=null,(Fa&(Oa|Na))!==_a)throw Error(l(331));var t=Fa;for(Fa|=Na,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ua(5,n),ca(5,n)}}catch(t){if(null===e)throw Error(l(330));Ru(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Fa=t,Yo(),!0}function Mu(e,t,n){pi(e,t=ka(e,t=ra(n,t),1073741823)),null!==(e=su(e,1073741823))&&du(e)}function Ru(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ja||!Ja.has(r))){pi(n,e=xa(n,e=ra(t,e),1073741823)),null!==(n=su(n,1073741823))&&du(n);break}}n=n.return}}function zu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Aa===e&&Wa===n?Ba===Ia||Ba===za&&1073741823===Ha&&Vo()-Ka<Ga?gu(e,Wa):qa=!0:qu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,du(e)))}function Iu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=uu(t=au(),e,null)),null!==(e=su(e,t))&&du(e)}Ea=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||go.current)zl=!0;else{if(r<n){switch(zl=!1,t.tag){case 3:Hl(t),Ml();break;case 5:if(Ai(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:wo(t.type)&&So(t);break;case 4:Di(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,mo(ei,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Gl(e,t,n):(mo(Wi,1&Wi.current),null!==(t=Jl(e,t,n))?t.sibling:null);mo(Wi,1&Wi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Zl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),mo(Wi,Wi.current),!r)return null}return Jl(e,t,n)}zl=!1}}else zl=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=bo(t,yo.current),ai(t,n),o=Zi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,wo(r)){var i=!0;So(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,si(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&bi(t,r,a,e),o.updater=wi,t.stateNode=o,o._reactInternalFiber=t,Si(t,r,e,n),t=Ul(null,t,r,!0,i,n)}else t.tag=0,Il(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Wu(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Jo(o,e),i){case 0:t=Wl(null,t,o,e,n);break e;case 1:t=Bl(null,t,o,e,n);break e;case 11:t=Dl(null,t,o,e,n);break e;case 14:t=Fl(null,t,o,Jo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Bl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 3:if(Hl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,fi(e,t),hi(t,r,null,n),(r=t.memoizedState.element)===o)Ml(),t=Jl(e,t,n);else{if((o=t.stateNode.hydrate)&&(Tl=Tn(t.stateNode.containerInfo.firstChild),Sl=t,o=Cl=!0),o)for(n=Ni(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Il(e,t,r,n),Ml();t=t.child}return t;case 5:return Ai(t),null===e&&Ol(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,xn(r,o)?a=null:null!==i&&xn(r,i)&&(t.effectTag|=16),Ll(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Il(e,t,a,n),t=t.child),t;case 6:return null===e&&Ol(t),null;case 13:return Gl(e,t,n);case 4:return Di(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Oi(t,null,r,n):Il(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Dl(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 7:return Il(e,t,t.pendingProps,n),t.child;case 8:case 12:return Il(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(mo(ei,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0==(i=Br(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!go.current){t=Jl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=di(n,null)).tag=2,pi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),li(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Il(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ai(t,n),r=r(o=ui(o,i.unstable_observedBits)),t.effectTag|=1,Il(e,t,r,n),t.child;case 14:return i=Jo(o=t.type,t.pendingProps),Fl(e,t,o,i=Jo(o.type,i),r,n);case 15:return Al(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,wo(r)?(e=!0,So(t)):e=!1,ai(t,n),xi(t,r,o),Si(t,r,o,n),Ul(null,t,r,!0,e,n);case 19:return Zl(e,t,n)}throw Error(l(156,t.tag))};var Du=null,Fu=null;function Au(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Lu(e,t,n,r){return new Au(e,t,n,r)}function Wu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Uu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Wu(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Hu(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Lu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Lu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Lu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Lu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Hu(e,t,n,r){return(e=Lu(7,e,r,t)).expirationTime=n,e}function Vu(e,t,n){return(e=Lu(6,e,null,t)).expirationTime=n,e}function Qu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $u(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function qu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ku(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Gu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Yu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Xu(e,t,n,r){var o=t.current,i=au(),a=gi.suspense;i=uu(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(wo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(wo(c)){n=Eo(n,c,u);break e}}n=u}else n=ho;return null===t.context?t.context=n:t.pendingContext=n,(t=di(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),pi(o,t),cu(o,i),i}function Zu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Ju(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function ec(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function tc(e,t,n){var r=new $u(e,t,n=null!=n&&!0===n.hydrate),o=Lu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,si(o),e[Nn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);Tt.forEach((function(e){pt(e,t,n)})),Ct.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function nc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rc(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Zu(l);a.call(e)}}Xu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new tc(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Zu(l);u.call(e)}}yu((function(){Xu(t,l,e,o)}))}return Zu(l)}function oc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nc(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Nn]=null}))},mt=function(e){if(13===e.tag){var t=Zo(au(),150,100);cu(e,t),ec(e,t)}},ht=function(e){13===e.tag&&(cu(e,3),ec(e,3))},yt=function(e){if(13===e.tag){var t=au();cu(e,t=uu(t,e,null)),ec(e,t)}},P=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=zn(r);if(!o)throw Error(l(90));ke(r),Te(r,o)}}}break;case"textarea":Me(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},z=hu,I=function(e,t,n,r,o){var i=Fa;Fa|=4;try{return qo(98,e.bind(null,t,n,r,o))}finally{(Fa=i)===_a&&Yo()}},D=function(){(Fa&(1|Oa|Na))===_a&&(function(){if(null!==ru){var e=ru;ru=null,e.forEach((function(e,t){Yu(t,e),du(t)})),Yo()}}(),Nu())},F=function(e,t){var n=Fa;Fa|=2;try{return e(t)}finally{(Fa=n)===_a&&Yo()}};var ic={Events:[Mn,Rn,zn,C,E,Bn,function(e){rt(e,Wn)},M,R,Yt,lt,Nu,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Du=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Fu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=tt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:jn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ic,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=tt(t))?null:e.stateNode},t.flushSync=function(e,t){if((Fa&(Oa|Na))!==_a)throw Error(l(187));var n=Fa;Fa|=1;try{return qo(99,e.bind(null,t))}finally{Fa=n,Yo()}},t.hydrate=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!0,n)},t.render=function(e,t,n){if(!nc(t))throw Error(l(200));return rc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!nc(e))throw Error(l(40));return!!e._reactRootContainer&&(yu((function(){rc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Nn]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!nc(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return rc(e,t,n,!1,r)},t.version="16.14.0"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t,n)=>{"use strict";var r=n(418),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var S={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:S.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function j(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function R(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case i:case l:a=!0}}if(a)return n(r,e,""===t?"."+I(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+I(o=e[u],u);a+=R(o,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=y&&e[y]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(o=e.next()).done;)a+=R(o=o.value,c=t+I(o,u++),n,r);else if("object"===o)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function z(e,t,n){return null==e?0:R(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?A(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function A(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),z(e,F,t=j(t,i,r,o)),M(t)}var L={current:null};function W(){var e=L.current;if(null===e)throw Error(g(321));return e}var B={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return A(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;z(e,D,t=j(null,null,t,n)),M(t)},count:function(e){return z(e,(function(){return null}),null)},toArray:function(e){var t=[];return A(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=S.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return W().useCallback(e,t)},t.useContext=function(e,t){return W().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return W().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return W().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return W().useLayoutEffect(e,t)},t.useMemo=function(e,t){return W().useMemo(e,t)},t.useReducer=function(e,t,n){return W().useReducer(e,t,n)},t.useRef=function(e){return W().useRef(e)},t.useState=function(e){return W().useState(e)},t.version="16.14.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,o,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,u=null,c=function(){if(null!==a)try{var e=t.unstable_now();a(!0,e),a=null}catch(e){throw setTimeout(c,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},n=function(e){null!==a?setTimeout(n,0,e):(a=e,setTimeout(c,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var y=d.now();t.unstable_now=function(){return d.now()-y}}var g=!1,v=null,b=-1,w=5,k=0;i=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,E=x.port2;x.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();k=e+w;try{v(!0,e)?E.postMessage(null):(g=!1,v=null)}catch(e){throw E.postMessage(null),e}}else g=!1},n=function(e){v=e,g||(g=!0,E.postMessage(null))},r=function(e,n){b=p((function(){e(t.unstable_now())}),n)},o=function(){m(b),b=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function T(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],O=[],N=1,j=null,M=3,R=!1,z=!1,I=!1;function D(e){for(var t=T(O);null!==t;){if(null===t.callback)C(O);else{if(!(t.startTime<=e))break;C(O),t.sortIndex=t.expirationTime,S(P,t)}t=T(O)}}function F(e){if(I=!1,D(e),!z)if(null!==T(P))z=!0,n(A);else{var t=T(O);null!==t&&r(F,t.startTime-e)}}function A(e,n){z=!1,I&&(I=!1,o()),R=!0;var l=M;try{for(D(n),j=T(P);null!==j&&(!(j.expirationTime>n)||e&&!i());){var a=j.callback;if(null!==a){j.callback=null,M=j.priorityLevel;var u=a(j.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?j.callback=u:j===T(P)&&C(P),D(n)}else C(P);j=T(P)}if(null!==j)var c=!0;else{var s=T(O);null!==s&&r(F,s.startTime-n),c=!1}return c}finally{j=null,M=l,R=!1}}function L(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||R||(z=!0,n(A))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return T(P)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=W,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,i,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:L(e)}else l=L(e),u=a;return e={id:N++,callback:i,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(O,e),null===T(P)&&e===T(O)&&(I?o():I=!0,r(F,u-a))):(e.sortIndex=l,S(P,e),z||R||(z=!0,n(A))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();D(e);var n=T(P);return n!==j&&null!==j&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<j.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},887:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{"use strict";var t=r(294),n=r(935);const o=r.p+"24bab5d633e36ca8d17edc63164cf934.jpg";var i=r(887),l=r.n(i),a=r(272),u=r.n(a);function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){s(e,t,n[t])}))}return e}function d(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var p=/([A-Z])/g,m=function(e){return"-".concat(e.toLowerCase())},h={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},y=["Webkit","ms","Moz","O"];Object.keys(h).forEach((function(e){y.forEach((function(t){h[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=h[e]}))}));var g=function(e,t){return"number"==typeof t?h[e]?""+t:t+"px":""+t},v=function(e,t){return w(g(e,t))},b=function(e,t){return l()(e).toString(36)},w=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},k="undefined"!=typeof Map,x=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var o=this.keyOrder.indexOf(t);this.keyOrder.splice(o,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(k&&n instanceof Map||n instanceof e){var i=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){i.set(t,e,r)})),void(this.elements[t]=i)}if(Array.isArray(n)||"object"!==c(n))this.elements[t]=n;else{for(var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e,a=Object.keys(n),u=0;u<a.length;u+=1)l.set(a[u],n[a[u]],r);this.elements[t]=l}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(k&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),o=0;o<r.length;o++)this.set(r[o],t[r[o]],!0)},e}();function E(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function S(e,t){return e(t={exports:{}},t.exports),t.exports}var T=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));E(T);var C=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var o={},i=e[t],l=(0,r.default)(t),a=Object.keys(n),u=0;u<a.length;u++){var c=a[u];if(c===t)for(var s=0;s<i.length;s++)o[i[s]+l]=n[t];o[c]=n[c]}return o}return n};var n,r=(n=T)&&n.__esModule?n:{default:n}}));E(C);var _=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var i=0,l=e.length;i<l;++i){var a=e[i](t,n,r,o);if(a)return a}}}));E(_);var P=S((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,o=t.length;r<o;++r)n(e,t[r]);else n(e,t)}}));E(P);var O=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));E(O);var N=E(S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,l=e.plugins;return function e(a){for(var u in a){var c=a[u];if((0,i.default)(c))a[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(l,u,c[f],a,t);(0,o.default)(s,p||c[f])}s.length>0&&(a[u]=s)}else{var m=(0,r.default)(l,u,c,a,t);m&&(a[u]=m),a=(0,n.default)(t,u,a)}}return a}};var n=l(C),r=l(_),o=l(P),i=l(O);function l(e){return e&&e.__esModule?e:{default:e}}}))),j=E(S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}}))),M=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));E(M);var R=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return o.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=M)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""]})),z=E(R),I=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return o.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=M)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),D=E(I),F=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),A=E(F),L=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return o.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=M)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),W=E(L),B=E(S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}}))),U=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){if(Object.prototype.hasOwnProperty.call(r,e)&&(l[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(o,t))return void(l.msFlex=o[t]);if(i.test(t))return void(l.msFlex=t+" 1 0%");var a=t.split(/\s/);switch(a.length){case 1:return void(l.msFlex="1 1 "+t);case 2:return void(i.test(a[1])?l.msFlex=a[0]+" "+a[1]+" 0%":l.msFlex=a[0]+" 1 "+a[1]);default:l.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},o={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},i=/^\d+(\.\d+)?$/})),H=E(U),V=E(S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?o.WebkitBoxOrient="vertical":o.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?o.WebkitBoxDirection="reverse":o.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(o[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}}))),Q=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&i.test(t))return o.map((function(e){return t.replace(i,(function(t){return e+t}))}))};var n,r=(n=M)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""],i=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),$=E(Q),q=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in i)return i[t];e in l&&(0,l[e])(t,n)};var o=["center","end","start","stretch"],i={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},l={alignSelf:function(e,t){o.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridColumnStart(a,t),l.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridRowStart(a,t),l.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){o.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),K=E(q),G=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return o.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=M)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),Y=E(G),X=E(S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var o=n[e],i=0,l=o.length;i<l;++i)r[o[i]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}}))),Z=E(S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}}))),J=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&o.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},o={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),ee=E(J),te=/[A-Z]/g,ne=/^ms-/,re={};function oe(e){return"-"+e.toLowerCase()}var ie,le=(ie=Object.freeze({default:function(e){if(re.hasOwnProperty(e))return re[e];var t=e.replace(te,oe);return re[e]=ne.test(t)?"-"+t:t}}))&&ie.default||ie,ae=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=le)&&n.__esModule?n:{default:n};e.exports=t.default}));E(ae);var ue=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,u){if("string"==typeof t&&l.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var o=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),i=0,l=o.length;i<l;++i){var u=o[i],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,m=d.length;p<m;++p)c.unshift(u.replace(f,a[d[p]]+f))}o[i]=c.join(",")}return o.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(i["Webkit"+(0,o.default)(e)]=s,i["Moz"+(0,o.default)(e)]=f,c)}};var n=i(ae),r=i(M),o=i(T);function i(e){return e&&e.__esModule?e:{default:e}}var l={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},a={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),ce=["Webkit"],se=["Moz"],fe=["ms"],de=["Webkit","Moz"],pe=["Webkit","ms"],me=["Webkit","Moz","ms"],he=N({plugins:[j,z,D,A,W,B,H,V,$,K,Y,X,Z,ee,E(ue)],prefixMap:{transform:pe,transformOrigin:pe,transformOriginX:pe,transformOriginY:pe,backfaceVisibility:ce,perspective:ce,perspectiveOrigin:ce,transformStyle:ce,transformOriginZ:ce,animation:ce,animationDelay:ce,animationDirection:ce,animationFillMode:ce,animationDuration:ce,animationIterationCount:ce,animationName:ce,animationPlayState:ce,animationTimingFunction:ce,appearance:de,userSelect:me,fontKerning:ce,textEmphasisPosition:ce,textEmphasis:ce,textEmphasisStyle:ce,textEmphasisColor:ce,boxDecorationBreak:ce,clipPath:ce,maskImage:ce,maskMode:ce,maskRepeat:ce,maskPosition:ce,maskClip:ce,maskOrigin:ce,maskSize:ce,maskComposite:ce,mask:ce,maskBorderSource:ce,maskBorderMode:ce,maskBorderSlice:ce,maskBorderWidth:ce,maskBorderOutset:ce,maskBorderRepeat:ce,maskBorder:ce,maskType:ce,textDecorationStyle:de,textDecorationSkip:de,textDecorationLine:de,textDecorationColor:de,filter:ce,fontFeatureSettings:de,breakAfter:me,breakBefore:me,breakInside:me,columnCount:de,columnFill:de,columnGap:de,columnRule:de,columnRuleColor:de,columnRuleStyle:de,columnRuleWidth:de,columns:de,columnSpan:de,columnWidth:de,writingMode:pe,flex:pe,flexBasis:ce,flexDirection:pe,flexGrow:ce,flexFlow:pe,flexShrink:ce,flexWrap:pe,alignContent:ce,alignItems:ce,alignSelf:ce,justifyContent:ce,order:ce,transitionDelay:ce,transitionDuration:ce,transitionProperty:ce,transitionTimingFunction:ce,backdropFilter:ce,scrollSnapType:pe,scrollSnapPointsX:pe,scrollSnapPointsY:pe,scrollSnapDestination:pe,scrollSnapCoordinate:pe,shapeImageThreshold:ce,shapeImageMargin:ce,shapeImageOutside:ce,hyphens:me,flowInto:pe,flowFrom:pe,regionFragment:pe,textOrientation:ce,boxSizing:se,textAlignLast:se,tabSize:se,wrapFlow:fe,wrapThrough:fe,wrapMargin:fe,touchAction:fe,textSizeAdjust:pe,borderImage:ce,borderImageOutset:ce,borderImageRepeat:ce,borderImageSlice:ce,borderImageSource:ce,borderImageWidth:ce}}),ye=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],ge=function e(t,n,r,o,i){for(var l=new x,a=0;a<n.length;a++)l.addStyleType(n[a]);var u=new x,c=[];l.forEach((function(n,l){r.some((function(a){var u=a(l,t,(function(t){return e(t,[n],r,o,i)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,d(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",a),c.push("@media all {".concat(u,"}"))),!0}))||u.set(l,n,!0)}));var s=we(t,u,o,i,r);return s&&c.unshift(s),c},ve=function(e,t,n){return"".concat((r=e,o=r.replace(p,m),"m"===o[0]&&"s"===o[1]&&"-"===o[2]?"-".concat(o):o),":").concat(n(e,t),";");var r,o},be=function(e,t){return e[t]=!0,e},we=function(e,t,n,r,o){!function(e,t,n){if(t)for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o];e.has(i)&&e.set(i,t[i](e.get(i),n),!1)}}(t,n,o);var i=Object.keys(t.elements).reduce(be,Object.create(null)),l=he(t.elements),a=Object.keys(l);if(a.length!==t.keyOrder.length)for(var u=0;u<a.length;u++)if(!i[a[u]]){var c;if((c="W"===a[u][0]?a[u][6].toLowerCase()+a[u].slice(7):"o"===a[u][1]?a[u][3].toLowerCase()+a[u].slice(4):a[u][2].toLowerCase()+a[u].slice(3))&&i[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,a[u])}else t.keyOrder.unshift(a[u])}for(var f=!1===r?g:v,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=l[m];if(Array.isArray(h))for(var y=0;y<h.length;y++)d.push(ve(m,h[y],f));else d.push(ve(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},ke=null,xe={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===c(t)?(_e(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===c(t)){var r="keyframe_".concat((i=t,b(JSON.stringify(i)))),o="@keyframes ".concat(r,"{");return t instanceof x?t.forEach((function(e,t){o+=ge(t,[e],n,xe,!1).join("")})):Object.keys(t).forEach((function(e){o+=ge(e,[t[e]],n,xe,!1).join("")})),Ce(r,[o+="}"]),r}return t;var i}},Ee={},Se=[],Te=!1,Ce=function(e,t){var n;if(!Ee[e]){if(!Te){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");Te=!0,u()(je)}(n=Se).push.apply(n,d(t)),Ee[e]=!0}},_e=function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!Ee[e]){var i=ge(t,n,o,xe,r);Ce(e,i)}},Pe=function(){Se=[],Ee={},Te=!1,ke=null},Oe=function(e){delete Ee[e]},Ne=function(){Te=!1;var e=Se;return Se=[],e},je=function(){var e=Ne();e.length>0&&function(e){if(null==ke&&null==(ke=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(ke=document.createElement("style")).type="text/css",ke.setAttribute("data-aphrodite",""),t.appendChild(ke)}var n=ke.styleSheet||ke.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else ke.innerText=(ke.innerText||"")+e.join("")}(e)},Me=function e(t,n,r,o){for(var i=0;i<t.length;i+=1)if(t[i])if(Array.isArray(t[i]))o+=e(t[i],n,r,o);else{if(!("_definition"in(l=t[i])&&"_name"in l&&"_len"in l))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[i]._name),r.push(t[i]._definition),o+=t[i]._len}var l;return o},Re=function(e,t,n){var r,o=[],i=[],l=Me(t,o,i,0);return 0===o.length?"":(r=1===o.length?"_".concat(o[0]):"_".concat(b(o.join())).concat((l%36).toString(36)),_e(r,".".concat(r),i,e,n),r)},ze=function(e,t){return"".concat(t,"_").concat(b(e))},Ie=b,De={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var o=n[r],i=e[o],l=JSON.stringify(i);t[o]={_len:l.length,_name:Ie(l,o),_definition:i}}return t},rehydrate:function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(e){Ee[e]=!0}))}},Fe="undefined"!=typeof window?null:{renderStatic:function(e){return Pe(),function(){if(Te)throw new Error("Cannot buffer while already buffering");Te=!0}(),{html:e(),css:{content:Ne().join(""),renderedClassNames:Object.keys(Ee)}}}},Ae=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ye;return{StyleSheet:f({},De,{extend:function(r){var o=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(o))}}),StyleSheetServer:Fe,StyleSheetTestUtils:null,minify:function(e){Ie=e?b:ze},css:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return Re(t,r,n)},flushToStyleTag:je,injectAndGetClassName:Re,defaultSelectorHandlers:ye,reset:Pe,resetInjectedStyle:Oe}}(!0),Le=Ae.StyleSheet,We=(Ae.StyleSheetServer,Ae.StyleSheetTestUtils,Ae.css),Be=(Ae.minify,Ae.flushToStyleTag,Ae.injectAndGetClassName,Ae.defaultSelectorHandlers,Ae.reset,Ae.resetInjectedStyle,{email:"",password:"",isLoggedIn:!1}),Ue=t.createContext({user:Be,logOut:function(){Be.isLoggedIn=!1}}),He=Le.create({h1:{marginLeft:"3rem"},appHeader:{display:"flex",flexDirection:"row",alignItems:"center",color:"#E11D3F",borderBottom:"1px solid #E11D3F"},appLogo:{height:"200px",width:"200px"}});const Ve=function(){var e=(0,t.useContext)(Ue);return t.createElement(t.Fragment,null,t.createElement("div",{className:We(He.appHeader)},t.createElement("img",{src:o,alt:"logo",className:We(He.appLogo)}),t.createElement("h1",{className:We(He.h1)},"School dashboard")),e.user.isLoggedIn?t.createElement("section",{id:"logoutSection"},"Welcome ",e.user.email,t.createElement("a",{href:"#",onClick:e.logOut},t.createElement("em",null,"(logout)"))):null)},Qe=function(){return t.createElement("div",{className:"App-footer"},t.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School main dashboard"))},$e=r.p+"c6058333f7ff39b56933f44d2afe9f33.png";var qe=r(697),Ke=r.n(qe);function Ge(e){return Ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ge(e)}function Ye(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==Ge(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==Ge(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===Ge(o)?o:String(o)),r)}var o}function Xe(e,t){return Xe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Xe(e,t)}function Ze(e){return Ze=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ze(e)}var Je=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Xe(e,t)}(a,e);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Ze(o);if(i){var n=Ze(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Ge(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),l.call(this,e)}return n=a,(r=[{key:"render",value:function(){var e=this,n="urgent"===this.props.type?et.urgent:et.default;return this.props.value?t.createElement("li",{"data-notification-type":this.props.type,onClick:function(){return e.props.markAsRead(e.props.id)},className:We(n,et.li)},this.props.value):t.createElement("li",{"data-notification-type":this.props.type,dangerouslySetInnerHTML:this.props.html,onClick:function(){return e.props.markAsRead(e.props.id)},className:We(n,et.li)})}}])&&Ye(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(t.PureComponent),et=Le.create({li:{"@media (max-width: 900px)":{listStyle:"none",borderBottom:"1px solid black",padding:"10px 8px",margin:0,width:"100%",fontSize:"20px"}},default:{color:"blue"},urgent:{color:"red"}});Je.defaultProps={type:"default",markAsRead:function(){console.log("empty func")},id:0},Je.propTypes={html:Ke().shape({__html:Ke().string}),type:Ke().string.isRequired,value:Ke().string,markAsRead:Ke().func,id:Ke().number};const tt=Je,nt=Ke().shape({id:Ke().number.isRequired,html:Ke().shape({__html:Ke().string}),type:Ke().string.isRequired,value:Ke().string});function rt(e){return rt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},rt(e)}function ot(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,ut(r.key),r)}}function it(e,t){return it=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},it(e,t)}function lt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function at(e){return at=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},at(e)}function ut(e){var t=function(e,t){if("object"!==rt(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==rt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===rt(t)?t:String(t)}var ct=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&it(e,t)}(a,e);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=at(o);if(i){var n=at(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===rt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return lt(e)}(this,e)});function a(e){var t,n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),n=lt(t=l.call(this,e)),o=function(e){console.log("Notification ".concat(e," has been marked as read"))},(r=ut(r="markAsRead"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,t}return n=a,(r=[{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length||e.displayDrawer!=this.props.displayDrawer}},{key:"render",value:function(){var e=this;return t.createElement(t.Fragment,null,this.props.displayDrawer?null:t.createElement("div",{className:We(st.menuItem),onClick:function(){return e.props.handleDisplayDrawer()}},"Your notifications"),this.props.displayDrawer?t.createElement("div",{className:We(st.notifications)},t.createElement("button",{style:{color:"#3a3a3a",fontWeight:"bold",background:"none",border:"none",fontSize:"15px",position:"absolute",right:"3px",top:"3px",cursor:"pointer",outline:"none"},"aria-label":"Close",className:We(st.button),onClick:function(){console.log("Close button has been clicked"),e.props.handleHideDrawer()}},t.createElement("img",{src:$e,alt:"close icon",width:"15px"})),0!=this.props.listNotifications.length?t.createElement("p",null,"Here is the list of notifications"):null,t.createElement("ul",null,0==this.props.listNotifications.length?t.createElement(tt,{type:"default",value:"No new notification for now"}):null,this.props.listNotifications.map((function(n){return t.createElement(tt,{type:n.type,value:n.value,html:n.html,key:n.id,markAsRead:e.markAsRead,id:n.id})})))):null)}}])&&ot(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(t.Component),st=Le.create({notifications:{border:"3px dotted #E11D3F",padding:"6px 12px",position:"absolute",top:"21px",right:"7px",marginTop:"12px",zIndex:"100","@media (max-width: 900px)":{padding:"0",fontSize:"20px",relative:"12px",top:"0",right:"0",bottom:"0",left:"0",height:"100%",width:"100%",backgroundColor:"#ffffff",boxSizing:"border-box",border:"none"}},button:{"media (max-width: 900px)":{position:"absolute",float:"right"}},menuItem:{position:"relative",zIndex:100,backgroundColor:"#fff8f8",cursor:"pointer",float:"right",":hover":{animationName:[{"0%":{opacity:.5},"100%":{opacity:1}},{"0%":{transform:"translateY(0px)"},"33%":{transform:"translateY(-5px)"},"66%":{transform:"translateY(5px)"},"100%":{transform:"translateY(0px)"}}],animationDuration:"1s, 0.5s",animationIterationCount:"3"}}});ct.defaultProps={displayDrawer:!1,listNotifications:[],handleDisplayDrawer:function(){},handleHideDrawer:function(){}},ct.propTypes={displayDrawer:Ke().bool,listNotifications:Ke().arrayOf(nt),handleDisplayDrawer:Ke().func,handleHideDrawer:Ke().func};const ft=ct;function dt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,l,a=[],u=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(c)throw o}}return a}}(e,t)||function(e,t){if(e){if("string"==typeof e)return pt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?pt(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function pt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function mt(e){var n=dt((0,t.useState)(""),2),r=n[0],o=n[1],i=dt((0,t.useState)(""),2),l=i[0],a=i[1],u=dt((0,t.useState)(!1),2),c=u[0],s=u[1];return(0,t.useEffect)((function(){s(""!==r&&""!==l)}),[r,l]),t.createElement(t.Fragment,null,t.createElement("div",{className:We(ht.appBody)},t.createElement("p",null,"Login to access the full dashboard"),t.createElement("form",{onSubmit:function(t){t.preventDefault(),e.logIn(t.target.elements.email.value,t.target.elements.password.value)}},t.createElement("label",{htmlFor:"email"},"Email: "),t.createElement("input",{type:"email",id:"email",name:"email",className:ht.inputs,value:r,onChange:function(e){o(e.target.value)}}),t.createElement("div",{className:We(ht.display)},t.createElement("label",{htmlFor:"password"},"Password: "),t.createElement("input",{type:"password",id:"password",name:"password",className:ht.inputs,value:l,onChange:function(e){a(e.target.value)}})),t.createElement("input",{type:"submit",className:We(ht.button),value:"OK",disabled:!c}))))}var ht=Le.create({appBody:{padding:"36px 24px"},inputs:{margin:"0 16px 0 8px"},display:{display:"inline-block","@media (max-width: 900px)":{display:"block"}},button:{borderColor:"yellow"}});mt.propTypes={logIn:Ke().func};const yt=mt,gt=Ke().shape({id:Ke().number.isRequired,name:Ke().string.isRequired,credit:Ke().number.isRequired});function vt(e){var n=e.isHeader,r=e.textFirstCell,o=e.textSecondCell;return t.createElement("tr",{style:n?{backgroundColor:"#deb5b545"}:{backgroundColor:"#f5f5f5ab"}},n?null===o?t.createElement("th",{colSpan:2,className:We(bt.thcenter)},r):t.createElement(t.Fragment,null,t.createElement("th",{className:We(bt.th)},r),t.createElement("th",{className:We(bt.th)},o)):t.createElement(t.Fragment,null,t.createElement("td",{className:We(bt.td)},r),t.createElement("td",{className:We(bt.td)},o)))}var bt=Le.create({thcenter:{borderBottom:"1px solid gray",margin:0,padding:0,textAlign:"center"},th:{borderBottom:"1px solid gray",margin:0,padding:0,textAlign:"left"},td:{paddingLeft:3}});vt.propTypes={isHeader:Ke().bool,textFirstCell:Ke().string.isRequired,textSecondCell:Ke().oneOfType([Ke().string,Ke().number])},vt.defaultProps={isHeader:!1,textSecondCell:null};const wt=vt;function kt(e){var n=e.listCourses;return t.createElement("table",{id:"CourseList",className:We(xt.table)},t.createElement("thead",null,t.createElement(wt,{isHeader:!0,textFirstCell:"Available courses"}),t.createElement(wt,{isHeader:!0,textFirstCell:"Course name",textSecondCell:"Credit"})),t.createElement("tbody",null,0==n.length?t.createElement(wt,{isHeader:!1,textFirstCell:"No course available yet"}):null,n.map((function(e){return t.createElement(wt,{isHeader:!1,textFirstCell:e.name,textSecondCell:e.credit,key:e.id})}))))}var xt=Le.create({table:{display:"table",border:"1px solid",borderCollapse:"collapse",margin:"2rem auto 0 auto",width:"90%"}});kt.defaultProps={listCourses:[]},kt.PropType={listCourses:Ke().arrayOf(gt)};const Et=kt;function St(e){return St="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},St(e)}function Tt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==St(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==St(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===St(o)?o:String(o)),r)}var o}function Ct(e,t){return Ct=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ct(e,t)}function _t(e){return _t=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},_t(e)}var Pt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ct(e,t)}(a,e);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_t(o);if(i){var n=_t(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===St(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),l.apply(this,arguments)}return n=a,(r=[{key:"render",value:function(){var e=this.props,n=e.title,r=e.children;return t.createElement("div",{className:"bodySection"},t.createElement("h2",null,n),r)}}])&&Tt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(t.Component);Pt.propTypes={title:Ke().string.isRequired,children:Ke().oneOfType([Ke().string,Ke().element])};const Ot=Pt;function Nt(e){return Nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Nt(e)}function jt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==Nt(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==Nt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===Nt(o)?o:String(o)),r)}var o}function Mt(e,t){return Mt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Mt(e,t)}function Rt(e){return Rt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Rt(e)}var zt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Mt(e,t)}(a,e);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Rt(o);if(i){var n=Rt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Nt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),l.apply(this,arguments)}return n=a,(r=[{key:"render",value:function(){return t.createElement("div",{className:We(It.marginBottom)},t.createElement(Ot,this.props))}}])&&jt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(t.Component),It=Le.create({marginBottom:{marginBottom:"40px"}});zt.defaultProps={children:t.createElement(t.Fragment,null)},zt.Proptypes={title:Ke().string.isRequired,children:Ke().oneOfType([Ke().string,Ke().element])};const Dt=zt;function Ft(e){return Ft="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ft(e)}function At(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ht(r.key),r)}}function Lt(e,t){return Lt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Lt(e,t)}function Wt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Bt(e){return Bt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Bt(e)}function Ut(e,t,n){return(t=Ht(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ht(e){var t=function(e,t){if("object"!==Ft(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==Ft(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===Ft(t)?t:String(t)}var Vt=function(n){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Lt(e,t)}(u,n);var r,o,i,l,a=(i=u,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Bt(i);if(l){var n=Bt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Ft(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return Wt(e)}(this,e)});function u(t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),Ut(Wt(n=a.call(this,t)),"logIn",(function(e,t){n.setState({user:{email:e,password:t,isLoggedIn:!0}})})),Ut(Wt(n),"logOut",(function(){n.setState({user:Be})})),Ut(Wt(n),"handleDisplayDrawer",(function(){n.setState({displayDrawer:!0})})),Ut(Wt(n),"handleHideDrawer",(function(){n.setState({displayDrawer:!1})})),Ut(Wt(n),"handleKeyDown",(function(t){t.ctrlKey&&"h"===t.key&&(e.preventDefault(),alert("Logging you out"),n.logOut())})),n.state={displayDrawer:!1,user:Be,logOut:n.logOut},n}return r=u,(o=[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.handleKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleKeyDown)}},{key:"render",value:function(){return t.createElement(Ue.Provider,{value:{user:this.state.user,logOut:this.state.logOut}},t.createElement(t.Fragment,null,t.createElement(ft,{listNotifications:Kt,displayDrawer:this.state.displayDrawer,handleDisplayDrawer:this.handleDisplayDrawer,handleHideDrawer:this.handleHideDrawer}),t.createElement("div",{className:We(Qt.App)},t.createElement(Ve,null),this.state.user.isLoggedIn?t.createElement(Dt,{title:"Course list"},t.createElement(Et,{listCourses:qt})):t.createElement(Dt,{title:"Log in to continue"},t.createElement(yt,{logIn:this.logIn})),t.createElement(Ot,{title:"News from the School"},t.createElement("p",null,"Begin your frontend dreams today")),t.createElement("div",{className:We($t.footer)},t.createElement(Qe,null)))))}}])&&At(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),u}(t.Component),Qt=Le.create({App:{position:"relative",minHeight:"100vh"}}),$t=Le.create({footer:{display:"flex",flexDirection:"row",justifyContent:"center",alignItems:"center",borderTop:"3px solid #E11D3F",padding:"1rem",fontStyle:"italic"}}),qt=[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}],Kt=[{id:1,value:"New course available",type:"default"},{id:2,value:"New resume available",type:"urgent"},{id:3,html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"},type:"urgent"}];const Gt=Vt;n.render(t.createElement(t.StrictMode,null,t.createElement(Gt,null)),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFBQSxPQUNFM0csRUFBQUEsY0FBQ0EsRUFBQUEsV0FBZ0IsS0FDZkEsRUFBQUEsY0FBQytGLEdBQUcsT0FFTi9vRCxTQUFTNHBELGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLWFzYXAuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2FzYXAvYnJvd3Nlci1yYXcuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc3RyaW5nLWhhc2gvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvYXNzZXRzL2hvbGJlcnRvbl9sb2dvLmpwZyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2NodW5rLWZlYmNlNDZiLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9hcGhyb2RpdGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0FwcC9BcHBDb250ZXh0LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9IZWFkZXIvSGVhZGVyLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Gb290ZXIvRm9vdGVyLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvYXNzZXRzL2Nsb3NlLWljb24ucG5nIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbkl0ZW0uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uSXRlbVNoYXBlLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0xvZ2luL0xvZ2luLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Db3Vyc2VMaXN0L0NvdXJzZVNoYXBlLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Db3Vyc2VMaXN0L0NvdXJzZUxpc3RSb3cuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQXBwL0FwcC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJhd0FzYXAgcHJvdmlkZXMgZXZlcnl0aGluZyB3ZSBuZWVkIGV4Y2VwdCBleGNlcHRpb24gbWFuYWdlbWVudC5cbnZhciByYXdBc2FwID0gcmVxdWlyZShcIi4vcmF3XCIpO1xuLy8gUmF3VGFza3MgYXJlIHJlY3ljbGVkIHRvIHJlZHVjZSBHQyBjaHVybi5cbnZhciBmcmVlVGFza3MgPSBbXTtcbi8vIFdlIHF1ZXVlIGVycm9ycyB0byBlbnN1cmUgdGhleSBhcmUgdGhyb3duIGluIHJpZ2h0IG9yZGVyIChGSUZPKS5cbi8vIEFycmF5LWFzLXF1ZXVlIGlzIGdvb2QgZW5vdWdoIGhlcmUsIHNpbmNlIHdlIGFyZSBqdXN0IGRlYWxpbmcgd2l0aCBleGNlcHRpb25zLlxudmFyIHBlbmRpbmdFcnJvcnMgPSBbXTtcbnZhciByZXF1ZXN0RXJyb3JUaHJvdyA9IHJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKHRocm93Rmlyc3RFcnJvcik7XG5cbmZ1bmN0aW9uIHRocm93Rmlyc3RFcnJvcigpIHtcbiAgICBpZiAocGVuZGluZ0Vycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgcGVuZGluZ0Vycm9ycy5zaGlmdCgpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDYWxscyBhIHRhc2sgYXMgc29vbiBhcyBwb3NzaWJsZSBhZnRlciByZXR1cm5pbmcsIGluIGl0cyBvd24gZXZlbnQsIHdpdGggcHJpb3JpdHlcbiAqIG92ZXIgb3RoZXIgZXZlbnRzIGxpa2UgYW5pbWF0aW9uLCByZWZsb3csIGFuZCByZXBhaW50LiBBbiBlcnJvciB0aHJvd24gZnJvbSBhblxuICogZXZlbnQgd2lsbCBub3QgaW50ZXJydXB0LCBub3IgZXZlbiBzdWJzdGFudGlhbGx5IHNsb3cgZG93biB0aGUgcHJvY2Vzc2luZyBvZlxuICogb3RoZXIgZXZlbnRzLCBidXQgd2lsbCBiZSByYXRoZXIgcG9zdHBvbmVkIHRvIGEgbG93ZXIgcHJpb3JpdHkgZXZlbnQuXG4gKiBAcGFyYW0ge3tjYWxsfX0gdGFzayBBIGNhbGxhYmxlIG9iamVjdCwgdHlwaWNhbGx5IGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBub1xuICogYXJndW1lbnRzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFzYXA7XG5mdW5jdGlvbiBhc2FwKHRhc2spIHtcbiAgICB2YXIgcmF3VGFzaztcbiAgICBpZiAoZnJlZVRhc2tzLmxlbmd0aCkge1xuICAgICAgICByYXdUYXNrID0gZnJlZVRhc2tzLnBvcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJhd1Rhc2sgPSBuZXcgUmF3VGFzaygpO1xuICAgIH1cbiAgICByYXdUYXNrLnRhc2sgPSB0YXNrO1xuICAgIHJhd0FzYXAocmF3VGFzayk7XG59XG5cbi8vIFdlIHdyYXAgdGFza3Mgd2l0aCByZWN5Y2xhYmxlIHRhc2sgb2JqZWN0cy4gIEEgdGFzayBvYmplY3QgaW1wbGVtZW50c1xuLy8gYGNhbGxgLCBqdXN0IGxpa2UgYSBmdW5jdGlvbi5cbmZ1bmN0aW9uIFJhd1Rhc2soKSB7XG4gICAgdGhpcy50YXNrID0gbnVsbDtcbn1cblxuLy8gVGhlIHNvbGUgcHVycG9zZSBvZiB3cmFwcGluZyB0aGUgdGFzayBpcyB0byBjYXRjaCB0aGUgZXhjZXB0aW9uIGFuZCByZWN5Y2xlXG4vLyB0aGUgdGFzayBvYmplY3QgYWZ0ZXIgaXRzIHNpbmdsZSB1c2UuXG5SYXdUYXNrLnByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHRoaXMudGFzay5jYWxsKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGFzYXAub25lcnJvcikge1xuICAgICAgICAgICAgLy8gVGhpcyBob29rIGV4aXN0cyBwdXJlbHkgZm9yIHRlc3RpbmcgcHVycG9zZXMuXG4gICAgICAgICAgICAvLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXRcbiAgICAgICAgICAgIC8vIGRlcGVuZHMgb24gaXRzIGV4aXN0ZW5jZS5cbiAgICAgICAgICAgIGFzYXAub25lcnJvcihlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJbiBhIHdlYiBicm93c2VyLCBleGNlcHRpb25zIGFyZSBub3QgZmF0YWwuIEhvd2V2ZXIsIHRvIGF2b2lkXG4gICAgICAgICAgICAvLyBzbG93aW5nIGRvd24gdGhlIHF1ZXVlIG9mIHBlbmRpbmcgdGFza3MsIHdlIHJldGhyb3cgdGhlIGVycm9yIGluIGFcbiAgICAgICAgICAgIC8vIGxvd2VyIHByaW9yaXR5IHR1cm4uXG4gICAgICAgICAgICBwZW5kaW5nRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgcmVxdWVzdEVycm9yVGhyb3coKTtcbiAgICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMudGFzayA9IG51bGw7XG4gICAgICAgIGZyZWVUYXNrc1tmcmVlVGFza3MubGVuZ3RoXSA9IHRoaXM7XG4gICAgfVxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vLyBVc2UgdGhlIGZhc3Rlc3QgbWVhbnMgcG9zc2libGUgdG8gZXhlY3V0ZSBhIHRhc2sgaW4gaXRzIG93biB0dXJuLCB3aXRoXG4vLyBwcmlvcml0eSBvdmVyIG90aGVyIGV2ZW50cyBpbmNsdWRpbmcgSU8sIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVkcmF3XG4vLyBldmVudHMgaW4gYnJvd3NlcnMuXG4vL1xuLy8gQW4gZXhjZXB0aW9uIHRocm93biBieSBhIHRhc2sgd2lsbCBwZXJtYW5lbnRseSBpbnRlcnJ1cHQgdGhlIHByb2Nlc3Npbmcgb2Zcbi8vIHN1YnNlcXVlbnQgdGFza3MuIFRoZSBoaWdoZXIgbGV2ZWwgYGFzYXBgIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93biBieSBhIHRhc2ssIHRoYXQgdGhlIHRhc2sgcXVldWUgd2lsbCBjb250aW51ZSBmbHVzaGluZyBhc1xuLy8gc29vbiBhcyBwb3NzaWJsZSwgYnV0IGlmIHlvdSB1c2UgYHJhd0FzYXBgIGRpcmVjdGx5LCB5b3UgYXJlIHJlc3BvbnNpYmxlIHRvXG4vLyBlaXRoZXIgZW5zdXJlIHRoYXQgbm8gZXhjZXB0aW9ucyBhcmUgdGhyb3duIGZyb20geW91ciB0YXNrLCBvciB0byBtYW51YWxseVxuLy8gY2FsbCBgcmF3QXNhcC5yZXF1ZXN0Rmx1c2hgIGlmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5tb2R1bGUuZXhwb3J0cyA9IHJhd0FzYXA7XG5mdW5jdGlvbiByYXdBc2FwKHRhc2spIHtcbiAgICBpZiAoIXF1ZXVlLmxlbmd0aCkge1xuICAgICAgICByZXF1ZXN0Rmx1c2goKTtcbiAgICAgICAgZmx1c2hpbmcgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBFcXVpdmFsZW50IHRvIHB1c2gsIGJ1dCBhdm9pZHMgYSBmdW5jdGlvbiBjYWxsLlxuICAgIHF1ZXVlW3F1ZXVlLmxlbmd0aF0gPSB0YXNrO1xufVxuXG52YXIgcXVldWUgPSBbXTtcbi8vIE9uY2UgYSBmbHVzaCBoYXMgYmVlbiByZXF1ZXN0ZWQsIG5vIGZ1cnRoZXIgY2FsbHMgdG8gYHJlcXVlc3RGbHVzaGAgYXJlXG4vLyBuZWNlc3NhcnkgdW50aWwgdGhlIG5leHQgYGZsdXNoYCBjb21wbGV0ZXMuXG52YXIgZmx1c2hpbmcgPSBmYWxzZTtcbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIG1ldGhvZCB0aGF0IGF0dGVtcHRzIHRvIGtpY2tcbi8vIG9mZiBhIGBmbHVzaGAgZXZlbnQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gYGZsdXNoYCB3aWxsIGF0dGVtcHQgdG8gZXhoYXVzdFxuLy8gdGhlIGV2ZW50IHF1ZXVlIGJlZm9yZSB5aWVsZGluZyB0byB0aGUgYnJvd3NlcidzIG93biBldmVudCBsb29wLlxudmFyIHJlcXVlc3RGbHVzaDtcbi8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgbmV4dCB0YXNrIHRvIGV4ZWN1dGUgaW4gdGhlIHRhc2sgcXVldWUuIFRoaXMgaXNcbi8vIHByZXNlcnZlZCBiZXR3ZWVuIGNhbGxzIHRvIGBmbHVzaGAgc28gdGhhdCBpdCBjYW4gYmUgcmVzdW1lZCBpZlxuLy8gYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24uXG52YXIgaW5kZXggPSAwO1xuLy8gSWYgYSB0YXNrIHNjaGVkdWxlcyBhZGRpdGlvbmFsIHRhc2tzIHJlY3Vyc2l2ZWx5LCB0aGUgdGFzayBxdWV1ZSBjYW4gZ3Jvd1xuLy8gdW5ib3VuZGVkLiBUbyBwcmV2ZW50IG1lbW9yeSBleGhhdXN0aW9uLCB0aGUgdGFzayBxdWV1ZSB3aWxsIHBlcmlvZGljYWxseVxuLy8gdHJ1bmNhdGUgYWxyZWFkeS1jb21wbGV0ZWQgdGFza3MuXG52YXIgY2FwYWNpdHkgPSAxMDI0O1xuXG4vLyBUaGUgZmx1c2ggZnVuY3Rpb24gcHJvY2Vzc2VzIGFsbCB0YXNrcyB0aGF0IGhhdmUgYmVlbiBzY2hlZHVsZWQgd2l0aFxuLy8gYHJhd0FzYXBgIHVubGVzcyBhbmQgdW50aWwgb25lIG9mIHRob3NlIHRhc2tzIHRocm93cyBhbiBleGNlcHRpb24uXG4vLyBJZiBhIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgYGZsdXNoYCBlbnN1cmVzIHRoYXQgaXRzIHN0YXRlIHdpbGwgcmVtYWluXG4vLyBjb25zaXN0ZW50IGFuZCB3aWxsIHJlc3VtZSB3aGVyZSBpdCBsZWZ0IG9mZiB3aGVuIGNhbGxlZCBhZ2Fpbi5cbi8vIEhvd2V2ZXIsIGBmbHVzaGAgZG9lcyBub3QgbWFrZSBhbnkgYXJyYW5nZW1lbnRzIHRvIGJlIGNhbGxlZCBhZ2FpbiBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93bi5cbmZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIHdoaWxlIChpbmRleCA8IHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgIC8vIEFkdmFuY2UgdGhlIGluZGV4IGJlZm9yZSBjYWxsaW5nIHRoZSB0YXNrLiBUaGlzIGVuc3VyZXMgdGhhdCB3ZSB3aWxsXG4gICAgICAgIC8vIGJlZ2luIGZsdXNoaW5nIG9uIHRoZSBuZXh0IHRhc2sgdGhlIHRhc2sgdGhyb3dzIGFuIGVycm9yLlxuICAgICAgICBpbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgcXVldWVbY3VycmVudEluZGV4XS5jYWxsKCk7XG4gICAgICAgIC8vIFByZXZlbnQgbGVha2luZyBtZW1vcnkgZm9yIGxvbmcgY2hhaW5zIG9mIHJlY3Vyc2l2ZSBjYWxscyB0byBgYXNhcGAuXG4gICAgICAgIC8vIElmIHdlIGNhbGwgYGFzYXBgIHdpdGhpbiB0YXNrcyBzY2hlZHVsZWQgYnkgYGFzYXBgLCB0aGUgcXVldWUgd2lsbFxuICAgICAgICAvLyBncm93LCBidXQgdG8gYXZvaWQgYW4gTyhuKSB3YWxrIGZvciBldmVyeSB0YXNrIHdlIGV4ZWN1dGUsIHdlIGRvbid0XG4gICAgICAgIC8vIHNoaWZ0IHRhc2tzIG9mZiB0aGUgcXVldWUgYWZ0ZXIgdGhleSBoYXZlIGJlZW4gZXhlY3V0ZWQuXG4gICAgICAgIC8vIEluc3RlYWQsIHdlIHBlcmlvZGljYWxseSBzaGlmdCAxMDI0IHRhc2tzIG9mZiB0aGUgcXVldWUuXG4gICAgICAgIGlmIChpbmRleCA+IGNhcGFjaXR5KSB7XG4gICAgICAgICAgICAvLyBNYW51YWxseSBzaGlmdCBhbGwgdmFsdWVzIHN0YXJ0aW5nIGF0IHRoZSBpbmRleCBiYWNrIHRvIHRoZVxuICAgICAgICAgICAgLy8gYmVnaW5uaW5nIG9mIHRoZSBxdWV1ZS5cbiAgICAgICAgICAgIGZvciAodmFyIHNjYW4gPSAwLCBuZXdMZW5ndGggPSBxdWV1ZS5sZW5ndGggLSBpbmRleDsgc2NhbiA8IG5ld0xlbmd0aDsgc2NhbisrKSB7XG4gICAgICAgICAgICAgICAgcXVldWVbc2Nhbl0gPSBxdWV1ZVtzY2FuICsgaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVldWUubGVuZ3RoIC09IGluZGV4O1xuICAgICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgaW5kZXggPSAwO1xuICAgIGZsdXNoaW5nID0gZmFsc2U7XG59XG5cbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGltcGxlbWVudGVkIHVzaW5nIGEgc3RyYXRlZ3kgYmFzZWQgb24gZGF0YSBjb2xsZWN0ZWQgZnJvbVxuLy8gZXZlcnkgYXZhaWxhYmxlIFNhdWNlTGFicyBTZWxlbml1bSB3ZWIgZHJpdmVyIHdvcmtlciBhdCB0aW1lIG9mIHdyaXRpbmcuXG4vLyBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xbUctNVVZR3VwNXF4R2RFTVdraFA2QldDejA1M05VYjJFMVFvVVRVMTZ1QS9lZGl0I2dpZD03ODM3MjQ1OTNcblxuLy8gU2FmYXJpIDYgYW5kIDYuMSBmb3IgZGVza3RvcCwgaVBhZCwgYW5kIGlQaG9uZSBhcmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdFxuLy8gaGF2ZSBXZWJLaXRNdXRhdGlvbk9ic2VydmVyIGJ1dCBub3QgdW4tcHJlZml4ZWQgTXV0YXRpb25PYnNlcnZlci5cbi8vIE11c3QgdXNlIGBnbG9iYWxgIG9yIGBzZWxmYCBpbnN0ZWFkIG9mIGB3aW5kb3dgIHRvIHdvcmsgaW4gYm90aCBmcmFtZXMgYW5kIHdlYlxuLy8gd29ya2Vycy4gYGdsb2JhbGAgaXMgYSBwcm92aXNpb24gb2YgQnJvd3NlcmlmeSwgTXIsIE1ycywgb3IgTW9wLlxuXG4vKiBnbG9iYWxzIHNlbGYgKi9cbnZhciBzY29wZSA9IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiBzZWxmO1xudmFyIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID0gc2NvcGUuTXV0YXRpb25PYnNlcnZlciB8fCBzY29wZS5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xuXG4vLyBNdXRhdGlvbk9ic2VydmVycyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBoYXZlIGhpZ2ggcHJpb3JpdHkgYW5kIHdvcmtcbi8vIHJlbGlhYmx5IGV2ZXJ5d2hlcmUgdGhleSBhcmUgaW1wbGVtZW50ZWQuXG4vLyBUaGV5IGFyZSBpbXBsZW1lbnRlZCBpbiBhbGwgbW9kZXJuIGJyb3dzZXJzLlxuLy9cbi8vIC0gQW5kcm9pZCA0LTQuM1xuLy8gLSBDaHJvbWUgMjYtMzRcbi8vIC0gRmlyZWZveCAxNC0yOVxuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciAxMVxuLy8gLSBpUGFkIFNhZmFyaSA2LTcuMVxuLy8gLSBpUGhvbmUgU2FmYXJpIDctNy4xXG4vLyAtIFNhZmFyaSA2LTdcbmlmICh0eXBlb2YgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJlcXVlc3RGbHVzaCA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21NdXRhdGlvbk9ic2VydmVyKGZsdXNoKTtcblxuLy8gTWVzc2FnZUNoYW5uZWxzIGFyZSBkZXNpcmFibGUgYmVjYXVzZSB0aGV5IGdpdmUgZGlyZWN0IGFjY2VzcyB0byB0aGUgSFRNTFxuLy8gdGFzayBxdWV1ZSwgYXJlIGltcGxlbWVudGVkIGluIEludGVybmV0IEV4cGxvcmVyIDEwLCBTYWZhcmkgNS4wLTEsIGFuZCBPcGVyYVxuLy8gMTEtMTIsIGFuZCBpbiB3ZWIgd29ya2VycyBpbiBtYW55IGVuZ2luZXMuXG4vLyBBbHRob3VnaCBtZXNzYWdlIGNoYW5uZWxzIHlpZWxkIHRvIGFueSBxdWV1ZWQgcmVuZGVyaW5nIGFuZCBJTyB0YXNrcywgdGhleVxuLy8gd291bGQgYmUgYmV0dGVyIHRoYW4gaW1wb3NpbmcgdGhlIDRtcyBkZWxheSBvZiB0aW1lcnMuXG4vLyBIb3dldmVyLCB0aGV5IGRvIG5vdCB3b3JrIHJlbGlhYmx5IGluIEludGVybmV0IEV4cGxvcmVyIG9yIFNhZmFyaS5cblxuLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTAgaXMgdGhlIG9ubHkgYnJvd3NlciB0aGF0IGhhcyBzZXRJbW1lZGlhdGUgYnV0IGRvZXNcbi8vIG5vdCBoYXZlIE11dGF0aW9uT2JzZXJ2ZXJzLlxuLy8gQWx0aG91Z2ggc2V0SW1tZWRpYXRlIHlpZWxkcyB0byB0aGUgYnJvd3NlcidzIHJlbmRlcmVyLCBpdCB3b3VsZCBiZVxuLy8gcHJlZmVycmFibGUgdG8gZmFsbGluZyBiYWNrIHRvIHNldFRpbWVvdXQgc2luY2UgaXQgZG9lcyBub3QgaGF2ZVxuLy8gdGhlIG1pbmltdW0gNG1zIHBlbmFsdHkuXG4vLyBVbmZvcnR1bmF0ZWx5IHRoZXJlIGFwcGVhcnMgdG8gYmUgYSBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAgTW9iaWxlIChhbmRcbi8vIERlc2t0b3AgdG8gYSBsZXNzZXIgZXh0ZW50KSB0aGF0IHJlbmRlcnMgYm90aCBzZXRJbW1lZGlhdGUgYW5kXG4vLyBNZXNzYWdlQ2hhbm5lbCB1c2VsZXNzIGZvciB0aGUgcHVycG9zZXMgb2YgQVNBUC5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS9pc3N1ZXMvMzk2XG5cbi8vIFRpbWVycyBhcmUgaW1wbGVtZW50ZWQgdW5pdmVyc2FsbHkuXG4vLyBXZSBmYWxsIGJhY2sgdG8gdGltZXJzIGluIHdvcmtlcnMgaW4gbW9zdCBlbmdpbmVzLCBhbmQgaW4gZm9yZWdyb3VuZFxuLy8gY29udGV4dHMgaW4gdGhlIGZvbGxvd2luZyBicm93c2Vycy5cbi8vIEhvd2V2ZXIsIG5vdGUgdGhhdCBldmVuIHRoaXMgc2ltcGxlIGNhc2UgcmVxdWlyZXMgbnVhbmNlcyB0byBvcGVyYXRlIGluIGFcbi8vIGJyb2FkIHNwZWN0cnVtIG9mIGJyb3dzZXJzLlxuLy9cbi8vIC0gRmlyZWZveCAzLTEzXG4vLyAtIEludGVybmV0IEV4cGxvcmVyIDYtOVxuLy8gLSBpUGFkIFNhZmFyaSA0LjNcbi8vIC0gTHlueCAyLjguN1xufSBlbHNlIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXIoZmx1c2gpO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCByZXF1ZXN0cyB0aGF0IHRoZSBoaWdoIHByaW9yaXR5IGV2ZW50IHF1ZXVlIGJlIGZsdXNoZWQgYXNcbi8vIHNvb24gYXMgcG9zc2libGUuXG4vLyBUaGlzIGlzIHVzZWZ1bCB0byBwcmV2ZW50IGFuIGVycm9yIHRocm93biBpbiBhIHRhc2sgZnJvbSBzdGFsbGluZyB0aGUgZXZlbnRcbi8vIHF1ZXVlIGlmIHRoZSBleGNlcHRpb24gaGFuZGxlZCBieSBOb2RlLmpz4oCZc1xuLy8gYHByb2Nlc3Mub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiKWAgb3IgYnkgYSBkb21haW4uXG5yYXdBc2FwLnJlcXVlc3RGbHVzaCA9IHJlcXVlc3RGbHVzaDtcblxuLy8gVG8gcmVxdWVzdCBhIGhpZ2ggcHJpb3JpdHkgZXZlbnQsIHdlIGluZHVjZSBhIG11dGF0aW9uIG9ic2VydmVyIGJ5IHRvZ2dsaW5nXG4vLyB0aGUgdGV4dCBvZiBhIHRleHQgbm9kZSBiZXR3ZWVuIFwiMVwiIGFuZCBcIi0xXCIuXG5mdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjaykge1xuICAgIHZhciB0b2dnbGUgPSAxO1xuICAgIHZhciBvYnNlcnZlciA9IG5ldyBCcm93c2VyTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjayk7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKG5vZGUsIHtjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICB0b2dnbGUgPSAtdG9nZ2xlO1xuICAgICAgICBub2RlLmRhdGEgPSB0b2dnbGU7XG4gICAgfTtcbn1cblxuLy8gVGhlIG1lc3NhZ2UgY2hhbm5lbCB0ZWNobmlxdWUgd2FzIGRpc2NvdmVyZWQgYnkgTWFsdGUgVWJsIGFuZCB3YXMgdGhlXG4vLyBvcmlnaW5hbCBmb3VuZGF0aW9uIGZvciB0aGlzIGxpYnJhcnkuXG4vLyBodHRwOi8vd3d3Lm5vbmJsb2NraW5nLmlvLzIwMTEvMDYvd2luZG93bmV4dHRpY2suaHRtbFxuXG4vLyBTYWZhcmkgNi4wLjUgKGF0IGxlYXN0KSBpbnRlcm1pdHRlbnRseSBmYWlscyB0byBjcmVhdGUgbWVzc2FnZSBwb3J0cyBvbiBhXG4vLyBwYWdlJ3MgZmlyc3QgbG9hZC4gVGhhbmtmdWxseSwgdGhpcyB2ZXJzaW9uIG9mIFNhZmFyaSBzdXBwb3J0c1xuLy8gTXV0YXRpb25PYnNlcnZlcnMsIHNvIHdlIGRvbid0IG5lZWQgdG8gZmFsbCBiYWNrIGluIHRoYXQgY2FzZS5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU1lc3NhZ2VDaGFubmVsKGNhbGxiYWNrKSB7XG4vLyAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbi8vICAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGNhbGxiYWNrO1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgY2hhbm5lbC5wb3J0Mi5wb3N0TWVzc2FnZSgwKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBGb3IgcmVhc29ucyBleHBsYWluZWQgYWJvdmUsIHdlIGFyZSBhbHNvIHVuYWJsZSB0byB1c2UgYHNldEltbWVkaWF0ZWBcbi8vIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLlxuLy8gRXZlbiBpZiB3ZSB3ZXJlLCB0aGVyZSBpcyBhbm90aGVyIGJ1ZyBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMC5cbi8vIEl0IGlzIG5vdCBzdWZmaWNpZW50IHRvIGFzc2lnbiBgc2V0SW1tZWRpYXRlYCB0byBgcmVxdWVzdEZsdXNoYCBiZWNhdXNlXG4vLyBgc2V0SW1tZWRpYXRlYCBtdXN0IGJlIGNhbGxlZCAqYnkgbmFtZSogYW5kIHRoZXJlZm9yZSBtdXN0IGJlIHdyYXBwZWQgaW4gYVxuLy8gY2xvc3VyZS5cbi8vIE5ldmVyIGZvcmdldC5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVNldEltbWVkaWF0ZShjYWxsYmFjaykge1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBTYWZhcmkgNi4wIGhhcyBhIHByb2JsZW0gd2hlcmUgdGltZXJzIHdpbGwgZ2V0IGxvc3Qgd2hpbGUgdGhlIHVzZXIgaXNcbi8vIHNjcm9sbGluZy4gVGhpcyBwcm9ibGVtIGRvZXMgbm90IGltcGFjdCBBU0FQIGJlY2F1c2UgU2FmYXJpIDYuMCBzdXBwb3J0c1xuLy8gbXV0YXRpb24gb2JzZXJ2ZXJzLCBzbyB0aGF0IGltcGxlbWVudGF0aW9uIGlzIHVzZWQgaW5zdGVhZC5cbi8vIEhvd2V2ZXIsIGlmIHdlIGV2ZXIgZWxlY3QgdG8gdXNlIHRpbWVycyBpbiBTYWZhcmksIHRoZSBwcmV2YWxlbnQgd29yay1hcm91bmRcbi8vIGlzIHRvIGFkZCBhIHNjcm9sbCBldmVudCBsaXN0ZW5lciB0aGF0IGNhbGxzIGZvciBhIGZsdXNoLlxuXG4vLyBgc2V0VGltZW91dGAgZG9lcyBub3QgY2FsbCB0aGUgcGFzc2VkIGNhbGxiYWNrIGlmIHRoZSBkZWxheSBpcyBsZXNzIHRoYW5cbi8vIGFwcHJveGltYXRlbHkgNyBpbiB3ZWIgd29ya2VycyBpbiBGaXJlZm94IDggdGhyb3VnaCAxOCwgYW5kIHNvbWV0aW1lcyBub3Rcbi8vIGV2ZW4gdGhlbi5cblxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICAvLyBXZSBkaXNwYXRjaCBhIHRpbWVvdXQgd2l0aCBhIHNwZWNpZmllZCBkZWxheSBvZiAwIGZvciBlbmdpbmVzIHRoYXRcbiAgICAgICAgLy8gY2FuIHJlbGlhYmx5IGFjY29tbW9kYXRlIHRoYXQgcmVxdWVzdC4gVGhpcyB3aWxsIHVzdWFsbHkgYmUgc25hcHBlZFxuICAgICAgICAvLyB0byBhIDQgbWlsaXNlY29uZCBkZWxheSwgYnV0IG9uY2Ugd2UncmUgZmx1c2hpbmcsIHRoZXJlJ3Mgbm8gZGVsYXlcbiAgICAgICAgLy8gYmV0d2VlbiBldmVudHMuXG4gICAgICAgIHZhciB0aW1lb3V0SGFuZGxlID0gc2V0VGltZW91dChoYW5kbGVUaW1lciwgMCk7XG4gICAgICAgIC8vIEhvd2V2ZXIsIHNpbmNlIHRoaXMgdGltZXIgZ2V0cyBmcmVxdWVudGx5IGRyb3BwZWQgaW4gRmlyZWZveFxuICAgICAgICAvLyB3b3JrZXJzLCB3ZSBlbmxpc3QgYW4gaW50ZXJ2YWwgaGFuZGxlIHRoYXQgd2lsbCB0cnkgdG8gZmlyZVxuICAgICAgICAvLyBhbiBldmVudCAyMCB0aW1lcyBwZXIgc2Vjb25kIHVudGlsIGl0IHN1Y2NlZWRzLlxuICAgICAgICB2YXIgaW50ZXJ2YWxIYW5kbGUgPSBzZXRJbnRlcnZhbChoYW5kbGVUaW1lciwgNTApO1xuXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZVRpbWVyKCkge1xuICAgICAgICAgICAgLy8gV2hpY2hldmVyIHRpbWVyIHN1Y2NlZWRzIHdpbGwgY2FuY2VsIGJvdGggdGltZXJzIGFuZFxuICAgICAgICAgICAgLy8gZXhlY3V0ZSB0aGUgY2FsbGJhY2suXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dEhhbmRsZSk7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBUaGlzIGlzIGZvciBgYXNhcC5qc2Agb25seS5cbi8vIEl0cyBuYW1lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHJhbmRvbWl6ZWQgdG8gYnJlYWsgYW55IGNvZGUgdGhhdCBkZXBlbmRzIG9uXG4vLyBpdHMgZXhpc3RlbmNlLlxucmF3QXNhcC5tYWtlUmVxdWVzdENhbGxGcm9tVGltZXIgPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXI7XG5cbi8vIEFTQVAgd2FzIG9yaWdpbmFsbHkgYSBuZXh0VGljayBzaGltIGluY2x1ZGVkIGluIFEuIFRoaXMgd2FzIGZhY3RvcmVkIG91dFxuLy8gaW50byB0aGlzIEFTQVAgcGFja2FnZS4gSXQgd2FzIGxhdGVyIGFkYXB0ZWQgdG8gUlNWUCB3aGljaCBtYWRlIGZ1cnRoZXJcbi8vIGFtZW5kbWVudHMuIFRoZXNlIGRlY2lzaW9ucywgcGFydGljdWxhcmx5IHRvIG1hcmdpbmFsaXplIE1lc3NhZ2VDaGFubmVsIGFuZFxuLy8gdG8gY2FwdHVyZSB0aGUgTXV0YXRpb25PYnNlcnZlciBpbXBsZW1lbnRhdGlvbiBpbiBhIGNsb3N1cmUsIHdlcmUgaW50ZWdyYXRlZFxuLy8gYmFjayBpbnRvIEFTQVAgcHJvcGVyLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RpbGRlaW8vcnN2cC5qcy9ibG9iL2NkZGY3MjMyNTQ2YTljZjg1ODUyNGI3NWNkZTZmOWVkZjcyNjIwYTcvbGliL3JzdnAvYXNhcC5qc1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBiaWdpbnQ6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xNC4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHUoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHUoMjI3KSk7XG5mdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsayl7ZGE9ITE7ZWE9bnVsbDtiYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgbD1lYTtkYT0hMTtlYT1udWxsfWVsc2UgdGhyb3cgRXJyb3IodSgxOTgpKTtmYXx8KGZhPSEwLGhhPWwpfX12YXIgbGE9bnVsbCxtYT1udWxsLG5hPW51bGw7XG5mdW5jdGlvbiBvYShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9bmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH12YXIgcGE9bnVsbCxxYT17fTtcbmZ1bmN0aW9uIHJhKCl7aWYocGEpZm9yKHZhciBhIGluIHFhKXt2YXIgYj1xYVthXSxjPXBhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighc2FbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7c2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZih0YS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTt0YVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZ1YShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8odWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIHVhKGEsYixjKXtpZih2YVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7dmFbYV09Yjt3YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBzYT1bXSx0YT17fSx2YT17fSx3YT17fTtmdW5jdGlvbiB4YShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtpZighcWEuaGFzT3duUHJvcGVydHkoYyl8fHFhW2NdIT09ZCl7aWYocWFbY10pdGhyb3cgRXJyb3IodSgxMDIsYykpO3FhW2NdPWQ7Yj0hMH19YiYmcmEoKX12YXIgeWE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLHphPW51bGwsQWE9bnVsbCxCYT1udWxsO1xuZnVuY3Rpb24gQ2EoYSl7aWYoYT1tYShhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHphKXRocm93IEVycm9yKHUoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9bGEoYiksemEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRGEoYSl7QWE/QmE/QmEucHVzaChhKTpCYT1bYV06QWE9YX1mdW5jdGlvbiBFYSgpe2lmKEFhKXt2YXIgYT1BYSxiPUJhO0JhPUFhPW51bGw7Q2EoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUNhKGJbYV0pfX1mdW5jdGlvbiBGYShhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEdhKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSGEoKXt9dmFyIElhPUZhLEphPSExLEthPSExO2Z1bmN0aW9uIExhKCl7aWYobnVsbCE9PUFhfHxudWxsIT09QmEpSGEoKSxFYSgpfVxuZnVuY3Rpb24gTWEoYSxiLGMpe2lmKEthKXJldHVybiBhKGIsYyk7S2E9ITA7dHJ5e3JldHVybiBJYShhLGIsYyl9ZmluYWxseXtLYT0hMSxMYSgpfX12YXIgTmE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLE9hPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksUGE9e30sUWE9e307XG5mdW5jdGlvbiBSYShhKXtpZihPYS5jYWxsKFFhLGEpKXJldHVybiEwO2lmKE9hLmNhbGwoUGEsYSkpcmV0dXJuITE7aWYoTmEudGVzdChhKSlyZXR1cm4gUWFbYV09ITA7UGFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gU2EoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBUYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxTYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIHYoYSxiLGMsZCxlLGYpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mfXZhciBDPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMCwhMSxhLG51bGwsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0NbYl09bmV3IHYoYiwxLCExLGFbMV0sbnVsbCwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLG51bGwsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO3ZhciBVYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIFZhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFxuVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuQy54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwKX0pO3ZhciBXYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoV2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbmZ1bmN0aW9uIFhhKGEsYixjLGQpe3ZhciBlPUMuaGFzT3duUHJvcGVydHkoYik/Q1tiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KFRhKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9SYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIFlhPS9eKC4qKVtcXFxcXFwvXS8sRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFphPUU/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsJGE9RT9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGFiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGJiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGNiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGRiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGViPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsZmI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGdiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGhiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGliPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6XG42MDEyMCxqYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGtiPUU/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsbGI9RT9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsbWI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIG5iKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1tYiYmYVttYl18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiBvYihhKXtpZigtMT09PWEuX3N0YXR1cyl7YS5fc3RhdHVzPTA7dmFyIGI9YS5fY3RvcjtiPWIoKTthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfX1cbmZ1bmN0aW9uIHBiKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNiOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJiOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGI6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgaWI6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZWI6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGdiOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XG5cIkZvcndhcmRSZWZcIik7Y2FzZSBqYjpyZXR1cm4gcGIoYS50eXBlKTtjYXNlIGxiOnJldHVybiBwYihhLnJlbmRlcik7Y2FzZSBrYjppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIHBiKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIHFiKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1wYihhLnR5cGUpO2M9bnVsbDtkJiYoYz1wYihkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFlhLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiByYihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gc2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIHRiKGEpe3ZhciBiPXNiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiB4YihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9dGIoYSkpfWZ1bmN0aW9uIHliKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1zYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIHpiKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEFiKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXJiKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQmIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZYYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gQ2IoYSxiKXtCYihhLGIpO3ZhciBjPXJiKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0RiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkRiKGEsYi50eXBlLHJiKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRWIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBGYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBHYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUZiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEhiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIityYihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gSWIoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBKYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnJiKGMpfX1cbmZ1bmN0aW9uIEtiKGEsYil7dmFyIGM9cmIoYi52YWx1ZSksZD1yYihiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIExiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIE1iPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIE5iKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gT2IoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP05iKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIFBiLFFiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PU1iLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle1BiPVBifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1BiLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPVBiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFJiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9ZnVuY3Rpb24gU2IoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGI9e2FuaW1hdGlvbmVuZDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNiKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWI9e30sVmI9e307XG55YSYmKFZiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2IoYSl7aWYoVWJbYV0pcmV0dXJuIFViW2FdO2lmKCFUYlthXSlyZXR1cm4gYTt2YXIgYj1UYlthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYilyZXR1cm4gVWJbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYj1XYihcImFuaW1hdGlvbmVuZFwiKSxZYj1XYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYj1XYihcImFuaW1hdGlvbnN0YXJ0XCIpLCRiPVdiKFwidHJhbnNpdGlvbmVuZFwiKSxhYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmM9bmV3IChcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCk7ZnVuY3Rpb24gY2MoYSl7dmFyIGI9YmMuZ2V0KGEpO3ZvaWQgMD09PWImJihiPW5ldyBNYXAsYmMuc2V0KGEsYikpO3JldHVybiBifVxuZnVuY3Rpb24gZGMoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmVmZmVjdFRhZyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gZWMoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBmYyhhKXtpZihkYyhhKSE9PWEpdGhyb3cgRXJyb3IodSgxODgpKTt9XG5mdW5jdGlvbiBnYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1kYyhhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBmYyhlKSxhO2lmKGY9PT1kKXJldHVybiBmYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHUoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IodSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih1KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhjKGEpe2E9Z2MoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBpYyhhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBqYyhhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIga2M9bnVsbDtcbmZ1bmN0aW9uIGxjKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKylvYShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZvYShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gbWMoYSl7bnVsbCE9PWEmJihrYz1pYyhrYyxhKSk7YT1rYztrYz1udWxsO2lmKGEpe2pjKGEsbGMpO2lmKGtjKXRocm93IEVycm9yKHUoOTUpKTtpZihmYSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9fVxuZnVuY3Rpb24gbmMoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIG9jKGEpe2lmKCF5YSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn12YXIgcGM9W107ZnVuY3Rpb24gcWMoYSl7YS50b3BMZXZlbFR5cGU9bnVsbDthLm5hdGl2ZUV2ZW50PW51bGw7YS50YXJnZXRJbnN0PW51bGw7YS5hbmNlc3RvcnMubGVuZ3RoPTA7MTA+cGMubGVuZ3RoJiZwYy5wdXNoKGEpfVxuZnVuY3Rpb24gcmMoYSxiLGMsZCl7aWYocGMubGVuZ3RoKXt2YXIgZT1wYy5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1kO2UubmF0aXZlRXZlbnQ9YjtlLnRhcmdldEluc3Q9YztyZXR1cm4gZX1yZXR1cm57dG9wTGV2ZWxUeXBlOmEsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX19XG5mdW5jdGlvbiBzYyhhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9dGMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9bmMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTt2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9YS5ldmVudFN5c3RlbUZsYWdzOzA9PT1jJiYoZ3w9NjQpO2Zvcih2YXIgaD1udWxsLGs9MDtrPHNhLmxlbmd0aDtrKyspe3ZhciBsPXNhW2tdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlLGcpKSYmKGg9XG5pYyhoLGwpKX1tYyhoKX19ZnVuY3Rpb24gdWMoYSxiLGMpe2lmKCFjLmhhcyhhKSl7c3dpdGNoKGEpe2Nhc2UgXCJzY3JvbGxcIjp2YyhiLFwic2Nyb2xsXCIsITApO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6dmMoYixcImZvY3VzXCIsITApO3ZjKGIsXCJibHVyXCIsITApO2Muc2V0KFwiYmx1clwiLG51bGwpO2Muc2V0KFwiZm9jdXNcIixudWxsKTticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6b2MoYSkmJnZjKGIsYSwhMCk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFjLmluZGV4T2YoYSkmJkYoYSxiKX1jLnNldChhLG51bGwpfX1cbnZhciB3Yyx4Yyx5Yyx6Yz0hMSxBYz1bXSxCYz1udWxsLENjPW51bGwsRGM9bnVsbCxFYz1uZXcgTWFwLEZjPW5ldyBNYXAsR2M9W10sSGM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSxJYz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBKYyhhLGIpe3ZhciBjPWNjKGIpO0hjLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSk7SWMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KX1mdW5jdGlvbiBLYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSx0b3BMZXZlbFR5cGU6YixldmVudFN5c3RlbUZsYWdzOmN8MzIsbmF0aXZlRXZlbnQ6ZSxjb250YWluZXI6ZH19XG5mdW5jdGlvbiBMYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkJjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpDYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpEYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6RWMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6RmMuZGVsZXRlKGIucG9pbnRlcklkKX19ZnVuY3Rpb24gTWMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1LYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1OYyhiKSxudWxsIT09YiYmeGMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO3JldHVybiBhfVxuZnVuY3Rpb24gT2MoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIEJjPU1jKEJjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBDYz1NYyhDYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gRGM9TWMoRGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtFYy5zZXQoZixNYyhFYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsRmMuc2V0KGYsTWMoRmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gUGMoYSl7dmFyIGI9dGMoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1kYyhiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1lYyhjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7eWMoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfWZ1bmN0aW9uIFFjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTt2YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWIpe3ZhciBjPU5jKGIpO251bGwhPT1jJiZ4YyhjKTthLmJsb2NrZWRPbj1iO3JldHVybiExfXJldHVybiEwfVxuZnVuY3Rpb24gU2MoYSxiLGMpe1FjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBUYygpe2Zvcih6Yz0hMTswPEFjLmxlbmd0aDspe3ZhciBhPUFjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1OYyhhLmJsb2NrZWRPbik7bnVsbCE9PWEmJndjKGEpO2JyZWFrfXZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtudWxsIT09Yj9hLmJsb2NrZWRPbj1iOkFjLnNoaWZ0KCl9bnVsbCE9PUJjJiZRYyhCYykmJihCYz1udWxsKTtudWxsIT09Q2MmJlFjKENjKSYmKENjPW51bGwpO251bGwhPT1EYyYmUWMoRGMpJiYoRGM9bnVsbCk7RWMuZm9yRWFjaChTYyk7RmMuZm9yRWFjaChTYyl9ZnVuY3Rpb24gVWMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLHpjfHwoemM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVGMpKSl9XG5mdW5jdGlvbiBWYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBVYyhiLGEpfWlmKDA8QWMubGVuZ3RoKXtVYyhBY1swXSxhKTtmb3IodmFyIGM9MTtjPEFjLmxlbmd0aDtjKyspe3ZhciBkPUFjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09QmMmJlVjKEJjLGEpO251bGwhPT1DYyYmVWMoQ2MsYSk7bnVsbCE9PURjJiZVYyhEYyxhKTtFYy5mb3JFYWNoKGIpO0ZjLmZvckVhY2goYik7Zm9yKGM9MDtjPEdjLmxlbmd0aDtjKyspZD1HY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8R2MubGVuZ3RoJiYoYz1HY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylQYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJkdjLnNoaWZ0KCl9XG52YXIgV2M9e30sWWM9bmV3IE1hcCxaYz1uZXcgTWFwLCRjPVtcImFib3J0XCIsXCJhYm9ydFwiLFhiLFwiYW5pbWF0aW9uRW5kXCIsWWIsXCJhbmltYXRpb25JdGVyYXRpb25cIixaYixcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcblwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLCRiLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBhZChhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXSxmPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO2Y9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmYsY2FwdHVyZWQ6ZitcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltkXSxldmVudFByaW9yaXR5OmJ9O1pjLnNldChkLGIpO1ljLnNldChkLGYpO1djW2VdPWZ9fVxuYWQoXCJibHVyIGJsdXIgY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXMgZm9jdXMgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSwwKTtcbmFkKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO2FkKCRjLDIpO2Zvcih2YXIgYmQ9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLGNkPTA7Y2Q8YmQubGVuZ3RoO2NkKyspWmMuc2V0KGJkW2NkXSwwKTtcbnZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIEYoYSxiKXt2YyhiLGEsITEpfWZ1bmN0aW9uIHZjKGEsYixjKXt2YXIgZD1aYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWQ/MjpkKXtjYXNlIDA6ZD1nZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2Nhc2UgMTpkPWhkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7ZGVmYXVsdDpkPWlkLmJpbmQobnVsbCxiLDEsYSl9Yz9hLmFkZEV2ZW50TGlzdGVuZXIoYixkLCEwKTphLmFkZEV2ZW50TGlzdGVuZXIoYixkLCExKX1mdW5jdGlvbiBnZChhLGIsYyxkKXtKYXx8SGEoKTt2YXIgZT1pZCxmPUphO0phPSEwO3RyeXtHYShlLGEsYixjLGQpfWZpbmFsbHl7KEphPWYpfHxMYSgpfX1mdW5jdGlvbiBoZChhLGIsYyxkKXtlZChkZCxpZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaWQoYSxiLGMsZCl7aWYoZmQpaWYoMDxBYy5sZW5ndGgmJi0xPEhjLmluZGV4T2YoYSkpYT1LYyhudWxsLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZXt2YXIgZT1SYyhhLGIsYyxkKTtpZihudWxsPT09ZSlMYyhhLGQpO2Vsc2UgaWYoLTE8SGMuaW5kZXhPZihhKSlhPUtjKGUsYSxiLGMsZCksQWMucHVzaChhKTtlbHNlIGlmKCFPYyhlLGEsYixjLGQpKXtMYyhhLGQpO2E9cmMoYSxkLG51bGwsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9fX19XG5mdW5jdGlvbiBSYyhhLGIsYyxkKXtjPW5jKGQpO2M9dGMoYyk7aWYobnVsbCE9PWMpe3ZhciBlPWRjKGMpO2lmKG51bGw9PT1lKWM9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7Yz1lYyhlKTtpZihudWxsIT09YylyZXR1cm4gYztjPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtjPW51bGx9ZWxzZSBlIT09YyYmKGM9bnVsbCl9fWE9cmMoYSxkLGMsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9cmV0dXJuIG51bGx9XG52YXIgamQ9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sa2Q9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGpkKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2tkLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7amRbYl09amRbYV19KX0pO2Z1bmN0aW9uIGxkKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxqZC5oYXNPd25Qcm9wZXJ0eShhKSYmamRbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gbWQoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bGQoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgbmQ9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIG9kKGEsYil7aWYoYil7aWYobmRbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDEzNyxhLFwiXCIpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHUoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHUoNjIsXCJcIikpO319XG5mdW5jdGlvbiBwZChhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHFkPU1iLmh0bWw7ZnVuY3Rpb24gcmQoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9Y2MoYSk7Yj13YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl1YyhiW2RdLGEsYyl9ZnVuY3Rpb24gc2QoKXt9XG5mdW5jdGlvbiB0ZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gdWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIHZkKGEsYil7dmFyIGM9dWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9dWQoYyl9fVxuZnVuY3Rpb24gd2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT93ZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9ZnVuY3Rpb24geGQoKXtmb3IodmFyIGE9d2luZG93LGI9dGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9dGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiB5ZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfXZhciB6ZD1cIiRcIixBZD1cIi8kXCIsQmQ9XCIkP1wiLENkPVwiJCFcIixEZD1udWxsLEVkPW51bGw7ZnVuY3Rpb24gRmQoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gR2QoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBIZD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxJZD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gSmQoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9XG5mdW5jdGlvbiBLZChhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT16ZHx8Yz09PUNkfHxjPT09QmQpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlIGM9PT1BZCYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIExkPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE1kPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrTGQsTmQ9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitMZCxPZD1cIl9fcmVhY3RDb250YWluZXJlJFwiK0xkO1xuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YVtNZF07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbT2RdfHxjW01kXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPUtkKGEpO251bGwhPT1hOyl7aWYoYz1hW01kXSlyZXR1cm4gYzthPUtkKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBOYyhhKXthPWFbTWRdfHxhW09kXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gUGQoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHUoMzMpKTt9ZnVuY3Rpb24gUWQoYSl7cmV0dXJuIGFbTmRdfHxudWxsfVxuZnVuY3Rpb24gUmQoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFNkKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9bGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLFxuYix0eXBlb2YgYykpO3JldHVybiBjfWZ1bmN0aW9uIFRkKGEsYixjKXtpZihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gVWQoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1SZChiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspVGQoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylUZChjW2JdLFwiYnViYmxlZFwiLGEpfX1cbmZ1bmN0aW9uIFZkKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gV2QoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWZChhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWGQoYSl7amMoYSxVZCl9dmFyIFlkPW51bGwsWmQ9bnVsbCwkZD1udWxsO1xuZnVuY3Rpb24gYWUoKXtpZigkZClyZXR1cm4gJGQ7dmFyIGEsYj1aZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiAkZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGJlKCl7cmV0dXJuITB9ZnVuY3Rpb24gY2UoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIEcoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2JlOmNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Y2U7cmV0dXJuIHRoaXN9XG5uKEcucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YmUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9YmUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9YmV9LGlzUGVyc2lzdGVudDpjZSxkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1jZTt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO0cuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuRy5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtkZShjKTtyZXR1cm4gY307ZGUoRyk7ZnVuY3Rpb24gZWUoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBmZShhKXtpZighKGEgaW5zdGFuY2VvZiB0aGlzKSl0aHJvdyBFcnJvcih1KDI3OSkpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBkZShhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1lZTthLnJlbGVhc2U9ZmV9dmFyIGdlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxoZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaWU9WzksMTMsMjcsMzJdLGplPXlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxrZT1udWxsO3lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihrZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIGxlPXlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYha2UsbWU9eWEmJighamV8fGtlJiY4PGtlJiYxMT49a2UpLG5lPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLG9lPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHBlPSExO1xuZnVuY3Rpb24gcWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1pZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHJlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHNlPSExO2Z1bmN0aW9uIHRlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiByZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7cGU9ITA7cmV0dXJuIG5lO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PW5lJiZwZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB1ZShhLGIpe2lmKHNlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFqZSYmcWUoYSxiKT8oYT1hZSgpLCRkPVpkPVlkPW51bGwsc2U9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIG1lJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB2ZT17ZXZlbnRUeXBlczpvZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKGplKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPW9lLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPW9lLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1vZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2Ugc2U/cWUoYSxjKSYmKGY9b2UuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1vZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhtZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihzZXx8ZiE9PW9lLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PW9lLmNvbXBvc2l0aW9uRW5kJiZzZSYmKGU9YWUoKSk6KFlkPWQsWmQ9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsc2U9ITApKSxmPWdlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9cmUoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFhkKGYpLGU9Zik6ZT1udWxsOyhhPWxlP3RlKGEsYyk6dWUoYSxjKSk/KGI9aGUuZ2V0UG9vbGVkKG9lLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxYZChiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSx3ZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiB4ZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXdlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciB5ZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiB6ZShhLGIsYyl7YT1HLmdldFBvb2xlZCh5ZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0RhKGMpO1hkKGEpO3JldHVybiBhfXZhciBBZT1udWxsLEJlPW51bGw7ZnVuY3Rpb24gQ2UoYSl7bWMoYSl9ZnVuY3Rpb24gRGUoYSl7dmFyIGI9UGQoYSk7aWYoeWIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgRmU9ITE7eWEmJihGZT1vYyhcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIEdlKCl7QWUmJihBZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSksQmU9QWU9bnVsbCl9ZnVuY3Rpb24gSGUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkRlKEJlKSlpZihhPXplKEJlLGEsbmMoYSkpLEphKW1jKGEpO2Vsc2V7SmE9ITA7dHJ5e0ZhKENlLGEpfWZpbmFsbHl7SmE9ITEsTGEoKX19fWZ1bmN0aW9uIEllKGEsYixjKXtcImZvY3VzXCI9PT1hPyhHZSgpLEFlPWIsQmU9YyxBZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSkpOlwiYmx1clwiPT09YSYmR2UoKX1mdW5jdGlvbiBKZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBEZShCZSl9ZnVuY3Rpb24gS2UoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBEZShiKX1mdW5jdGlvbiBMZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBEZShiKX1cbnZhciBNZT17ZXZlbnRUeXBlczp5ZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkZlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9QZChiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUVlO2Vsc2UgaWYoeGUoZSkpaWYoRmUpZz1MZTtlbHNle2c9SmU7dmFyIGg9SWV9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPUtlKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiB6ZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkRiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LE5lPUcuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxcbk9lPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZShhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9lW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gUWUoKXtyZXR1cm4gUGV9XG52YXIgUmU9MCxTZT0wLFRlPSExLFVlPSExLFZlPU5lLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1SZTtSZT1hLnNjcmVlblg7cmV0dXJuIFRlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooVGU9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1TZTtTZT1hLnNjcmVlblk7cmV0dXJuIFVlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooVWU9ITAsMCl9fSksV2U9VmUuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLFhlPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxZZT17ZXZlbnRUeXBlczpYZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtmPWQud2luZG93PT09ZD9kOihmPWQub3duZXJEb2N1bWVudCk/Zi5kZWZhdWx0Vmlld3x8Zi5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGcpe2lmKGc9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3RjKGIpOm51bGwsbnVsbCE9PWIpe3ZhciBoPWRjKGIpO2lmKGIhPT1ofHw1IT09Yi50YWcmJjYhPT1iLnRhZyliPW51bGx9fWVsc2UgZz1udWxsO2lmKGc9PT1iKXJldHVybiBudWxsO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1cbmEpe3ZhciBrPVZlO3ZhciBsPVhlLm1vdXNlTGVhdmU7dmFyIG09WGUubW91c2VFbnRlcjt2YXIgcD1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaz1XZSxsPVhlLnBvaW50ZXJMZWF2ZSxtPVhlLnBvaW50ZXJFbnRlcixwPVwicG9pbnRlclwiO2E9bnVsbD09Zz9mOlBkKGcpO2Y9bnVsbD09Yj9mOlBkKGIpO2w9ay5nZXRQb29sZWQobCxnLGMsZCk7bC50eXBlPXArXCJsZWF2ZVwiO2wudGFyZ2V0PWE7bC5yZWxhdGVkVGFyZ2V0PWY7Yz1rLmdldFBvb2xlZChtLGIsYyxkKTtjLnR5cGU9cCtcImVudGVyXCI7Yy50YXJnZXQ9ZjtjLnJlbGF0ZWRUYXJnZXQ9YTtkPWc7cD1iO2lmKGQmJnApYTp7az1kO209cDtnPTA7Zm9yKGE9azthO2E9UmQoYSkpZysrO2E9MDtmb3IoYj1tO2I7Yj1SZChiKSlhKys7Zm9yKDswPGctYTspaz1SZChrKSxnLS07Zm9yKDswPGEtZzspbT1SZChtKSxhLS07Zm9yKDtnLS07KXtpZihrPT09bXx8az09PW0uYWx0ZXJuYXRlKWJyZWFrIGE7XG5rPVJkKGspO209UmQobSl9az1udWxsfWVsc2Ugaz1udWxsO209aztmb3Ioaz1bXTtkJiZkIT09bTspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2sucHVzaChkKTtkPVJkKGQpfWZvcihkPVtdO3AmJnAhPT1tOyl7Zz1wLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ZC5wdXNoKHApO3A9UmQocCl9Zm9yKHA9MDtwPGsubGVuZ3RoO3ArKylWZChrW3BdLFwiYnViYmxlZFwiLGwpO2ZvcihwPWQubGVuZ3RoOzA8cC0tOylWZChkW3BdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm4gMD09PShlJjY0KT9bbF06W2wsY119fTtmdW5jdGlvbiBaZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyICRlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOlplLGFmPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBiZihhLGIpe2lmKCRlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighYWYuY2FsbChiLGNbZF0pfHwhJGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciBjZj15YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLGRmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxlZj1udWxsLGZmPW51bGwsZ2Y9bnVsbCxoZj0hMTtcbmZ1bmN0aW9uIGpmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoaGZ8fG51bGw9PWVmfHxlZiE9PXRkKGMpKXJldHVybiBudWxsO2M9ZWY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmeWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gZ2YmJmJmKGdmLGMpP251bGw6KGdmPWMsYT1HLmdldFBvb2xlZChkZi5zZWxlY3QsZmYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1lZixYZChhKSxhKX1cbnZhciBrZj17ZXZlbnRUeXBlczpkZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXtlPWZ8fChkLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCk7aWYoIShmPSFlKSl7YTp7ZT1jYyhlKTtmPXdhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9QZChiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKHhlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKWVmPWUsZmY9YixnZj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6Z2Y9ZmY9ZWY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6aGY9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBoZj0hMSxqZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihjZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGpmKGMsZCl9cmV0dXJuIG51bGx9fSxsZj1HLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksbWY9Ry5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxuZj1OZS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIG9mKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHBmPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxxZj17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0scmY9TmUuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXBmW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9mKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9xZlthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2YoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2YoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxzZj1WZS5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksdGY9TmUuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWV9KSx1Zj1HLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx2Zj1WZS5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHdmPXtldmVudFR5cGVzOldjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9WWMuZ2V0KGEpO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2YoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXJmO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1uZjticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVxuVmU7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1zZjticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXRmO2JyZWFrO2Nhc2UgWGI6Y2FzZSBZYjpjYXNlIFpiOmE9bGY7YnJlYWs7Y2FzZSAkYjphPXVmO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPU5lO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9dmY7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1tZjticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVxuV2U7YnJlYWs7ZGVmYXVsdDphPUd9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtYZChiKTtyZXR1cm4gYn19O2lmKHBhKXRocm93IEVycm9yKHUoMTAxKSk7cGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7cmEoKTt2YXIgeGY9TmM7bGE9UWQ7bWE9eGY7bmE9UGQ7eGEoe1NpbXBsZUV2ZW50UGx1Z2luOndmLEVudGVyTGVhdmVFdmVudFBsdWdpbjpZZSxDaGFuZ2VFdmVudFBsdWdpbjpNZSxTZWxlY3RFdmVudFBsdWdpbjprZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnZlfSk7dmFyIHlmPVtdLHpmPS0xO2Z1bmN0aW9uIEgoYSl7MD56Znx8KGEuY3VycmVudD15Zlt6Zl0seWZbemZdPW51bGwsemYtLSl9XG5mdW5jdGlvbiBJKGEsYil7emYrKzt5Zlt6Zl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBBZj17fSxKPXtjdXJyZW50OkFmfSxLPXtjdXJyZW50OiExfSxCZj1BZjtmdW5jdGlvbiBDZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEFmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1cbmZ1bmN0aW9uIERmKCl7SChLKTtIKEopfWZ1bmN0aW9uIEVmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1BZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiKTtJKEssYyl9ZnVuY3Rpb24gRmYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih1KDEwOCxwYihiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBuKHt9LGMse30sZCl9ZnVuY3Rpb24gR2YoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEFmO0JmPUouY3VycmVudDtJKEosYSk7SShLLEsuY3VycmVudCk7cmV0dXJuITB9XG5mdW5jdGlvbiBIZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhhPUZmKGEsYixCZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoSyksSChKKSxJKEosYSkpOkgoSyk7SShLLGMpfVxudmFyIElmPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEpmPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxLZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLExmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LE1mPXIudW5zdGFibGVfbm93LE5mPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsT2Y9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxQZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFFmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksUmY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxTZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxUZj17fSxVZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFZmPXZvaWQgMCE9PUxmP0xmOmZ1bmN0aW9uKCl7fSxXZj1udWxsLFhmPW51bGwsWWY9ITEsWmY9TWYoKSwkZj0xRTQ+WmY/TWY6ZnVuY3Rpb24oKXtyZXR1cm4gTWYoKS1aZn07XG5mdW5jdGlvbiBhZygpe3N3aXRjaChOZigpKXtjYXNlIE9mOnJldHVybiA5OTtjYXNlIFBmOnJldHVybiA5ODtjYXNlIFFmOnJldHVybiA5NztjYXNlIFJmOnJldHVybiA5NjtjYXNlIFNmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBiZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gT2Y7Y2FzZSA5ODpyZXR1cm4gUGY7Y2FzZSA5NzpyZXR1cm4gUWY7Y2FzZSA5NjpyZXR1cm4gUmY7Y2FzZSA5NTpyZXR1cm4gU2Y7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gY2coYSxiKXthPWJnKGEpO3JldHVybiBJZihhLGIpfWZ1bmN0aW9uIGRnKGEsYixjKXthPWJnKGEpO3JldHVybiBKZihhLGIsYyl9ZnVuY3Rpb24gZWcoYSl7bnVsbD09PVdmPyhXZj1bYV0sWGY9SmYoT2YsZmcpKTpXZi5wdXNoKGEpO3JldHVybiBUZn1mdW5jdGlvbiBnZygpe2lmKG51bGwhPT1YZil7dmFyIGE9WGY7WGY9bnVsbDtLZihhKX1mZygpfVxuZnVuY3Rpb24gZmcoKXtpZighWWYmJm51bGwhPT1XZil7WWY9ITA7dmFyIGE9MDt0cnl7dmFyIGI9V2Y7Y2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO1dmPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PVdmJiYoV2Y9V2Yuc2xpY2UoYSsxKSksSmYoT2YsZ2cpLGM7fWZpbmFsbHl7WWY9ITF9fX1mdW5jdGlvbiBoZyhhLGIsYyl7Yy89MTA7cmV0dXJuIDEwNzM3NDE4MjEtKCgoMTA3Mzc0MTgyMS1hK2IvMTApL2N8MCkrMSkqY31mdW5jdGlvbiBpZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgamc9e2N1cnJlbnQ6bnVsbH0sa2c9bnVsbCxsZz1udWxsLG1nPW51bGw7ZnVuY3Rpb24gbmcoKXttZz1sZz1rZz1udWxsfVxuZnVuY3Rpb24gb2coYSl7dmFyIGI9amcuY3VycmVudDtIKGpnKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHBnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHFnKGEsYil7a2c9YTttZz1sZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKGEuZXhwaXJhdGlvblRpbWU+PWImJihyZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBzZyhhLGIpe2lmKG1nIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YiltZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09bGcpe2lmKG51bGw9PT1rZyl0aHJvdyBFcnJvcih1KDMwOCkpO2xnPWI7a2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBsZz1sZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgdGc9ITE7ZnVuY3Rpb24gdWcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxiYXNlUXVldWU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHZnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGJhc2VRdWV1ZTphLmJhc2VRdWV1ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB3ZyhhLGIpe2E9e2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O3JldHVybiBhLm5leHQ9YX1mdW5jdGlvbiB4ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIHlnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJnZnKGMsYSk7YT1hLnVwZGF0ZVF1ZXVlO2M9YS5iYXNlUXVldWU7bnVsbD09PWM/KGEuYmFzZVF1ZXVlPWIubmV4dD1iLGIubmV4dD1iKTooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yil9XG5mdW5jdGlvbiB6ZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3RnPSExO3ZhciBmPWUuYmFzZVF1ZXVlLGc9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09Zyl7aWYobnVsbCE9PWYpe3ZhciBoPWYubmV4dDtmLm5leHQ9Zy5uZXh0O2cubmV4dD1ofWY9ZztlLnNoYXJlZC5wZW5kaW5nPW51bGw7aD1hLmFsdGVybmF0ZTtudWxsIT09aCYmKGg9aC51cGRhdGVRdWV1ZSxudWxsIT09aCYmKGguYmFzZVF1ZXVlPWcpKX1pZihudWxsIT09Zil7aD1mLm5leHQ7dmFyIGs9ZS5iYXNlU3RhdGUsbD0wLG09bnVsbCxwPW51bGwseD1udWxsO2lmKG51bGwhPT1oKXt2YXIgej1oO2Rve2c9ei5leHBpcmF0aW9uVGltZTtpZihnPGQpe3ZhciBjYT17ZXhwaXJhdGlvblRpbWU6ei5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PXg/KHA9eD1cbmNhLG09ayk6eD14Lm5leHQ9Y2E7Zz5sJiYobD1nKX1lbHNle251bGwhPT14JiYoeD14Lm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9KTtBZyhnLHouc3VzcGVuc2VDb25maWcpO2E6e3ZhciBEPWEsdD16O2c9YjtjYT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOkQ9dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBEKXtrPUQuY2FsbChjYSxrLGcpO2JyZWFrIGF9az1EO2JyZWFrIGE7Y2FzZSAzOkQuZWZmZWN0VGFnPUQuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDpEPXQucGF5bG9hZDtnPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBEP0QuY2FsbChjYSxrLGcpOkQ7aWYobnVsbD09PWd8fHZvaWQgMD09PWcpYnJlYWsgYTtrPW4oe30sayxnKTticmVhayBhO2Nhc2UgMjp0Zz0hMH19bnVsbCE9PXouY2FsbGJhY2smJlxuKGEuZWZmZWN0VGFnfD0zMixnPWUuZWZmZWN0cyxudWxsPT09Zz9lLmVmZmVjdHM9W3pdOmcucHVzaCh6KSl9ej16Lm5leHQ7aWYobnVsbD09PXp8fHo9PT1oKWlmKGc9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09ZylicmVhaztlbHNlIHo9Zi5uZXh0PWcubmV4dCxnLm5leHQ9aCxlLmJhc2VRdWV1ZT1mPWcsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpfW51bGw9PT14P209azp4Lm5leHQ9cDtlLmJhc2VTdGF0ZT1tO2UuYmFzZVF1ZXVlPXg7QmcobCk7YS5leHBpcmF0aW9uVGltZT1sO2EubWVtb2l6ZWRTdGF0ZT1rfX1cbmZ1bmN0aW9uIENnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9ZTtlPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQpdGhyb3cgRXJyb3IodSgxOTEsZCkpO2QuY2FsbChlKX19fXZhciBEZz1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxFZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBGZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmV4cGlyYXRpb25UaW1lJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgSmc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpP2RjKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1HZygpLGQ9RGcuc3VzcGVuc2U7XG5jPUhnKGMsYSxkKTtkPXdnKGMsZCk7ZC50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7eGcoYSxkKTtJZyhhLGMpfX07ZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hYmYoYyxkKXx8IWJmKGUsZik6ITB9XG5mdW5jdGlvbiBMZyhhLGIsYyl7dmFyIGQ9ITEsZT1BZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1zZyhmKTooZT1MKGIpP0JmOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0NmKGEsZSk6QWYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1KZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUVnO3VnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9c2coZik6KGY9TChiKT9CZjpKLmN1cnJlbnQsZS5jb250ZXh0PUNmKGEsZikpO3pnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihGZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSx6ZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIE9nPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBQZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHUoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IodSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RWcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IodSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IodSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFFnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHUoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpKTt9XG5mdW5jdGlvbiBSZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1TZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1UZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1QZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VWcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UGcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1WZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9V2coYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1UZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYz1VZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1QZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgJGE6cmV0dXJuIGI9VmcoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKE9nKGIpfHxcbm5iKGIpKXJldHVybiBiPVdnKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWFiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSAkYTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihPZyhjKXx8bmIoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO1FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSAkYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihPZyhkKXx8bmIoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO1FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gY2EoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLG09Zyx5PWc9MCxBPW51bGw7bnVsbCE9PW0mJnk8aC5sZW5ndGg7eSsrKXttLmluZGV4Pnk/KEE9bSxtPW51bGwpOkE9bS5zaWJsaW5nO3ZhciBxPXgoZSxtLGhbeV0sayk7aWYobnVsbD09PXEpe251bGw9PT1tJiYobT1BKTticmVha31hJiZcbm0mJm51bGw9PT1xLmFsdGVybmF0ZSYmYihlLG0pO2c9ZihxLGcseSk7bnVsbD09PXQ/bD1xOnQuc2libGluZz1xO3Q9cTttPUF9aWYoeT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt5PGgubGVuZ3RoO3krKyltPXAoZSxoW3ldLGspLG51bGwhPT1tJiYoZz1mKG0sZyx5KSxudWxsPT09dD9sPW06dC5zaWJsaW5nPW0sdD1tKTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7eTxoLmxlbmd0aDt5KyspQT16KG0sZSx5LGhbeV0sayksbnVsbCE9PUEmJihhJiZudWxsIT09QS5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1BLmtleT95OkEua2V5KSxnPWYoQSxnLHkpLG51bGw9PT10P2w9QTp0LnNpYmxpbmc9QSx0PUEpO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gRChlLGcsaCxsKXt2YXIgaz1uYihoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2Ygayl0aHJvdyBFcnJvcih1KDE1MCkpO2g9ay5jYWxsKGgpO1xuaWYobnVsbD09aCl0aHJvdyBFcnJvcih1KDE1MSkpO2Zvcih2YXIgbT1rPW51bGwsdD1nLHk9Zz0wLEE9bnVsbCxxPWgubmV4dCgpO251bGwhPT10JiYhcS5kb25lO3krKyxxPWgubmV4dCgpKXt0LmluZGV4Pnk/KEE9dCx0PW51bGwpOkE9dC5zaWJsaW5nO3ZhciBEPXgoZSx0LHEudmFsdWUsbCk7aWYobnVsbD09PUQpe251bGw9PT10JiYodD1BKTticmVha31hJiZ0JiZudWxsPT09RC5hbHRlcm5hdGUmJmIoZSx0KTtnPWYoRCxnLHkpO251bGw9PT1tP2s9RDptLnNpYmxpbmc9RDttPUQ7dD1BfWlmKHEuZG9uZSlyZXR1cm4gYyhlLHQpLGs7aWYobnVsbD09PXQpe2Zvcig7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXAoZSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTtyZXR1cm4ga31mb3IodD1kKGUsdCk7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXoodCxlLHkscS52YWx1ZSxsKSxudWxsIT09cSYmKGEmJm51bGwhPT1cbnEuYWx0ZXJuYXRlJiZ0LmRlbGV0ZShudWxsPT09cS5rZXk/eTpxLmtleSksZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTthJiZ0LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBrfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PWFiKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLFxuay5zaWJsaW5nKTtkPWUoayxmLnByb3BzKTtkLnJlZj1QZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PWFiPyhkPVdnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1VZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1QZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgJGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9XG5kLnNpYmxpbmd9ZD1WZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1UZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihPZyhmKSlyZXR1cm4gY2EoYSxkLGYsaCk7aWYobmIoZikpcmV0dXJuIEQoYSxkLGYsaCk7bCYmUWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFhnPVJnKCEwKSxZZz1SZyghMSksWmc9e30sJGc9e2N1cnJlbnQ6Wmd9LGFoPXtjdXJyZW50OlpnfSxiaD17Y3VycmVudDpaZ307XG5mdW5jdGlvbiBjaChhKXtpZihhPT09WmcpdGhyb3cgRXJyb3IodSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBkaChhLGIpe0koYmgsYik7SShhaCxhKTtJKCRnLFpnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOk9iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1PYihiLGEpfUgoJGcpO0koJGcsYil9ZnVuY3Rpb24gZWgoKXtIKCRnKTtIKGFoKTtIKGJoKX1mdW5jdGlvbiBmaChhKXtjaChiaC5jdXJyZW50KTt2YXIgYj1jaCgkZy5jdXJyZW50KTt2YXIgYz1PYihiLGEudHlwZSk7YiE9PWMmJihJKGFoLGEpLEkoJGcsYykpfWZ1bmN0aW9uIGdoKGEpe2FoLmN1cnJlbnQ9PT1hJiYoSCgkZyksSChhaCkpfXZhciBNPXtjdXJyZW50OjB9O1xuZnVuY3Rpb24gaGgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8Yy5kYXRhPT09QmR8fGMuZGF0YT09PUNkKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfWZ1bmN0aW9uIGloKGEsYil7cmV0dXJue3Jlc3BvbmRlcjphLHByb3BzOmJ9fVxudmFyIGpoPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsa2g9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsbGg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxtaD0hMTtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gbmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighJGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIG9oKGEsYixjLGQsZSxmKXtsaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5leHBpcmF0aW9uVGltZT0wO2poLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/cGg6cWg7YT1jKGQsZSk7aWYoYi5leHBpcmF0aW9uVGltZT09PWxoKXtmPTA7ZG97Yi5leHBpcmF0aW9uVGltZT0wO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IodSgzMDEpKTtmKz0xO1A9Tz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtqaC5jdXJyZW50PXJoO2E9YyhkLGUpfXdoaWxlKGIuZXhwaXJhdGlvblRpbWU9PT1saCl9amguY3VycmVudD1zaDtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O2xoPTA7UD1PPU49bnVsbDttaD0hMTtpZihiKXRocm93IEVycm9yKHUoMzAwKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB0aCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiB1aCgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gdmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiB3aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5leHBpcmF0aW9uVGltZTtpZihsPGxoKXt2YXIgbT17ZXhwaXJhdGlvblRpbWU6ay5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW0sZj1kKTpoPWgubmV4dD1tO2w+Ti5leHBpcmF0aW9uVGltZSYmXG4oTi5leHBpcmF0aW9uVGltZT1sLEJnKGwpKX1lbHNlIG51bGwhPT1oJiYoaD1oLm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLEFnKGwsay5zdXNwZW5zZUNvbmZpZyksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7JGUoZCxiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHhoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTskZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24geWgoYSl7dmFyIGI9dGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6dmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfVxuZnVuY3Rpb24gQmgoKXtyZXR1cm4gdWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIENoKGEsYixjLGQpe3ZhciBlPXRoKCk7Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9ZnVuY3Rpb24gRGgoYSxiLGMsZCl7dmFyIGU9dWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZuaChkLGcuZGVwcykpe0FoKGIsYyxmLGQpO3JldHVybn19Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLGYsZCl9ZnVuY3Rpb24gRWgoYSxiKXtyZXR1cm4gQ2goNTE2LDQsYSxiKX1mdW5jdGlvbiBGaChhLGIpe3JldHVybiBEaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEdoKGEsYil7cmV0dXJuIERoKDQsMixhLGIpfVxuZnVuY3Rpb24gSGgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBJaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIERoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBKaCgpe31mdW5jdGlvbiBLaChhLGIpe3RoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9ZnVuY3Rpb24gTGgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBNaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBOaChhLGIsYyl7dmFyIGQ9YWcoKTtjZyg5OD5kPzk4OmQsZnVuY3Rpb24oKXthKCEwKX0pO2NnKDk3PGQ/OTc6ZCxmdW5jdGlvbigpe3ZhciBkPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXthKCExKSxjKCl9ZmluYWxseXtraC5zdXNwZW5zZT1kfX0pfVxuZnVuY3Rpb24gemgoYSxiLGMpe3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXtleHBpcmF0aW9uVGltZTpkLHN1c3BlbnNlQ29uZmlnOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmFyIGY9Yi5wZW5kaW5nO251bGw9PT1mP2UubmV4dD1lOihlLm5leHQ9Zi5uZXh0LGYubmV4dD1lKTtiLnBlbmRpbmc9ZTtmPWEuYWx0ZXJuYXRlO2lmKGE9PT1OfHxudWxsIT09ZiYmZj09PU4pbWg9ITAsZS5leHBpcmF0aW9uVGltZT1saCxOLmV4cGlyYXRpb25UaW1lPWxoO2Vsc2V7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09Znx8MD09PWYuZXhwaXJhdGlvblRpbWUpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuZWFnZXJSZWR1Y2VyPWY7ZS5lYWdlclN0YXRlPWg7aWYoJGUoaCxnKSlyZXR1cm59Y2F0Y2goayl7fWZpbmFsbHl7fUlnKGEsXG5kKX19XG52YXIgc2g9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LHBoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpLaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpFaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gQ2goNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQ2goNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz10aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLFxuYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPXRoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOnloLHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz15aChhKSxkPWNbMF0sZT1jWzFdO0VoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1cbmN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eWgoITEpLGM9YlswXTtiPWJbMV07cmV0dXJuW0toKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHFoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6d2gsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHdoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXdoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVxud2godmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHJoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6eGgsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHhoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXhoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXhoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsXG5iLGEpLFtiLGFdKSxjXX19LE9oPW51bGwsUGg9bnVsbCxRaD0hMTtmdW5jdGlvbiBSaChhLGIpe3ZhciBjPVNoKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBUaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVWgoYSl7aWYoUWgpe3ZhciBiPVBoO2lmKGIpe3ZhciBjPWI7aWYoIVRoKGEsYikpe2I9SmQoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFUaChhLGIpKXthLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyO1FoPSExO09oPWE7cmV0dXJufVJoKE9oLGMpfU9oPWE7UGg9SmQoYi5maXJzdENoaWxkKX1lbHNlIGEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDIsUWg9ITEsT2g9YX19ZnVuY3Rpb24gVmgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO09oPWF9XG5mdW5jdGlvbiBXaChhKXtpZihhIT09T2gpcmV0dXJuITE7aWYoIVFoKXJldHVybiBWaChhKSxRaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUdkKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1QaDtiOylSaChhLGIpLGI9SmQoYi5uZXh0U2libGluZyk7VmgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih1KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1BZCl7aWYoMD09PWIpe1BoPUpkKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2UgYyE9PXpkJiZjIT09Q2QmJmMhPT1CZHx8YisrfWE9YS5uZXh0U2libGluZ31QaD1udWxsfX1lbHNlIFBoPU9oP0pkKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gWGgoKXtQaD1PaD1udWxsO1FoPSExfXZhciBZaD1XYS5SZWFjdEN1cnJlbnRPd25lcixyZz0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WWcoYixudWxsLGMsZCk6WGcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gWmgoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3FnKGIsZSk7ZD1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFiaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxjaShhLGIsZyxkLGUsZik7YT1VZyhjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmJmLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuICRoKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVNnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2koYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmYmYoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocmc9ITEsZTxmKT8oYi5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLCRoKGEsYixmKSk6ZGkoYSxiLGMsZCxmKX1mdW5jdGlvbiBlaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGRpKGEsYixjLGQsZSl7dmFyIGY9TChjKT9CZjpKLmN1cnJlbnQ7Zj1DZihiLGYpO3FnKGIsZSk7Yz1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXtpZihMKGMpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7cWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLExnKGIsYyxkKSxOZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKTt0Zz0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT14O3pnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9dGd8fEtnKGIsYyxoLGQseCxrLGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLHZnKGEsYiksaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6aWcoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKSx0Zz0hMSxrPWIubWVtb2l6ZWRTdGF0ZSxnLnN0YXRlPWssemcoYixkLGcsZSkseD1iLm1lbW9pemVkU3RhdGUsaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT10Z3x8S2coYixjLGgsZCxrLHgsbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWwsZD1tKTpcbihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gZ2koYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gZ2koYSxiLGMsZCxlLGYpe2VpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZIZihiLGMsITEpLCRoKGEsYixmKTtkPWIuc3RhdGVOb2RlO1loLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVhnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WGcoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmSGYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBoaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0VmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkVmKGEsYi5jb250ZXh0LCExKTtkaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgaWk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiBqaShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZS5mYWxsYmFjayYmVWgoYik7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1cbmI7ZS5zaWJsaW5nPWM7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WWcoYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9U2coZCxlKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1YZyhiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1cbmN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVhnKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24ga2koYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3BnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIGxpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYma2koYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpa2koYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShNLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1oaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO2xpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWhoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1saShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6bGkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uICRoKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZCZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVNnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9dmFyIG5pLG9pLHBpLHFpO1xubmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O29pPWZ1bmN0aW9uKCl7fTtcbnBpPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtjaCgkZy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emIoZyxmKTtkPXpiKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1HYihnLGYpO2Q9R2IoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1JYihnLGYpO2Q9SWIoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1zZCl9b2QoYyxkKTt2YXIgaCxrO2M9bnVsbDtmb3IoaCBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGgpJiZmLmhhc093blByb3BlcnR5KGgpJiZudWxsIT1mW2hdKWlmKFwic3R5bGVcIj09PVxuaClmb3IoayBpbiBnPWZbaF0sZylnLmhhc093blByb3BlcnR5KGspJiYoY3x8KGM9e30pLGNba109XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWgmJlwiY2hpbGRyZW5cIiE9PWgmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goaCxudWxsKSk7Zm9yKGggaW4gZCl7dmFyIGw9ZFtoXTtnPW51bGwhPWY/ZltoXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShoKSYmbCE9PWcmJihudWxsIT1sfHxudWxsIT1nKSlpZihcInN0eWxlXCI9PT1oKWlmKGcpe2ZvcihrIGluIGcpIWcuaGFzT3duUHJvcGVydHkoayl8fGwmJmwuaGFzT3duUHJvcGVydHkoayl8fChjfHwoYz17fSksY1trXT1cIlwiKTtmb3IoayBpbiBsKWwuaGFzT3duUHJvcGVydHkoaykmJmdba10hPT1sW2tdJiYoY3x8KGM9e30pLFxuY1trXT1sW2tdKX1lbHNlIGN8fChhfHwoYT1bXSksYS5wdXNoKGgsYykpLGM9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8obD1sP2wuX19odG1sOnZvaWQgMCxnPWc/Zy5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmchPT1sJiYoYT1hfHxbXSkucHVzaChoLGwpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiZyZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7aWYoYi51cGRhdGVRdWV1ZT1lKWIuZWZmZWN0VGFnfD00fX07XG5xaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZWZmZWN0VGFnfD00KX07ZnVuY3Rpb24gcmkoYSxiKXtzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gc2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDM6cmV0dXJuIGVoKCksSChLKSxIKEopLGM9Yi5zdGF0ZU5vZGUsYy5wZW5kaW5nQ29udGV4dCYmKGMuY29udGV4dD1jLnBlbmRpbmdDb250ZXh0LGMucGVuZGluZ0NvbnRleHQ9bnVsbCksbnVsbCE9PWEmJm51bGwhPT1hLmNoaWxkfHwhV2goYil8fChiLmVmZmVjdFRhZ3w9NCksb2koYiksbnVsbDtjYXNlIDU6Z2goYik7Yz1jaChiaC5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXBpKGEsYixlLGQsYyksYS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xucmV0dXJuIG51bGx9YT1jaCgkZy5jdXJyZW50KTtpZihXaChiKSl7ZD1iLnN0YXRlTm9kZTtlPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtNZF09YjtkW05kXT1mO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPGFjLmxlbmd0aDthKyspRihhY1thXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpBYihkLGYpO0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihkLGYpLEYoXCJpbnZhbGlkXCIsZCkscmQoYyxcIm9uQ2hhbmdlXCIpfW9kKGUsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJihhPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTp2YS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmcmQoYyxnKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoZCk7RWIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihkKTtMYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmXG4oZC5vbmNsaWNrPXNkKX1jPWE7Yi51cGRhdGVRdWV1ZT1jO251bGwhPT1jJiYoYi5lZmZlY3RUYWd8PTQpfWVsc2V7Zz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDthPT09cWQmJihhPU5iKGUpKTthPT09cWQ/XCJzY3JpcHRcIj09PWU/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChlLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxlKTthW01kXT1iO2FbTmRdPWQ7bmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9cGQoZSxkKTtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLFxuYSk7aD1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYy5sZW5ndGg7aCsrKUYoYWNbaF0sYSk7aD1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsYSk7RihcImxvYWRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixhKTtGKFwic3VibWl0XCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpBYihhLGQpO2g9emIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1HYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07aD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGEsXG5kKTtoPUliKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPWR9b2QoZSxoKTt2YXIgaz1oO2ZvcihmIGluIGspaWYoay5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGw9a1tmXTtcInN0eWxlXCI9PT1mP21kKGEsbCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8obD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1sJiZRYihhLGwpKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD8oXCJ0ZXh0YXJlYVwiIT09ZXx8XCJcIiE9PWwpJiZSYihhLGwpOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmUmIoYSxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJih2YS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1sJiZyZChjLGYpOm51bGwhPWwmJlhhKGEsZixsLGcpKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoYSk7RWIoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGEpO0xiKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIityYihkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2M9ZC52YWx1ZTtudWxsIT1jP0hiKGEsISFkLm11bHRpcGxlLGMsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZIYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoYS5vbmNsaWNrPXNkKX1GZChlLGQpJiYoYi5lZmZlY3RUYWd8PTQpfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlxaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbmM9Y2goYmguY3VycmVudCk7Y2goJGcuY3VycmVudCk7V2goYik/KGM9Yi5zdGF0ZU5vZGUsZD1iLm1lbW9pemVkUHJvcHMsY1tNZF09YixjLm5vZGVWYWx1ZSE9PWQmJihiLmVmZmVjdFRhZ3w9NCkpOihjPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksY1tNZF09YixiLnN0YXRlTm9kZT1jKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9YyxiO2M9bnVsbCE9PWQ7ZD0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJldoKGIpOihlPWEubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1lLGN8fG51bGw9PT1lfHwoZT1hLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihmPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWY/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9Zik6KGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PVxuZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpKTtpZihjJiYhZCYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlTPT09dGkmJihTPXVpKTtlbHNle2lmKFM9PT10aXx8Uz09PXVpKVM9dmk7MCE9PXdpJiZudWxsIT09VCYmKHhpKFQsVSkseWkoVCx3aSkpfWlmKGN8fGQpYi5lZmZlY3RUYWd8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG9pKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYiksbnVsbDtjYXNlIDE3OnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDE5OkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZT0wIT09KGIuZWZmZWN0VGFnJjY0KTtmPWQucmVuZGVyaW5nO2lmKG51bGw9PT1mKWlmKGUpcmkoZCwhMSk7ZWxzZXtpZihTIT09dGl8fG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJlxuNjQpKWZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KXthPWhoKGYpO2lmKG51bGwhPT1hKXtiLmVmZmVjdFRhZ3w9NjQ7cmkoZCwhMSk7ZT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1lJiYoYi51cGRhdGVRdWV1ZT1lLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2ZvcihkPWIuY2hpbGQ7bnVsbCE9PWQ7KWU9ZCxmPWMsZS5lZmZlY3RUYWcmPTIsZS5uZXh0RWZmZWN0PW51bGwsZS5maXJzdEVmZmVjdD1udWxsLGUubGFzdEVmZmVjdD1udWxsLGE9ZS5hbHRlcm5hdGUsbnVsbD09PWE/KGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGUuZXhwaXJhdGlvblRpbWU9ZixlLmNoaWxkPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwpOihlLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lLFxuZS5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLGUuY2hpbGQ9YS5jaGlsZCxlLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzLGUubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGUsZS51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGY9YS5kZXBlbmRlbmNpZXMsZS5kZXBlbmRlbmNpZXM9bnVsbD09PWY/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Zi5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Zi5maXJzdENvbnRleHQscmVzcG9uZGVyczpmLnJlc3BvbmRlcnN9KSxkPWQuc2libGluZztJKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9Zj1mLnNpYmxpbmd9fWVsc2V7aWYoIWUpaWYoYT1oaChmKSxudWxsIT09YSl7aWYoYi5lZmZlY3RUYWd8PTY0LGU9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZWZmZWN0VGFnfD00KSxyaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWYuYWx0ZXJuYXRlKXJldHVybiBiPVxuYi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMiokZigpLWQucmVuZGVyaW5nU3RhcnRUaW1lPmQudGFpbEV4cGlyYXRpb24mJjE8YyYmKGIuZWZmZWN0VGFnfD02NCxlPSEwLHJpKGQsITEpLGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWMtMSk7ZC5pc0JhY2t3YXJkcz8oZi5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1mKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWY6Yi5jaGlsZD1mLGQubGFzdD1mKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oMD09PWQudGFpbEV4cGlyYXRpb24mJihkLnRhaWxFeHBpcmF0aW9uPSRmKCkrNTAwKSxjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT0kZigpLGMuc2libGluZz1udWxsLGI9TS5jdXJyZW50LEkoTSxlP2ImMXwyOmImMSksYyk6bnVsbH10aHJvdyBFcnJvcih1KDE1NixcbmIudGFnKSk7fWZ1bmN0aW9uIHppKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRGYoKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih1KDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBnaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoTSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKE0pLG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBBaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOnFiKGIpfX1cbnZhciBCaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBDaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPXFiKGMpKTtudWxsIT09YyYmcGIoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmcGIoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gRGkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe0VpKGEsYyl9fWZ1bmN0aW9uIEZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0VpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEdpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmlnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEhpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuZGVzdHJveTtjLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWQmJmQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIElpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1cbmZ1bmN0aW9uIEppKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpJaSgzLGMpO3JldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtpZihjLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1iKWEuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmlnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpO2EuY29tcG9uZW50RGlkVXBkYXRlKGQsYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWI9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmQ2coYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1DZyhjLGIsYSl9cmV0dXJuO1xuY2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZWZmZWN0VGFnJjQmJkZkKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmVmMoYykpKSk7cmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gS2koYSxiLGMpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBMaSYmTGkoYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBkPWEubmV4dDtjZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYT1kO2Rve3ZhciBjPWEuZGVzdHJveTtpZih2b2lkIDAhPT1jKXt2YXIgZz1iO3RyeXtjKCl9Y2F0Y2goaCl7RWkoZyxoKX19YT1hLm5leHR9d2hpbGUoYSE9PWQpfSl9YnJlYWs7Y2FzZSAxOkZpKGIpO2M9Yi5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQmJkRpKGIsYyk7YnJlYWs7Y2FzZSA1OkZpKGIpO2JyZWFrO2Nhc2UgNDpNaShhLGIsYyl9fVxuZnVuY3Rpb24gTmkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7YS5yZXR1cm49bnVsbDthLmNoaWxkPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5hbHRlcm5hdGU9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO251bGwhPT1iJiZOaShiKX1mdW5jdGlvbiBPaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFBpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE9pKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihSYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8T2koYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP1FpKGEsYyxiKTpSaShhLGMsYil9XG5mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9c2QpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUWkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylRaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBSaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFJpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUmkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gTWkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihLaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrIGE7Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW0ucmV0dXJufHxtLnJldHVybj09PWspYnJlYWsgYTttPW0ucmV0dXJufW0uc2libGluZy5yZXR1cm49bS5yZXR1cm47bT1tLnNpYmxpbmd9Zz8oaD1cbmYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9oLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayk6aC5yZW1vdmVDaGlsZChrKSk6Zi5yZW1vdmVDaGlsZChkLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihLaShhLGQsYyksbnVsbCE9PWQuY2hpbGQpe2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfWlmKGQ9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWQuc2libGluZzspe2lmKG51bGw9PT1kLnJldHVybnx8ZC5yZXR1cm49PT1iKXJldHVybjtkPWQucmV0dXJuOzQ9PT1kLnRhZyYmKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOkhpKDMsYik7cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW05kXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZCYihjLGQpO3BkKGEsZSk7Yj1wZChhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/bWQoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP1FiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9SYihjLGgpOlhhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpDYihjLGQpO2JyZWFrO1xuY2FzZSBcInRleHRhcmVhXCI6S2IoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9IYihjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/SGIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOkhiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsVmMoYi5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6Yz1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/XG5kPSExOihkPSEwLGM9Yi5jaGlsZCxUaT0kZigpKTtpZihudWxsIT09YylhOmZvcihhPWM7Oyl7aWYoNT09PWEudGFnKWY9YS5zdGF0ZU5vZGUsZD8oZj1mLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooZj1hLnN0YXRlTm9kZSxlPWEubWVtb2l6ZWRQcm9wcy5zdHlsZSxlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbCxmLnN0eWxlLmRpc3BsYXk9bGQoXCJkaXNwbGF5XCIsZSkpO2Vsc2UgaWYoNj09PWEudGFnKWEuc3RhdGVOb2RlLm5vZGVWYWx1ZT1kP1wiXCI6YS5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1hLnRhZyYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtmPWEuY2hpbGQuc2libGluZztmLnJldHVybj1hO2E9XG5mO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1jKWJyZWFrO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfVVpKGIpO3JldHVybjtjYXNlIDE5OlVpKGIpO3JldHVybjtjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31mdW5jdGlvbiBVaShhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBCaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPVZpLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxudmFyIFdpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFhpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7WWl8fChZaT0hMCxaaT1kKTtDaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uICRpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe0NpKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1haj9haj1uZXcgU2V0KFt0aGlzXSk6YWouYWRkKHRoaXMpLENpKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxudmFyIGJqPU1hdGguY2VpbCxjaj1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGRqPVdhLlJlYWN0Q3VycmVudE93bmVyLFY9MCxlaj04LGZqPTE2LGdqPTMyLHRpPTAsaGo9MSxpaj0yLHVpPTMsdmk9NCxqaj01LFc9VixUPW51bGwsWD1udWxsLFU9MCxTPXRpLGtqPW51bGwsbGo9MTA3Mzc0MTgyMyxtaj0xMDczNzQxODIzLG5qPW51bGwsd2k9MCxvaj0hMSxUaT0wLHBqPTUwMCxZPW51bGwsWWk9ITEsWmk9bnVsbCxhaj1udWxsLHFqPSExLHJqPW51bGwsc2o9OTAsdGo9bnVsbCx1aj0wLHZqPW51bGwsd2o9MDtmdW5jdGlvbiBHZygpe3JldHVybihXJihmanxnaikpIT09Vj8xMDczNzQxODIxLSgkZigpLzEwfDApOjAhPT13aj93ajp3aj0xMDczNzQxODIxLSgkZigpLzEwfDApfVxuZnVuY3Rpb24gSGcoYSxiLGMpe2I9Yi5tb2RlO2lmKDA9PT0oYiYyKSlyZXR1cm4gMTA3Mzc0MTgyMzt2YXIgZD1hZygpO2lmKDA9PT0oYiY0KSlyZXR1cm4gOTk9PT1kPzEwNzM3NDE4MjM6MTA3Mzc0MTgyMjtpZigoVyZmaikhPT1WKXJldHVybiBVO2lmKG51bGwhPT1jKWE9aGcoYSxjLnRpbWVvdXRNc3wwfHw1RTMsMjUwKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9aGcoYSwxNTAsMTAwKTticmVhaztjYXNlIDk3OmNhc2UgOTY6YT1oZyhhLDVFMywyNTApO2JyZWFrO2Nhc2UgOTU6YT0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjYpKTt9bnVsbCE9PVQmJmE9PT1VJiYtLWE7cmV0dXJuIGF9XG5mdW5jdGlvbiBJZyhhLGIpe2lmKDUwPHVqKXRocm93IHVqPTAsdmo9bnVsbCxFcnJvcih1KDE4NSkpO2E9eGooYSxiKTtpZihudWxsIT09YSl7dmFyIGM9YWcoKTsxMDczNzQxODIzPT09Yj8oVyZlaikhPT1WJiYoVyYoZmp8Z2opKT09PVY/eWooYSk6KFooYSksVz09PVYmJmdnKCkpOlooYSk7KFcmNCk9PT1WfHw5OCE9PWMmJjk5IT09Y3x8KG51bGw9PT10aj90aj1uZXcgTWFwKFtbYSxiXV0pOihjPXRqLmdldChhKSwodm9pZCAwPT09Y3x8Yz5iKSYmdGouc2V0KGEsYikpKX19XG5mdW5jdGlvbiB4aihhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufW51bGwhPT1lJiYoVD09PWUmJihCZyhiKSxTPT09dmkmJnhpKGUsVSkpLHlpKGUsYikpO3JldHVybiBlfVxuZnVuY3Rpb24gemooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMCE9PWIpcmV0dXJuIGI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7aWYoIUFqKGEsYikpcmV0dXJuIGI7dmFyIGM9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO2E9Yz5hP2M6YTtyZXR1cm4gMj49YSYmYiE9PWE/MDphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWVnKHlqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj16aihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9R2coKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09VGYmJktmKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9lZyh5ai5iaW5kKG51bGwsYSkpOmRnKGQsQmouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLSRmKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBCaihhLGIpe3dqPTA7aWYoYilyZXR1cm4gYj1HZygpLENqKGEsYiksWihhKSxudWxsO3ZhciBjPXpqKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmM9PT1VfHxFaihhLGMpO2lmKG51bGwhPT1YKXt2YXIgZD1XO1d8PWZqO3ZhciBlPUZqKCk7ZG8gdHJ5e0dqKCk7YnJlYWt9Y2F0Y2goaCl7SGooYSxoKX13aGlsZSgxKTtuZygpO1c9ZDtjai5jdXJyZW50PWU7aWYoUz09PWhqKXRocm93IGI9a2osRWooYSxjKSx4aShhLGMpLFooYSksYjtpZihudWxsPT09WClzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9UyxUPW51bGwsZCl7Y2FzZSB0aTpjYXNlIGhqOnRocm93IEVycm9yKHUoMzQ1KSk7Y2FzZSBpajpDaihhLDI8Yz8yOmMpO2JyZWFrO2Nhc2UgdWk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7XG5jPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZigxMDczNzQxODIzPT09bGomJihlPVRpK3BqLSRmKCksMTA8ZSkpe2lmKG9qKXt2YXIgZj1hLmxhc3RQaW5nZWRUaW1lO2lmKDA9PT1mfHxmPj1jKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha319Zj16aihhKTtpZigwIT09ZiYmZiE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxlKTticmVha31KaihhKTticmVhaztjYXNlIHZpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKG9qJiYoZT1hLmxhc3RQaW5nZWRUaW1lLDA9PT1lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9ZT16aihhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPVxuZDticmVha30xMDczNzQxODIzIT09bWo/ZD0xMCooMTA3Mzc0MTgyMS1taiktJGYoKToxMDczNzQxODIzPT09bGo/ZD0wOihkPTEwKigxMDczNzQxODIxLWxqKS01RTMsZT0kZigpLGM9MTAqKDEwNzM3NDE4MjEtYyktZSxkPWUtZCwwPmQmJihkPTApLGQ9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqYmooZC8xOTYwKSktZCxjPGQmJihkPWMpKTtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugamo6aWYoMTA3Mzc0MTgyMyE9PWxqJiZudWxsIT09bmope2Y9bGo7dmFyIGc9bmo7ZD1nLmJ1c3lNaW5EdXJhdGlvbk1zfDA7MD49ZD9kPTA6KGU9Zy5idXN5RGVsYXlNc3wwLGY9JGYoKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXt4aShhLGMpO2EudGltZW91dEhhbmRsZT1cbkhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha319SmooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyOSkpO31aKGEpO2lmKGEuY2FsbGJhY2tOb2RlPT09YilyZXR1cm4gQmouYmluZChudWxsLGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHlqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2I9MCE9PWI/YjoxMDczNzQxODIzO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmI9PT1VfHxFaihhLGIpO2lmKG51bGwhPT1YKXt2YXIgYz1XO1d8PWZqO3ZhciBkPUZqKCk7ZG8gdHJ5e0tqKCk7YnJlYWt9Y2F0Y2goZSl7SGooYSxlKX13aGlsZSgxKTtuZygpO1c9Yztjai5jdXJyZW50PWQ7aWYoUz09PWhqKXRocm93IGM9a2osRWooYSxiKSx4aShhLGIpLFooYSksYztpZihudWxsIT09WCl0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VD1udWxsO0pqKGEpO1ooYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGooKXtpZihudWxsIT09dGope3ZhciBhPXRqO3RqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7Q2ooYyxhKTtaKGMpfSk7Z2coKX19XG5mdW5jdGlvbiBNaihhLGIpe3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fWZ1bmN0aW9uIE5qKGEsYil7dmFyIGM9VztXJj0tMjtXfD1lajt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fVxuZnVuY3Rpb24gRWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsSWQoYykpO2lmKG51bGwhPT1YKWZvcihjPVgucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmRGYoKTticmVhaztjYXNlIDM6ZWgoKTtIKEspO0goSik7YnJlYWs7Y2FzZSA1OmdoKGQpO2JyZWFrO2Nhc2UgNDplaCgpO2JyZWFrO2Nhc2UgMTM6SChNKTticmVhaztjYXNlIDE5OkgoTSk7YnJlYWs7Y2FzZSAxMDpvZyhkKX1jPWMucmV0dXJufVQ9YTtYPVNnKGEuY3VycmVudCxudWxsKTtVPWI7Uz10aTtraj1udWxsO21qPWxqPTEwNzM3NDE4MjM7bmo9bnVsbDt3aT0wO29qPSExfVxuZnVuY3Rpb24gSGooYSxiKXtkb3t0cnl7bmcoKTtqaC5jdXJyZW50PXNoO2lmKG1oKWZvcih2YXIgYz1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWM7KXt2YXIgZD1jLnF1ZXVlO251bGwhPT1kJiYoZC5wZW5kaW5nPW51bGwpO2M9Yy5uZXh0fWxoPTA7UD1PPU49bnVsbDttaD0hMTtpZihudWxsPT09WHx8bnVsbD09PVgucmV0dXJuKXJldHVybiBTPWhqLGtqPWIsWD1udWxsO2E6e3ZhciBlPWEsZj1YLnJldHVybixnPVgsaD1iO2I9VTtnLmVmZmVjdFRhZ3w9MjA0ODtnLmZpcnN0RWZmZWN0PWcubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1oJiZcIm9iamVjdFwiPT09dHlwZW9mIGgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLnRoZW4pe3ZhciBrPWg7aWYoMD09PShnLm1vZGUmMikpe3ZhciBsPWcuYWx0ZXJuYXRlO2w/KGcudXBkYXRlUXVldWU9bC51cGRhdGVRdWV1ZSxnLm1lbW9pemVkU3RhdGU9bC5tZW1vaXplZFN0YXRlLGcuZXhwaXJhdGlvblRpbWU9bC5leHBpcmF0aW9uVGltZSk6KGcudXBkYXRlUXVldWU9XG5udWxsLGcubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgbT0wIT09KE0uY3VycmVudCYxKSxwPWY7ZG97dmFyIHg7aWYoeD0xMz09PXAudGFnKXt2YXIgej1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXopeD1udWxsIT09ei5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIGNhPXAubWVtb2l6ZWRQcm9wczt4PXZvaWQgMD09PWNhLmZhbGxiYWNrPyExOiEwIT09Y2EudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6bT8hMTohMH19aWYoeCl7dmFyIEQ9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09RCl7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtwLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBELmFkZChrKTtpZigwPT09KHAubW9kZSYyKSl7cC5lZmZlY3RUYWd8PTY0O2cuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09Zy50YWcpaWYobnVsbD09PWcuYWx0ZXJuYXRlKWcudGFnPTE3O2Vsc2V7dmFyIHk9d2coMTA3Mzc0MTgyMyxudWxsKTt5LnRhZz0yO3hnKGcseSl9Zy5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO1xuYnJlYWsgYX1oPXZvaWQgMDtnPWI7dmFyIEE9ZS5waW5nQ2FjaGU7bnVsbD09PUE/KEE9ZS5waW5nQ2FjaGU9bmV3IFdpLGg9bmV3IFNldCxBLnNldChrLGgpKTooaD1BLmdldChrKSx2b2lkIDA9PT1oJiYoaD1uZXcgU2V0LEEuc2V0KGssaCkpKTtpZighaC5oYXMoZykpe2guYWRkKGcpO3ZhciBxPU9qLmJpbmQobnVsbCxlLGssZyk7ay50aGVuKHEscSl9cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7aD1FcnJvcigocGIoZy50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK3FiKGcpKX1TIT09XG5qaiYmKFM9aWopO2g9QWkoaCxnKTtwPWY7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6az1oO3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgQj1YaShwLGssYik7eWcocCxCKTticmVhayBhO2Nhc2UgMTprPWg7dmFyIHc9cC50eXBlLHViPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dWImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1Yi5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyh1YikpKSl7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciB2Yj0kaShwLGssYik7eWcocCx2Yik7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WD1QaihYKX1jYXRjaChYYyl7Yj1YYztjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIEZqKCl7dmFyIGE9Y2ouY3VycmVudDtjai5jdXJyZW50PXNoO3JldHVybiBudWxsPT09YT9zaDphfWZ1bmN0aW9uIEFnKGEsYil7YTxsaiYmMjxhJiYobGo9YSk7bnVsbCE9PWImJmE8bWomJjI8YSYmKG1qPWEsbmo9Yil9ZnVuY3Rpb24gQmcoYSl7YT53aSYmKHdpPWEpfWZ1bmN0aW9uIEtqKCl7Zm9yKDtudWxsIT09WDspWD1RaihYKX1mdW5jdGlvbiBHaigpe2Zvcig7bnVsbCE9PVgmJiFVZigpOylYPVFqKFgpfWZ1bmN0aW9uIFFqKGEpe3ZhciBiPVJqKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1QaihhKSk7ZGouY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gUGooYSl7WD1hO2Rve3ZhciBiPVguYWx0ZXJuYXRlO2E9WC5yZXR1cm47aWYoMD09PShYLmVmZmVjdFRhZyYyMDQ4KSl7Yj1zaShiLFgsVSk7aWYoMT09PVV8fDEhPT1YLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Zvcih2YXIgYz0wLGQ9WC5jaGlsZDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWUsZj1kLmNoaWxkRXhwaXJhdGlvblRpbWU7ZT5jJiYoYz1lKTtmPmMmJihjPWYpO2Q9ZC5zaWJsaW5nfVguY2hpbGRFeHBpcmF0aW9uVGltZT1jfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVguZmlyc3RFZmZlY3QpLG51bGwhPT1YLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WC5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PVgubGFzdEVmZmVjdCksMTxYLmVmZmVjdFRhZyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YOmEuZmlyc3RFZmZlY3Q9WCxhLmxhc3RFZmZlY3Q9WCkpfWVsc2V7Yj16aShYKTtpZihudWxsIT09YilyZXR1cm4gYi5lZmZlY3RUYWcmPTIwNDcsYjtudWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5lZmZlY3RUYWd8PTIwNDgpfWI9WC5zaWJsaW5nO2lmKG51bGwhPT1iKXJldHVybiBiO1g9YX13aGlsZShudWxsIT09WCk7Uz09PXRpJiYoUz1qaik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gSWooYSl7dmFyIGI9YS5leHBpcmF0aW9uVGltZTthPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtyZXR1cm4gYj5hP2I6YX1mdW5jdGlvbiBKaihhKXt2YXIgYj1hZygpO2NnKDk5LFNqLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG8gRGooKTt3aGlsZShudWxsIT09cmopO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrLGQ9YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih1KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTA7YS5jYWxsYmFja1ByaW9yaXR5PTkwO2EubmV4dEtub3duUGVuZGluZ0xldmVsPTA7dmFyIGU9SWooYyk7YS5maXJzdFBlbmRpbmdUaW1lPWU7ZDw9YS5sYXN0U3VzcGVuZGVkVGltZT9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6ZDw9YS5maXJzdFN1c3BlbmRlZFRpbWUmJihhLmZpcnN0U3VzcGVuZGVkVGltZT1cbmQtMSk7ZDw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7ZDw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKTthPT09VCYmKFg9VD1udWxsLFU9MCk7MTxjLmVmZmVjdFRhZz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGU9Yy5maXJzdEVmZmVjdCk6ZT1jOmU9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZSl7dmFyIGY9VztXfD1najtkai5jdXJyZW50PW51bGw7RGQ9ZmQ7dmFyIGc9eGQoKTtpZih5ZChnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyl2YXIgaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7aD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGs9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCk7aWYoayYmMCE9PWsucmFuZ2VDb3VudCl7aD1rLmFuY2hvck5vZGU7dmFyIGw9ay5hbmNob3JPZmZzZXQsXG5tPWsuZm9jdXNOb2RlO2s9ay5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxtLm5vZGVUeXBlfWNhdGNoKHdiKXtoPW51bGw7YnJlYWsgYX12YXIgcD0wLHg9LTEsej0tMSxjYT0wLEQ9MCx0PWcseT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIEE7Oyl7dCE9PWh8fDAhPT1sJiYzIT09dC5ub2RlVHlwZXx8KHg9cCtsKTt0IT09bXx8MCE9PWsmJjMhPT10Lm5vZGVUeXBlfHwoej1wK2spOzM9PT10Lm5vZGVUeXBlJiYocCs9dC5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KEE9dC5maXJzdENoaWxkKSlicmVhazt5PXQ7dD1BfWZvcig7Oyl7aWYodD09PWcpYnJlYWsgYjt5PT09aCYmKytjYT09PWwmJih4PXApO3k9PT1tJiYrK0Q9PT1rJiYoej1wKTtpZihudWxsIT09KEE9dC5uZXh0U2libGluZykpYnJlYWs7dD15O3k9dC5wYXJlbnROb2RlfXQ9QX1oPS0xPT09eHx8LTE9PT16P251bGw6e3N0YXJ0OngsZW5kOnp9fWVsc2UgaD1udWxsfWg9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1cbm51bGw7RWQ9e2FjdGl2ZUVsZW1lbnREZXRhY2hlZDpudWxsLGZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7WT1lO2RvIHRyeXtUaigpfWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPWU7ZG8gdHJ5e2ZvcihnPWEsaD1iO251bGwhPT1ZOyl7dmFyIHE9WS5lZmZlY3RUYWc7cSYxNiYmUmIoWS5zdGF0ZU5vZGUsXCJcIik7aWYocSYxMjgpe3ZhciBCPVkuYWx0ZXJuYXRlO2lmKG51bGwhPT1CKXt2YXIgdz1CLnJlZjtudWxsIT09dyYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3P3cobnVsbCk6dy5jdXJyZW50PW51bGwpfX1zd2l0Y2gocSYxMDM4KXtjYXNlIDI6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSAxMDI0OlkuZWZmZWN0VGFnJj0tMTAyNTticmVhaztjYXNlIDEwMjg6WS5lZmZlY3RUYWcmPVxuLTEwMjU7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA0OlNpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgODpsPVksTWkoZyxsLGgpLE5pKGwpfVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7dz1FZDtCPXhkKCk7cT13LmZvY3VzZWRFbGVtO2g9dy5zZWxlY3Rpb25SYW5nZTtpZihCIT09cSYmcSYmcS5vd25lckRvY3VtZW50JiZ3ZChxLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHEpKXtudWxsIT09aCYmeWQocSkmJihCPWguc3RhcnQsdz1oLmVuZCx2b2lkIDA9PT13JiYodz1CKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBxPyhxLnNlbGVjdGlvblN0YXJ0PUIscS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odyxxLnZhbHVlLmxlbmd0aCkpOih3PShCPXEub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZCLmRlZmF1bHRWaWV3fHx3aW5kb3csdy5nZXRTZWxlY3Rpb24mJlxuKHc9dy5nZXRTZWxlY3Rpb24oKSxsPXEudGV4dENvbnRlbnQubGVuZ3RoLGc9TWF0aC5taW4oaC5zdGFydCxsKSxoPXZvaWQgMD09PWguZW5kP2c6TWF0aC5taW4oaC5lbmQsbCksIXcuZXh0ZW5kJiZnPmgmJihsPWgsaD1nLGc9bCksbD12ZChxLGcpLG09dmQocSxoKSxsJiZtJiYoMSE9PXcucmFuZ2VDb3VudHx8dy5hbmNob3JOb2RlIT09bC5ub2RlfHx3LmFuY2hvck9mZnNldCE9PWwub2Zmc2V0fHx3LmZvY3VzTm9kZSE9PW0ubm9kZXx8dy5mb2N1c09mZnNldCE9PW0ub2Zmc2V0KSYmKEI9Qi5jcmVhdGVSYW5nZSgpLEIuc2V0U3RhcnQobC5ub2RlLGwub2Zmc2V0KSx3LnJlbW92ZUFsbFJhbmdlcygpLGc+aD8ody5hZGRSYW5nZShCKSx3LmV4dGVuZChtLm5vZGUsbS5vZmZzZXQpKTooQi5zZXRFbmQobS5ub2RlLG0ub2Zmc2V0KSx3LmFkZFJhbmdlKEIpKSkpKSk7Qj1bXTtmb3Iodz1xO3c9dy5wYXJlbnROb2RlOykxPT09dy5ub2RlVHlwZSYmQi5wdXNoKHtlbGVtZW50OncsbGVmdDp3LnNjcm9sbExlZnQsXG50b3A6dy5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgcS5mb2N1cyYmcS5mb2N1cygpO2ZvcihxPTA7cTxCLmxlbmd0aDtxKyspdz1CW3FdLHcuZWxlbWVudC5zY3JvbGxMZWZ0PXcubGVmdCx3LmVsZW1lbnQuc2Nyb2xsVG9wPXcudG9wfWZkPSEhRGQ7RWQ9RGQ9bnVsbDthLmN1cnJlbnQ9YztZPWU7ZG8gdHJ5e2ZvcihxPWE7bnVsbCE9PVk7KXt2YXIgdWI9WS5lZmZlY3RUYWc7dWImMzYmJkppKHEsWS5hbHRlcm5hdGUsWSk7aWYodWImMTI4KXtCPXZvaWQgMDt2YXIgdmI9WS5yZWY7aWYobnVsbCE9PXZiKXt2YXIgWGM9WS5zdGF0ZU5vZGU7c3dpdGNoKFkudGFnKXtjYXNlIDU6Qj1YYzticmVhaztkZWZhdWx0OkI9WGN9XCJmdW5jdGlvblwiPT09dHlwZW9mIHZiP3ZiKEIpOnZiLmN1cnJlbnQ9Qn19WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPVxubnVsbDtWZigpO1c9Zn1lbHNlIGEuY3VycmVudD1jO2lmKHFqKXFqPSExLHJqPWEsc2o9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmKGFqPW51bGwpOzEwNzM3NDE4MjM9PT1iP2E9PT12aj91aisrOih1aj0wLHZqPWEpOnVqPTA7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVqJiZVaihjLnN0YXRlTm9kZSxkKTtaKGEpO2lmKFlpKXRocm93IFlpPSExLGE9WmksWmk9bnVsbCxhO2lmKChXJmVqKSE9PVYpcmV0dXJuIG51bGw7Z2coKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBUaigpe2Zvcig7bnVsbCE9PVk7KXt2YXIgYT1ZLmVmZmVjdFRhZzswIT09KGEmMjU2KSYmR2koWS5hbHRlcm5hdGUsWSk7MD09PShhJjUxMil8fHFqfHwocWo9ITAsZGcoOTcsZnVuY3Rpb24oKXtEaigpO3JldHVybiBudWxsfSkpO1k9WS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIERqKCl7aWYoOTAhPT1zail7dmFyIGE9OTc8c2o/OTc6c2o7c2o9OTA7cmV0dXJuIGNnKGEsVmopfX1mdW5jdGlvbiBWaigpe2lmKG51bGw9PT1yailyZXR1cm4hMTt2YXIgYT1yajtyaj1udWxsO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMzMSkpO3ZhciBiPVc7V3w9Z2o7Zm9yKGE9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1hOyl7dHJ5e3ZhciBjPWE7aWYoMCE9PShjLmVmZmVjdFRhZyY1MTIpKXN3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOkhpKDUsYyksSWkoNSxjKX19Y2F0Y2goZCl7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMzApKTtFaShhLGQpfWM9YS5uZXh0RWZmZWN0O2EubmV4dEVmZmVjdD1udWxsO2E9Y31XPWI7Z2coKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFdqKGEsYixjKXtiPUFpKGMsYik7Yj1YaShhLGIsMTA3Mzc0MTgyMyk7eGcoYSxiKTthPXhqKGEsMTA3Mzc0MTgyMyk7bnVsbCE9PWEmJlooYSl9ZnVuY3Rpb24gRWkoYSxiKXtpZigzPT09YS50YWcpV2ooYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtXaihjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyhkKSkpe2E9QWkoYixhKTthPSRpKGMsYSwxMDczNzQxODIzKTt4ZyhjLGEpO2M9eGooYywxMDczNzQxODIzKTtudWxsIT09YyYmWihjKTticmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBPaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO1Q9PT1hJiZVPT09Yz9TPT09dml8fFM9PT11aSYmMTA3Mzc0MTgyMz09PWxqJiYkZigpLVRpPHBqP0VqKGEsVSk6b2o9ITA6QWooYSxjKSYmKGI9YS5sYXN0UGluZ2VkVGltZSwwIT09YiYmYjxjfHwoYS5sYXN0UGluZ2VkVGltZT1jLFooYSkpKX1mdW5jdGlvbiBWaShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPUdnKCksYj1IZyhiLGEsbnVsbCkpO2E9eGooYSxiKTtudWxsIT09YSYmWihhKX12YXIgUmo7XG5Saj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSl7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7aWYoYS5tZW1vaXplZFByb3BzIT09ZXx8Sy5jdXJyZW50KXJnPSEwO2Vsc2V7aWYoZDxjKXtyZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpoaShiKTtYaCgpO2JyZWFrO2Nhc2UgNTpmaChiKTtpZihiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLG51bGw7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmR2YoYik7YnJlYWs7Y2FzZSA0OmRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtlPWIudHlwZS5fY29udGV4dDtJKGpnLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtcbmlmKDAhPT1kJiZkPj1jKXJldHVybiBqaShhLGIsYyk7SShNLE0uY3VycmVudCYxKTtiPSRoKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9SShNLE0uY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBtaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCk7aWYoIWQpcmV0dXJuIG51bGx9cmV0dXJuICRoKGEsYixjKX1yZz0hMX19ZWxzZSByZz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1DZihiLEouY3VycmVudCk7cWcoYixjKTtlPW9oKG51bGwsXG5iLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoTChkKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dWcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkZnKGIsZCxnLGEpO2UudXBkYXRlcj1KZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO05nKGIsZCxhLGMpO2I9Z2kobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjphOntlPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1cbm51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztvYihlKTtpZigxIT09ZS5fc3RhdHVzKXRocm93IGUuX3Jlc3VsdDtlPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPVhqKGUpO2E9aWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9ZGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPWZpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9WmgobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1haShudWxsLGIsZSxpZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZmkoYSxiLGQsZSxjKTtcbmNhc2UgMzpoaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3ZnKGEsYik7emcoYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlYaCgpLGI9JGgoYSxiLGMpO2Vsc2V7aWYoZT1iLnN0YXRlTm9kZS5oeWRyYXRlKVBoPUpkKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksT2g9YixlPVFoPSEwO2lmKGUpZm9yKGM9WWcoYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZWZmZWN0VGFnPWMuZWZmZWN0VGFnJi0zfDEwMjQsYz1jLnNpYmxpbmc7ZWxzZSBSKGEsYixkLGMpLFhoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZmgoYiksbnVsbD09PWEmJlVoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6XG5udWxsLGc9ZS5jaGlsZHJlbixHZChkLGUpP2c9bnVsbDpudWxsIT09ZiYmR2QoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksZWkoYSxiKSxiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLGI9bnVsbCk6KFIoYSxiLGcsYyksYj1iLmNoaWxkKSxiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJlVoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gamkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WGcoYixudWxsLGQsYyk6UihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksWmgoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBSKGEsXG5iLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKGpnLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9JGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj0kaChhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09XG5rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPWsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD13ZyhjLG51bGwpLGwudGFnPTIseGcoaCxsKSk7aC5leHBpcmF0aW9uVGltZTxjJiYoaC5leHBpcmF0aW9uVGltZT1jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3BnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9XG5nfVIoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4scWcoYixjKSxlPXNnKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1pZyhlLGIucGVuZGluZ1Byb3BzKSxmPWlnKGUudHlwZSxmKSxhaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gY2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTChkKT8oYT0hMCxHZihiKSk6YT0hMSxxZyhiLGMpLExnKGIsZCxlKSxOZyhiLGQsZSxjKSxnaShudWxsLFxuYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fTt2YXIgVWo9bnVsbCxMaT1udWxsO2Z1bmN0aW9uIFlqKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1VqPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O0xpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWmooYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBTaChhLGIsYyxkKXtyZXR1cm4gbmV3IFpqKGEsYixjLGQpfVxuZnVuY3Rpb24gYmkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBYaihhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdiKXJldHVybiAxMTtpZihhPT09amIpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gU2coYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1TaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFVnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSliaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm4gV2coYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYjpnPTg7ZXw9NzticmVhaztjYXNlIGJiOmc9ODtlfD0xO2JyZWFrO2Nhc2UgY2I6cmV0dXJuIGE9U2goMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1jYixhLnR5cGU9Y2IsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYjpyZXR1cm4gYT1TaCgxMyxjLGIsZSksYS50eXBlPWhiLGEuZWxlbWVudFR5cGU9aGIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBpYjpyZXR1cm4gYT1TaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1pYixhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGI6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBlYjpnPTk7YnJlYWsgYTtjYXNlIGdiOmc9MTE7YnJlYWsgYTtjYXNlIGpiOmc9MTQ7YnJlYWsgYTtjYXNlIGtiOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBsYjpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1TaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFdnKGEsYixjLGQpe2E9U2goNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIFRnKGEsYixjKXthPVNoKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFZnKGEsYixjKXtiPVNoKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIEFqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiB4aShhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24geWkoYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBDaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIGJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUdnKCksZz1EZy5zdXNwZW5zZTtmPUhnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGRjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9RmYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9QWY7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj13ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO3hnKGUsYik7SWcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBjayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiBlayhhLGIpe2RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZkayhhLGIpfVxuZnVuY3Rpb24gZmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IGFrKGEsYixjKSxlPVNoKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO3VnKGUpO2FbT2RdPWQuY3VycmVudDtjJiYwIT09YiYmSmMoYSw5PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudCk7dGhpcy5faW50ZXJuYWxSb290PWR9ZmsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtiayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtmay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztiayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbT2RdPW51bGx9KX07XG5mdW5jdGlvbiBnayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gaGsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBmayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIGlrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7aC5jYWxsKGEpfX1iayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWhrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2suY2FsbChhKX19TmooZnVuY3Rpb24oKXtiayhiLGcsYSxlKX0pfXJldHVybiBjayhnKX1mdW5jdGlvbiBqayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxud2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9aGcoR2coKSwxNTAsMTAwKTtJZyhhLGIpO2VrKGEsYil9fTt4Yz1mdW5jdGlvbihhKXsxMz09PWEudGFnJiYoSWcoYSwzKSxlayhhLDMpKX07eWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9R2coKTtiPUhnKGIsYSxudWxsKTtJZyhhLGIpO2VrKGEsYil9fTtcbnphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Q2IoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPVFkKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt5YihkKTtDYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6S2IoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkhiKGEsISFjLm11bHRpcGxlLGIsITEpfX07RmE9TWo7XG5HYT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVc7V3w9NDt0cnl7cmV0dXJuIGNnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1c9ZixXPT09ViYmZ2coKX19O0hhPWZ1bmN0aW9uKCl7KFcmKDF8Zmp8Z2opKT09PVYmJihMaigpLERqKCkpfTtJYT1mdW5jdGlvbihhLGIpe3ZhciBjPVc7V3w9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fTtmdW5jdGlvbiBrayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBqayhhLGIsbnVsbCxjKX12YXIgbGs9e0V2ZW50czpbTmMsUGQsUWQseGEsdGEsWGQsZnVuY3Rpb24oYSl7amMoYSxXZCl9LERhLEVhLGlkLG1jLERqLHtjdXJyZW50OiExfV19O1xuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFlqKG4oe30sYSx7b3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGMoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH0sZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp0YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjE0LjBcIixcbnJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9bGs7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9a2s7ZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IodSgxODgpKTt0aHJvdyBFcnJvcih1KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWhjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07XG5leHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGNnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1c9YyxnZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITAsYyl9O2V4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITEsYyl9O1xuZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFnayhhKSl0aHJvdyBFcnJvcih1KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oTmooZnVuY3Rpb24oKXtpayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbT2RdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1NajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiBrayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIWdrKGMpKXRocm93IEVycm9yKHUoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gaWsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjE0LjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBoYXNoKHN0cikge1xuICB2YXIgaGFzaCA9IDUzODEsXG4gICAgICBpICAgID0gc3RyLmxlbmd0aDtcblxuICB3aGlsZShpKSB7XG4gICAgaGFzaCA9IChoYXNoICogMzMpIF4gc3RyLmNoYXJDb2RlQXQoLS1pKTtcbiAgfVxuXG4gIC8qIEphdmFTY3JpcHQgZG9lcyBiaXR3aXNlIG9wZXJhdGlvbnMgKGxpa2UgWE9SLCBhYm92ZSkgb24gMzItYml0IHNpZ25lZFxuICAgKiBpbnRlZ2Vycy4gU2luY2Ugd2Ugd2FudCB0aGUgcmVzdWx0cyB0byBiZSBhbHdheXMgcG9zaXRpdmUsIGNvbnZlcnQgdGhlXG4gICAqIHNpZ25lZCBpbnQgdG8gYW4gdW5zaWduZWQgYnkgZG9pbmcgYW4gdW5zaWduZWQgYml0c2hpZnQuICovXG4gIHJldHVybiBoYXNoID4+PiAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2g7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMjRiYWI1ZDYzM2UzNmNhOGQxN2VkYzYzMTY0Y2Y5MzQuanBnXCI7IiwiaW1wb3J0IHN0cmluZ0hhc2ggZnJvbSAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0IGFzYXAgZnJvbSAnYXNhcCc7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuXG4gICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbi8qIEBmbG93ICovXG4vKiA6OlxudHlwZSBPYmplY3RNYXAgPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbiovXG5cbnZhciBVUFBFUkNBU0VfUkUgPSAvKFtBLVpdKS9nO1xuXG52YXIgVVBQRVJDQVNFX1JFX1RPX0tFQkFCID0gZnVuY3Rpb24gVVBQRVJDQVNFX1JFX1RPX0tFQkFCKG1hdGNoXG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIi1cIi5jb25jYXQobWF0Y2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcbn07XG5cbnZhciBrZWJhYmlmeVN0eWxlTmFtZSA9IGZ1bmN0aW9uIGtlYmFiaWZ5U3R5bGVOYW1lKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciByZXN1bHQgPSBzdHJpbmcucmVwbGFjZShVUFBFUkNBU0VfUkUsIFVQUEVSQ0FTRV9SRV9UT19LRUJBQik7XG5cbiAgaWYgKHJlc3VsdFswXSA9PT0gJ20nICYmIHJlc3VsdFsxXSA9PT0gJ3MnICYmIHJlc3VsdFsyXSA9PT0gJy0nKSB7XG4gICAgcmV0dXJuIFwiLVwiLmNvbmNhdChyZXN1bHQpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4vKipcbiAqIENTUyBwcm9wZXJ0aWVzIHdoaWNoIGFjY2VwdCBudW1iZXJzIGJ1dCBhcmUgbm90IGluIHVuaXRzIG9mIFwicHhcIi5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IHRydWUsXG4gIGJvcmRlckltYWdlU2xpY2U6IHRydWUsXG4gIGJvcmRlckltYWdlV2lkdGg6IHRydWUsXG4gIGJveEZsZXg6IHRydWUsXG4gIGJveEZsZXhHcm91cDogdHJ1ZSxcbiAgYm94T3JkaW5hbEdyb3VwOiB0cnVlLFxuICBjb2x1bW5Db3VudDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhQb3NpdGl2ZTogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleE5lZ2F0aXZlOiB0cnVlLFxuICBmbGV4T3JkZXI6IHRydWUsXG4gIGdyaWRSb3c6IHRydWUsXG4gIGdyaWRDb2x1bW46IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiB0cnVlLFxuICBmbG9vZE9wYWNpdHk6IHRydWUsXG4gIHN0b3BPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VEYXNoYXJyYXk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU1pdGVybGltaXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuLyoqXG4gKiBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4IHZlbmRvci1zcGVjaWZpYyBwcmVmaXgsIGVnOiBXZWJraXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgc3R5bGUgbmFtZSwgZWc6IHRyYW5zaXRpb25EdXJhdGlvblxuICogQHJldHVybiB7c3RyaW5nfSBzdHlsZSBuYW1lIHByZWZpeGVkIHdpdGggYHByZWZpeGAsIHByb3Blcmx5IGNhbWVsQ2FzZWQsIGVnOlxuICogV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcHJlZml4S2V5KHByZWZpeCwga2V5KSB7XG4gIHJldHVybiBwcmVmaXggKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyaW5nKDEpO1xufVxuLyoqXG4gKiBTdXBwb3J0IHN0eWxlIG5hbWVzIHRoYXQgbWF5IGNvbWUgcGFzc2VkIGluIHByZWZpeGVkIGJ5IGFkZGluZyBwZXJtdXRhdGlvbnNcbiAqIG9mIHZlbmRvciBwcmVmaXhlcy5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cblxudmFyIHByZWZpeGVzID0gWydXZWJraXQnLCAnbXMnLCAnTW96JywgJ08nXTsgLy8gVXNpbmcgT2JqZWN0LmtleXMgaGVyZSwgb3IgZWxzZSB0aGUgdmFuaWxsYSBmb3ItaW4gbG9vcCBtYWtlcyBJRTggZ28gaW50byBhblxuLy8gaW5maW5pdGUgbG9vcCwgYmVjYXVzZSBpdCBpdGVyYXRlcyBvdmVyIHRoZSBuZXdseSBhZGRlZCBwcm9wcyB0b28uXG4vLyBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcblxuT2JqZWN0LmtleXMoaXNVbml0bGVzc051bWJlcikuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICBwcmVmaXhlcy5mb3JFYWNoKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBpc1VuaXRsZXNzTnVtYmVyW3ByZWZpeEtleShwcmVmaXgsIHByb3ApXSA9IGlzVW5pdGxlc3NOdW1iZXJbcHJvcF07XG4gIH0pO1xufSk7XG52YXIgc3RyaW5naWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICBpZiAodHlwZW9mIHByb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICBpZiAoaXNVbml0bGVzc051bWJlcltrZXldKSB7XG4gICAgICByZXR1cm4gXCJcIiArIHByb3A7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcm9wICsgXCJweFwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gJycgKyBwcm9wO1xuICB9XG59O1xudmFyIHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlID0gZnVuY3Rpb24gc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCBwcm9wXG4vKiA6IGFueSAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBpbXBvcnRhbnRpZnkoc3RyaW5naWZ5VmFsdWUoa2V5LCBwcm9wKSlcbiAgKTtcbn07IC8vIFR1cm4gYSBzdHJpbmcgaW50byBhIGhhc2ggc3RyaW5nIG9mIGJhc2UtMzYgdmFsdWVzICh1c2luZyBsZXR0ZXJzIGFuZCBudW1iZXJzKVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5cbnZhciBoYXNoU3RyaW5nID0gZnVuY3Rpb24gaGFzaFN0cmluZyhzdHJpbmdcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiA/c3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiBzdHJpbmcgKi9cbiAgICBzdHJpbmdIYXNoKHN0cmluZykudG9TdHJpbmcoMzYpXG4gICk7XG59OyAvLyBIYXNoIGEgamF2YXNjcmlwdCBvYmplY3QgdXNpbmcgSlNPTi5zdHJpbmdpZnkuIFRoaXMgaXMgdmVyeSBmYXN0LCBhYm91dCAzXG4vLyBtaWNyb3NlY29uZHMgb24gbXkgY29tcHV0ZXIgZm9yIGEgc2FtcGxlIG9iamVjdDpcbi8vIGh0dHA6Ly9qc3BlcmYuY29tL3Rlc3QtaGFzaGZudjMyYS1oYXNoLzVcbi8vXG4vLyBOb3RlIHRoYXQgdGhpcyB1c2VzIEpTT04uc3RyaW5naWZ5IHRvIHN0cmluZ2lmeSB0aGUgb2JqZWN0cyBzbyBpbiBvcmRlciBmb3Jcbi8vIHRoaXMgdG8gcHJvZHVjZSBjb25zaXN0ZW50IGhhc2hlcyBicm93c2VycyBuZWVkIHRvIGhhdmUgYSBjb25zaXN0ZW50XG4vLyBvcmRlcmluZyBvZiBvYmplY3RzLiBCZW4gQWxwZXJ0IHNheXMgdGhhdCBGYWNlYm9vayBkZXBlbmRzIG9uIHRoaXMsIHNvIHdlXG4vLyBjYW4gcHJvYmFibHkgZGVwZW5kIG9uIHRoaXMgdG9vLlxuXG52YXIgaGFzaE9iamVjdCA9IGZ1bmN0aW9uIGhhc2hPYmplY3Qob2JqZWN0XG4vKiA6IE9iamVjdE1hcCAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBoYXNoU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpXG4gICk7XG59OyAvLyBHaXZlbiBhIHNpbmdsZSBzdHlsZSB2YWx1ZSBzdHJpbmcgbGlrZSB0aGUgXCJiXCIgZnJvbSBcImE6IGI7XCIsIGFkZHMgIWltcG9ydGFudFxuLy8gdG8gZ2VuZXJhdGUgXCJiICFpbXBvcnRhbnRcIi5cblxudmFyIGltcG9ydGFudGlmeSA9IGZ1bmN0aW9uIGltcG9ydGFudGlmeShzdHJpbmdcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIC8vIEJyYWNrZXQgc3RyaW5nIGNoYXJhY3RlciBhY2Nlc3MgaXMgdmVyeSBmYXN0LCBhbmQgaW4gdGhlIGRlZmF1bHQgY2FzZSB3ZVxuICAgIC8vIG5vcm1hbGx5IGRvbid0IGV4cGVjdCB0aGVyZSB0byBiZSBcIiFpbXBvcnRhbnRcIiBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmdcbiAgICAvLyBzbyB3ZSBjYW4gdXNlIHRoaXMgc2ltcGxlIGNoZWNrIHRvIHRha2UgYW4gb3B0aW1pemVkIHBhdGguIElmIHRoZXJlXG4gICAgLy8gaGFwcGVucyB0byBiZSBhIFwiIVwiIGluIHRoaXMgcG9zaXRpb24sIHdlIGZvbGxvdyB1cCB3aXRoIGEgbW9yZSB0aG9yb3VnaFxuICAgIC8vIGNoZWNrLlxuICAgIHN0cmluZ1tzdHJpbmcubGVuZ3RoIC0gMTBdID09PSAnIScgJiYgc3RyaW5nLnNsaWNlKC0xMSkgPT09ICcgIWltcG9ydGFudCcgPyBzdHJpbmcgOiBcIlwiLmNvbmNhdChzdHJpbmcsIFwiICFpbXBvcnRhbnRcIilcbiAgKTtcbn07XG5cbi8qIEBmbG93ICovXG52YXIgTUFQX0VYSVNUUyA9IHR5cGVvZiBNYXAgIT09ICd1bmRlZmluZWQnO1xuXG52YXIgT3JkZXJlZEVsZW1lbnRzID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgLyogOjpcbiAgZWxlbWVudHM6IHtbc3RyaW5nXTogYW55fTtcbiAga2V5T3JkZXI6IHN0cmluZ1tdO1xuICAqL1xuICBmdW5jdGlvbiBPcmRlcmVkRWxlbWVudHMoKSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IHt9O1xuICAgIHRoaXMua2V5T3JkZXIgPSBbXTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBPcmRlcmVkRWxlbWVudHMucHJvdG90eXBlO1xuXG4gIF9wcm90by5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja1xuICAvKiA6IChzdHJpbmcsIGFueSkgPT4gdm9pZCAqL1xuICApIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMua2V5T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgIC8vICh2YWx1ZSwga2V5KSB0byBtYXRjaCBNYXAncyBBUElcbiAgICAgIGNhbGxiYWNrKHRoaXMuZWxlbWVudHNbdGhpcy5rZXlPcmRlcltpXV0sIHRoaXMua2V5T3JkZXJbaV0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc2V0ID0gZnVuY3Rpb24gc2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICAsIHZhbHVlXG4gIC8qIDogYW55ICovXG4gICwgc2hvdWxkUmVvcmRlclxuICAvKiA6ID9ib29sZWFuICovXG4gICkge1xuICAgIGlmICghdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9IGVsc2UgaWYgKHNob3VsZFJlb3JkZXIpIHtcbiAgICAgIHZhciBpbmRleCA9IHRoaXMua2V5T3JkZXIuaW5kZXhPZihrZXkpO1xuICAgICAgdGhpcy5rZXlPcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5rZXlPcmRlci5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHZhbHVlIGluc3RhbmNlb2YgTWFwIHx8IHZhbHVlIGluc3RhbmNlb2YgT3JkZXJlZEVsZW1lbnRzKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIE1hcCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBuZXN0ZWQgPSB0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkgPyB0aGlzLmVsZW1lbnRzW2tleV0gOiBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIG5lc3RlZC5zZXQoa2V5LCB2YWx1ZSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IG5lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0Jykge1xuICAgICAgLy8gV2UgaGF2ZSBmb3VuZCBhIG5lc3RlZCBvYmplY3QsIHNvIHdlIG5lZWQgdG8gcmVjdXJzZSBzbyB0aGF0IGFsbFxuICAgICAgLy8gb2YgdGhlIG5lc3RlZCBvYmplY3RzIGFuZCBNYXBzIGFyZSBtZXJnZWQgcHJvcGVybHkuXG4gICAgICB2YXIgX25lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBfbmVzdGVkLnNldChrZXlzW2ldLCB2YWx1ZVtrZXlzW2ldXSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IF9uZXN0ZWQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gIH07XG5cbiAgX3Byb3RvLmdldCA9IGZ1bmN0aW9uIGdldChrZXlcbiAgLyogOiBzdHJpbmcgKi9cbiAgKVxuICAvKiA6IGFueSAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHNba2V5XTtcbiAgfTtcblxuICBfcHJvdG8uaGFzID0gZnVuY3Rpb24gaGFzKGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYm9vbGVhbiAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KTtcbiAgfTtcblxuICBfcHJvdG8uYWRkU3R5bGVUeXBlID0gZnVuY3Rpb24gYWRkU3R5bGVUeXBlKHN0eWxlVHlwZVxuICAvKiA6IGFueSAqL1xuICApXG4gIC8qIDogdm9pZCAqL1xuICB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHN0eWxlVHlwZSBpbnN0YW5jZW9mIE1hcCB8fCBzdHlsZVR5cGUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIHN0eWxlVHlwZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIF90aGlzLnNldChrZXksIHZhbHVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlVHlwZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLnNldChrZXlzW2ldLCBzdHlsZVR5cGVba2V5c1tpXV0sIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gT3JkZXJlZEVsZW1lbnRzO1xufSgpO1xuXG5mdW5jdGlvbiB1bndyYXBFeHBvcnRzICh4KSB7XG5cdHJldHVybiB4ICYmIHguX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoeCwgJ2RlZmF1bHQnKSA/IHguZGVmYXVsdCA6IHg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZuLCBtb2R1bGUpIHtcblx0cmV0dXJuIG1vZHVsZSA9IHsgZXhwb3J0czoge30gfSwgZm4obW9kdWxlLCBtb2R1bGUuZXhwb3J0cyksIG1vZHVsZS5leHBvcnRzO1xufVxuXG5mdW5jdGlvbiBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlIChuKSB7XG5cdHJldHVybiBuICYmIG4uZGVmYXVsdCB8fCBuO1xufVxuXG52YXIgY2FwaXRhbGl6ZVN0cmluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FwaXRhbGl6ZVN0cmluZztcbmZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG52YXIgcHJlZml4UHJvcGVydHlfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFByb3BlcnR5O1xuXG5cblxudmFyIF9jYXBpdGFsaXplU3RyaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoY2FwaXRhbGl6ZVN0cmluZ18xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcHJlZml4UHJvcGVydHkocHJlZml4UHJvcGVydGllcywgcHJvcGVydHksIHN0eWxlKSB7XG4gIGlmIChwcmVmaXhQcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBuZXdTdHlsZSA9IHt9O1xuICAgIHZhciByZXF1aXJlZFByZWZpeGVzID0gcHJlZml4UHJvcGVydGllc1twcm9wZXJ0eV07XG4gICAgdmFyIGNhcGl0YWxpemVkUHJvcGVydHkgPSAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZVByb3BlcnR5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChzdHlsZVByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlcXVpcmVkUHJlZml4ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBuZXdTdHlsZVtyZXF1aXJlZFByZWZpeGVzW2pdICsgY2FwaXRhbGl6ZWRQcm9wZXJ0eV0gPSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG5ld1N0eWxlW3N0eWxlUHJvcGVydHldID0gc3R5bGVbc3R5bGVQcm9wZXJ0eV07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdHlsZTtcbiAgfVxuICByZXR1cm4gc3R5bGU7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhwcmVmaXhQcm9wZXJ0eV8xKTtcblxudmFyIHByZWZpeFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcmVmaXhWYWx1ZTtcbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwbHVnaW5zLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gcGx1Z2luc1tpXShwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBtZXRhRGF0YSk7XG5cbiAgICAvLyB3ZSBjYW4gc3RvcCBwcm9jZXNzaW5nIGlmIGEgdmFsdWUgaXMgcmV0dXJuZWRcbiAgICAvLyBhcyBhbGwgcGx1Z2luIGNyaXRlcmlhIGFyZSB1bmlxdWVcbiAgICBpZiAocHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgIHJldHVybiBwcm9jZXNzZWRWYWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFZhbHVlXzEpO1xuXG52YXIgYWRkTmV3VmFsdWVzT25seV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYWRkTmV3VmFsdWVzT25seTtcbmZ1bmN0aW9uIGFkZElmTmV3KGxpc3QsIHZhbHVlKSB7XG4gIGlmIChsaXN0LmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIGxpc3QucHVzaCh2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkTmV3VmFsdWVzT25seShsaXN0LCB2YWx1ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlc1tpXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlcyk7XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cbnZhciBpc09iamVjdF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNPYmplY3RfMSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUHJlZml4ZXI7XG5cblxuXG52YXIgX3ByZWZpeFByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4UHJvcGVydHlfMSk7XG5cblxuXG52YXIgX3ByZWZpeFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4VmFsdWVfMSk7XG5cblxuXG52YXIgX2FkZE5ld1ZhbHVlc09ubHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChhZGROZXdWYWx1ZXNPbmx5XzEpO1xuXG5cblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzT2JqZWN0XzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVQcmVmaXhlcihfcmVmKSB7XG4gIHZhciBwcmVmaXhNYXAgPSBfcmVmLnByZWZpeE1hcCxcbiAgICAgIHBsdWdpbnMgPSBfcmVmLnBsdWdpbnM7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHByZWZpeChzdHlsZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHN0eWxlKSB7XG4gICAgICB2YXIgdmFsdWUgPSBzdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgIC8vIGhhbmRsZSBuZXN0ZWQgb2JqZWN0c1xuICAgICAgaWYgKCgwLCBfaXNPYmplY3QyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBwcmVmaXgodmFsdWUpO1xuICAgICAgICAvLyBoYW5kbGUgYXJyYXkgdmFsdWVzXG4gICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhciBjb21iaW5lZFZhbHVlID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlW2ldLCBzdHlsZSwgcHJlZml4TWFwKTtcbiAgICAgICAgICAoMCwgX2FkZE5ld1ZhbHVlc09ubHkyLmRlZmF1bHQpKGNvbWJpbmVkVmFsdWUsIHByb2Nlc3NlZFZhbHVlIHx8IHZhbHVlW2ldKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChjb21iaW5lZFZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBjb21iaW5lZFZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3Byb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJlZml4TWFwKTtcblxuICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICBpZiAoX3Byb2Nlc3NlZFZhbHVlKSB7XG4gICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gX3Byb2Nlc3NlZFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGUgPSAoMCwgX3ByZWZpeFByb3BlcnR5Mi5kZWZhdWx0KShwcmVmaXhNYXAsIHByb3BlcnR5LCBzdHlsZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xuICB9O1xufVxufSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlciA9IHVud3JhcEV4cG9ydHMoY3JlYXRlUHJlZml4ZXJfMSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYmFja2dyb3VuZENsaXA7XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAjQnJvd3Nlcl9jb21wYXRpYmlsaXR5XG5mdW5jdGlvbiBiYWNrZ3JvdW5kQ2xpcChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgPT09ICd0ZXh0Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtdGV4dCcsICd0ZXh0J107XG4gIH1cbn1cbn0pO1xuXG52YXIgYmFja2dyb3VuZENsaXAgPSB1bndyYXBFeHBvcnRzKGJhY2tncm91bmRDbGlwXzEpO1xuXG52YXIgaXNQcmVmaXhlZFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1ByZWZpeGVkVmFsdWU7XG52YXIgcmVnZXggPSAvLXdlYmtpdC18LW1vei18LW1zLS87XG5cbmZ1bmN0aW9uIGlzUHJlZml4ZWRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiByZWdleC50ZXN0KHZhbHVlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG52YXIgY2FsY18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FsYztcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuZnVuY3Rpb24gY2FsYyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY2FsYygnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY2FsY1xcKC9nLCBwcmVmaXggKyAnY2FsYygnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjYWxjID0gdW53cmFwRXhwb3J0cyhjYWxjXzEpO1xuXG52YXIgY3Jvc3NGYWRlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcm9zc0ZhZGU7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNzZWFyY2g9Y3Jvc3MtZmFkZVxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGNyb3NzRmFkZShwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY3Jvc3MtZmFkZSgnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY3Jvc3MtZmFkZVxcKC9nLCBwcmVmaXggKyAnY3Jvc3MtZmFkZSgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjcm9zc0ZhZGUgPSB1bndyYXBFeHBvcnRzKGNyb3NzRmFkZV8xKTtcblxudmFyIGN1cnNvcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3Vyc29yO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IHtcbiAgJ3pvb20taW4nOiB0cnVlLFxuICAnem9vbS1vdXQnOiB0cnVlLFxuICBncmFiOiB0cnVlLFxuICBncmFiYmluZzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gY3Vyc29yKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdjdXJzb3InICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjdXJzb3IgPSB1bndyYXBFeHBvcnRzKGN1cnNvcl8xKTtcblxudmFyIGZpbHRlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsdGVyO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIGh0dHA6Ly9jYW5pdXNlLmNvbS8jZmVhdD1jc3MtZmlsdGVyLWZ1bmN0aW9uXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gZmlsdGVyKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdmaWx0ZXIoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ZpbHRlclxcKC9nLCBwcmVmaXggKyAnZmlsdGVyKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGZpbHRlciA9IHVud3JhcEV4cG9ydHMoZmlsdGVyXzEpO1xuXG52YXIgZmxleF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleDtcbnZhciB2YWx1ZXMgPSB7XG4gIGZsZXg6IFsnLXdlYmtpdC1ib3gnLCAnLW1vei1ib3gnLCAnLW1zLWZsZXhib3gnLCAnLXdlYmtpdC1mbGV4JywgJ2ZsZXgnXSxcbiAgJ2lubGluZS1mbGV4JzogWyctd2Via2l0LWlubGluZS1ib3gnLCAnLW1vei1pbmxpbmUtYm94JywgJy1tcy1pbmxpbmUtZmxleGJveCcsICctd2Via2l0LWlubGluZS1mbGV4JywgJ2lubGluZS1mbGV4J11cbn07XG5cbmZ1bmN0aW9uIGZsZXgocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWVzW3ZhbHVlXTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4ID0gdW53cmFwRXhwb3J0cyhmbGV4XzEpO1xuXG52YXIgZmxleGJveElFXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94SUU7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnZGlzdHJpYnV0ZScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnXG59O1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduQ29udGVudDogJ21zRmxleExpbmVQYWNrJyxcbiAgYWxpZ25TZWxmOiAnbXNGbGV4SXRlbUFsaWduJyxcbiAgYWxpZ25JdGVtczogJ21zRmxleEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdtc0ZsZXhQYWNrJyxcbiAgb3JkZXI6ICdtc0ZsZXhPcmRlcicsXG4gIGZsZXhHcm93OiAnbXNGbGV4UG9zaXRpdmUnLFxuICBmbGV4U2hyaW5rOiAnbXNGbGV4TmVnYXRpdmUnLFxuICBmbGV4QmFzaXM6ICdtc0ZsZXhQcmVmZXJyZWRTaXplJ1xuICAvLyBGdWxsIGV4cGFuZGVkIHN5bnRheCBpcyBmbGV4LWdyb3cgfCBmbGV4LXNocmluayB8IGZsZXgtYmFzaXMuXG59O3ZhciBmbGV4U2hvcnRoYW5kTWFwcGluZ3MgPSB7XG4gIGF1dG86ICcxIDEgYXV0bycsXG4gIGluaGVyaXQ6ICdpbmhlcml0JyxcbiAgaW5pdGlhbDogJzAgMSBhdXRvJyxcbiAgbm9uZTogJzAgMCBhdXRvJyxcbiAgdW5zZXQ6ICd1bnNldCdcbn07XG52YXIgaXNVbml0bGVzc051bWJlciA9IC9eXFxkKyhcXC5cXGQrKT8kLztcblxuZnVuY3Rpb24gZmxleGJveElFKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleCcpIHtcbiAgICAvLyBGb3IgY2VydGFpbiB2YWx1ZXMgd2UgY2FuIGRvIHN0cmFpZ2h0IG1hcHBpbmdzIGJhc2VkIG9uIHRoZSBzcGVjXG4gICAgLy8gZm9yIHRoZSBleHBhbnNpb25zLlxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZmxleFNob3J0aGFuZE1hcHBpbmdzLCB2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhTaG9ydGhhbmRNYXBwaW5nc1t2YWx1ZV07XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIEhlcmUgd2UgaGF2ZSBubyBkaXJlY3QgbWFwcGluZywgc28gd2UgZmF2b3IgbG9va2luZyBmb3IgYVxuICAgIC8vIHVuaXRsZXNzIHBvc2l0aXZlIG51bWJlciBhcyB0aGF0IHdpbGwgYmUgdGhlIG1vc3QgY29tbW9uIHVzZS1jYXNlLlxuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyLnRlc3QodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZSArICcgMSAwJSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVGhlIG5leHQgdGhpbmcgd2UgY2FuIGxvb2sgZm9yIGlzIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB2YWx1ZXMuXG4gICAgdmFyIGZsZXhWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvXFxzLyk7XG4gICAgLy8gSWYgd2Ugb25seSBoYXZlIGEgc2luZ2xlIHZhbHVlIHRoYXQgd2Fzbid0IGEgcG9zaXRpdmUgdW5pdGxlc3NcbiAgICAvLyBvciBhIHByZS1tYXBwZWQgdmFsdWUsIHRoZW4gd2UgY2FuIGFzc3VtZSBpdCBpcyBhIHVuaXQgdmFsdWUuXG4gICAgc3dpdGNoIChmbGV4VmFsdWVzLmxlbmd0aCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSAnMSAxICcgKyB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY2FzZSAyOlxuICAgICAgICAvLyBJZiB3ZSBoYXZlIDIgdW5pdHMsIHRoZW4gd2UgZXhwZWN0IHRoYXQgdGhlIGZpcnN0IHdpbGxcbiAgICAgICAgLy8gYWx3YXlzIGJlIGEgdW5pdGxlc3MgbnVtYmVyIGFuZCByZXByZXNlbnRzIGZsZXgtZ3Jvdy5cbiAgICAgICAgLy8gVGhlIHNlY29uZCB1bml0IHdpbGwgcmVwcmVzZW50IGZsZXgtc2hyaW5rIGZvciBhIHVuaXRsZXNzXG4gICAgICAgIC8vIHZhbHVlLCBvciBmbGV4LWJhc2lzIG90aGVyd2lzZS5cbiAgICAgICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdChmbGV4VmFsdWVzWzFdKSkge1xuICAgICAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhWYWx1ZXNbMF0gKyAnICcgKyBmbGV4VmFsdWVzWzFdICsgJyAwJSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgMSAnICsgZmxleFZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG52YXIgZmxleGJveElFID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94SUVfMSk7XG5cbnZhciBmbGV4Ym94T2xkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94T2xkO1xudmFyIGFsdGVybmF0aXZlVmFsdWVzID0ge1xuICAnc3BhY2UtYXJvdW5kJzogJ2p1c3RpZnknLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5JyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ3dyYXAtcmV2ZXJzZSc6ICdtdWx0aXBsZScsXG4gIHdyYXA6ICdtdWx0aXBsZSdcbn07XG5cbnZhciBhbHRlcm5hdGl2ZVByb3BzID0ge1xuICBhbGlnbkl0ZW1zOiAnV2Via2l0Qm94QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ1dlYmtpdEJveFBhY2snLFxuICBmbGV4V3JhcDogJ1dlYmtpdEJveExpbmVzJyxcbiAgZmxleEdyb3c6ICdXZWJraXRCb3hGbGV4J1xufTtcblxuZnVuY3Rpb24gZmxleGJveE9sZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2ZsZXhEaXJlY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodmFsdWUuaW5kZXhPZignY29sdW1uJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ3ZlcnRpY2FsJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ2hvcml6b250YWwnO1xuICAgIH1cbiAgICBpZiAodmFsdWUuaW5kZXhPZigncmV2ZXJzZScpID4gLTEpIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveERpcmVjdGlvbiA9ICdyZXZlcnNlJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ25vcm1hbCc7XG4gICAgfVxuICB9XG4gIGlmIChhbHRlcm5hdGl2ZVByb3BzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94T2xkID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94T2xkXzEpO1xuXG52YXIgZ3JhZGllbnRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyYWRpZW50O1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciB2YWx1ZXMgPSAvbGluZWFyLWdyYWRpZW50fHJhZGlhbC1ncmFkaWVudHxyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50fHJlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQvZ2k7XG5cbmZ1bmN0aW9uIGdyYWRpZW50KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZXMudGVzdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKHZhbHVlcywgZnVuY3Rpb24gKGdyYWQpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCArIGdyYWQ7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBncmFkaWVudCA9IHVud3JhcEV4cG9ydHMoZ3JhZGllbnRfMSk7XG5cbnZhciBncmlkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZ3JpZDtcbmZ1bmN0aW9uIGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsdWUpO1xufVxuXG52YXIgYWxpZ25tZW50VmFsdWVzID0gWydjZW50ZXInLCAnZW5kJywgJ3N0YXJ0JywgJ3N0cmV0Y2gnXTtcblxudmFyIGRpc3BsYXlWYWx1ZXMgPSB7XG4gICdpbmxpbmUtZ3JpZCc6IFsnLW1zLWlubGluZS1ncmlkJywgJ2lubGluZS1ncmlkJ10sXG4gIGdyaWQ6IFsnLW1zLWdyaWQnLCAnZ3JpZCddXG59O1xuXG52YXIgcHJvcGVydHlDb252ZXJ0ZXJzID0ge1xuICBhbGlnblNlbGY6IGZ1bmN0aW9uIGFsaWduU2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd0FsaWduID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRDb2x1bW46IGZ1bmN0aW9uIGdyaWRDb2x1bW4odmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcCA9IHZhbHVlLnNwbGl0KCcvJykubWFwKGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gK3Bvc2l0aW9uO1xuICAgICAgfSksXG4gICAgICAgICAgX3ZhbHVlJHNwbGl0JG1hcDIgPSBfc2xpY2VkVG9BcnJheShfdmFsdWUkc3BsaXQkbWFwLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXAyWzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXAyWzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtblN0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtbkVuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbkVuZDogZnVuY3Rpb24gZ3JpZENvbHVtbkVuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkQ29sdW1uID0gc3R5bGUubXNHcmlkQ29sdW1uO1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZENvbHVtbikpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtblNwYW4gPSB2YWx1ZSAtIG1zR3JpZENvbHVtbjtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtblN0YXJ0OiBmdW5jdGlvbiBncmlkQ29sdW1uU3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93OiBmdW5jdGlvbiBncmlkUm93KHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChpc1NpbXBsZVBvc2l0aW9uVmFsdWUodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0dyaWRSb3cgPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF92YWx1ZSRzcGxpdCRtYXAzID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwNCA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAzLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXA0WzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXA0WzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd1N0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd0VuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd0VuZDogZnVuY3Rpb24gZ3JpZFJvd0VuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkUm93ID0gc3R5bGUubXNHcmlkUm93O1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZFJvdykpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd1NwYW4gPSB2YWx1ZSAtIG1zR3JpZFJvdztcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd1N0YXJ0OiBmdW5jdGlvbiBncmlkUm93U3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkVGVtcGxhdGVDb2x1bW5zOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVDb2x1bW5zKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZENvbHVtbnMgPSB2YWx1ZTtcbiAgfSxcblxuICBncmlkVGVtcGxhdGVSb3dzOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVSb3dzKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZFJvd3MgPSB2YWx1ZTtcbiAgfSxcblxuICBqdXN0aWZ5U2VsZjogZnVuY3Rpb24ganVzdGlmeVNlbGYodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGFsaWdubWVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA+IC0xKSB7XG4gICAgICBzdHlsZS5tc0dyaWRDb2x1bW5BbGlnbiA9IHZhbHVlO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZ3JpZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlIGluIGRpc3BsYXlWYWx1ZXMpIHtcbiAgICByZXR1cm4gZGlzcGxheVZhbHVlc1t2YWx1ZV07XG4gIH1cblxuICBpZiAocHJvcGVydHkgaW4gcHJvcGVydHlDb252ZXJ0ZXJzKSB7XG4gICAgdmFyIHByb3BlcnR5Q29udmVydGVyID0gcHJvcGVydHlDb252ZXJ0ZXJzW3Byb3BlcnR5XTtcbiAgICBwcm9wZXJ0eUNvbnZlcnRlcih2YWx1ZSwgc3R5bGUpO1xuICB9XG59XG59KTtcblxudmFyIGdyaWQgPSB1bndyYXBFeHBvcnRzKGdyaWRfMSk7XG5cbnZhciBpbWFnZVNldF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1hZ2VTZXQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1pbWFnZS1zZXRcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBpbWFnZVNldChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignaW1hZ2Utc2V0KCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9pbWFnZS1zZXRcXCgvZywgcHJlZml4ICsgJ2ltYWdlLXNldCgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBpbWFnZVNldCA9IHVud3JhcEV4cG9ydHMoaW1hZ2VTZXRfMSk7XG5cbnZhciBsb2dpY2FsXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBsb2dpY2FsO1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIG1hcmdpbkJsb2NrU3RhcnQ6IFsnV2Via2l0TWFyZ2luQmVmb3JlJ10sXG4gIG1hcmdpbkJsb2NrRW5kOiBbJ1dlYmtpdE1hcmdpbkFmdGVyJ10sXG4gIG1hcmdpbklubGluZVN0YXJ0OiBbJ1dlYmtpdE1hcmdpblN0YXJ0JywgJ01vek1hcmdpblN0YXJ0J10sXG4gIG1hcmdpbklubGluZUVuZDogWydXZWJraXRNYXJnaW5FbmQnLCAnTW96TWFyZ2luRW5kJ10sXG4gIHBhZGRpbmdCbG9ja1N0YXJ0OiBbJ1dlYmtpdFBhZGRpbmdCZWZvcmUnXSxcbiAgcGFkZGluZ0Jsb2NrRW5kOiBbJ1dlYmtpdFBhZGRpbmdBZnRlciddLFxuICBwYWRkaW5nSW5saW5lU3RhcnQ6IFsnV2Via2l0UGFkZGluZ1N0YXJ0JywgJ01velBhZGRpbmdTdGFydCddLFxuICBwYWRkaW5nSW5saW5lRW5kOiBbJ1dlYmtpdFBhZGRpbmdFbmQnLCAnTW96UGFkZGluZ0VuZCddLFxuICBib3JkZXJCbG9ja1N0YXJ0OiBbJ1dlYmtpdEJvcmRlckJlZm9yZSddLFxuICBib3JkZXJCbG9ja1N0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVN0eWxlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRXaWR0aDogWydXZWJraXRCb3JkZXJCZWZvcmVXaWR0aCddLFxuICBib3JkZXJCbG9ja0VuZDogWydXZWJraXRCb3JkZXJBZnRlciddLFxuICBib3JkZXJCbG9ja0VuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckFmdGVyQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tFbmRTdHlsZTogWydXZWJraXRCb3JkZXJBZnRlclN0eWxlJ10sXG4gIGJvcmRlckJsb2NrRW5kV2lkdGg6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJXaWR0aCddLFxuICBib3JkZXJJbmxpbmVTdGFydDogWydXZWJraXRCb3JkZXJTdGFydCcsICdNb3pCb3JkZXJTdGFydCddLFxuICBib3JkZXJJbmxpbmVTdGFydENvbG9yOiBbJ1dlYmtpdEJvcmRlclN0YXJ0Q29sb3InLCAnTW96Qm9yZGVyU3RhcnRDb2xvciddLFxuICBib3JkZXJJbmxpbmVTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlclN0YXJ0U3R5bGUnLCAnTW96Qm9yZGVyU3RhcnRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlclN0YXJ0V2lkdGgnLCAnTW96Qm9yZGVyU3RhcnRXaWR0aCddLFxuICBib3JkZXJJbmxpbmVFbmQ6IFsnV2Via2l0Qm9yZGVyRW5kJywgJ01vekJvcmRlckVuZCddLFxuICBib3JkZXJJbmxpbmVFbmRDb2xvcjogWydXZWJraXRCb3JkZXJFbmRDb2xvcicsICdNb3pCb3JkZXJFbmRDb2xvciddLFxuICBib3JkZXJJbmxpbmVFbmRTdHlsZTogWydXZWJraXRCb3JkZXJFbmRTdHlsZScsICdNb3pCb3JkZXJFbmRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVFbmRXaWR0aDogWydXZWJraXRCb3JkZXJFbmRXaWR0aCcsICdNb3pCb3JkZXJFbmRXaWR0aCddXG59O1xuXG5mdW5jdGlvbiBsb2dpY2FsKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICB2YXIgYWx0ZXJuYXRpdmVQcm9wTGlzdCA9IGFsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhbHRlcm5hdGl2ZVByb3BMaXN0Lmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BMaXN0W2ldXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBsb2dpY2FsID0gdW53cmFwRXhwb3J0cyhsb2dpY2FsXzEpO1xuXG52YXIgcG9zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBvc2l0aW9uO1xuZnVuY3Rpb24gcG9zaXRpb24ocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ3Bvc2l0aW9uJyAmJiB2YWx1ZSA9PT0gJ3N0aWNreScpIHtcbiAgICByZXR1cm4gWyctd2Via2l0LXN0aWNreScsICdzdGlja3knXTtcbiAgfVxufVxufSk7XG5cbnZhciBwb3NpdGlvbiA9IHVud3JhcEV4cG9ydHMocG9zaXRpb25fMSk7XG5cbnZhciBzaXppbmdfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpemluZztcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgaGVpZ2h0OiB0cnVlLFxuICBjb2x1bW5XaWR0aDogdHJ1ZSxcbiAgbWluV2lkdGg6IHRydWUsXG4gIG1pbkhlaWdodDogdHJ1ZVxufTtcbnZhciB2YWx1ZXMgPSB7XG4gICdtaW4tY29udGVudCc6IHRydWUsXG4gICdtYXgtY29udGVudCc6IHRydWUsXG4gICdmaWxsLWF2YWlsYWJsZSc6IHRydWUsXG4gICdmaXQtY29udGVudCc6IHRydWUsXG4gICdjb250YWluLWZsb2F0cyc6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHNpemluZyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBzaXppbmcgPSB1bndyYXBFeHBvcnRzKHNpemluZ18xKTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItdGVtcGxhdGUgKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xudmFyIGNhY2hlID0ge307XG5cbmZ1bmN0aW9uIHRvSHlwaGVuTG93ZXIobWF0Y2gpIHtcbiAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKClcbn1cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKG5hbWUpIHtcbiAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgcmV0dXJuIGNhY2hlW25hbWVdXG4gIH1cblxuICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcik7XG4gIHJldHVybiAoY2FjaGVbbmFtZV0gPSBtc1BhdHRlcm4udGVzdChoTmFtZSkgPyAnLScgKyBoTmFtZSA6IGhOYW1lKVxufVxuXG52YXIgaHlwaGVuYXRlU3R5bGVOYW1lJDEgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIGRlZmF1bHQ6IGh5cGhlbmF0ZVN0eWxlTmFtZVxufSk7XG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lID0gZ2V0Q2pzRXhwb3J0RnJvbU5hbWVzcGFjZShoeXBoZW5hdGVTdHlsZU5hbWUkMSk7XG5cbnZhciBoeXBoZW5hdGVQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaHlwaGVuYXRlUHJvcGVydHk7XG5cblxuXG52YXIgX2h5cGhlbmF0ZVN0eWxlTmFtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVTdHlsZU5hbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICByZXR1cm4gKDAsIF9oeXBoZW5hdGVTdHlsZU5hbWUyLmRlZmF1bHQpKHByb3BlcnR5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cbnZhciB0cmFuc2l0aW9uXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFuc2l0aW9uO1xuXG5cblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGh5cGhlbmF0ZVByb3BlcnR5XzEpO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcGVydGllcyA9IHtcbiAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgdHJhbnNpdGlvblByb3BlcnR5OiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uOiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIE1velRyYW5zaXRpb246IHRydWUsXG4gIE1velRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZVxufTtcblxuXG52YXIgcHJlZml4TWFwcGluZyA9IHtcbiAgV2Via2l0OiAnLXdlYmtpdC0nLFxuICBNb3o6ICctbW96LScsXG4gIG1zOiAnLW1zLSdcbn07XG5cbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICBpZiAoKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8vIG9ubHkgc3BsaXQgbXVsdGkgdmFsdWVzLCBub3QgY3ViaWMgYmV6aWVyc1xuICB2YXIgbXVsdGlwbGVWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvLCg/IVteKCldKig/OlxcKFteKCldKlxcKSk/XFwpKS9nKTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gbXVsdGlwbGVWYWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgc2luZ2xlVmFsdWUgPSBtdWx0aXBsZVZhbHVlc1tpXTtcbiAgICB2YXIgdmFsdWVzID0gW3NpbmdsZVZhbHVlXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICAgICAgdmFyIGRhc2hDYXNlUHJvcGVydHkgPSAoMCwgX2h5cGhlbmF0ZVByb3BlcnR5Mi5kZWZhdWx0KShwcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChzaW5nbGVWYWx1ZS5pbmRleE9mKGRhc2hDYXNlUHJvcGVydHkpID4gLTEgJiYgZGFzaENhc2VQcm9wZXJ0eSAhPT0gJ29yZGVyJykge1xuICAgICAgICB2YXIgcHJlZml4ZXMgPSBwcm9wZXJ0eVByZWZpeE1hcFtwcm9wZXJ0eV07XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBwTGVuID0gcHJlZml4ZXMubGVuZ3RoOyBqIDwgcExlbjsgKytqKSB7XG4gICAgICAgICAgLy8gam9pbiBhbGwgcHJlZml4ZXMgYW5kIGNyZWF0ZSBhIG5ldyB2YWx1ZVxuICAgICAgICAgIHZhbHVlcy51bnNoaWZ0KHNpbmdsZVZhbHVlLnJlcGxhY2UoZGFzaENhc2VQcm9wZXJ0eSwgcHJlZml4TWFwcGluZ1twcmVmaXhlc1tqXV0gKyBkYXNoQ2FzZVByb3BlcnR5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtdWx0aXBsZVZhbHVlc1tpXSA9IHZhbHVlcy5qb2luKCcsJyk7XG4gIH1cblxuICByZXR1cm4gbXVsdGlwbGVWYWx1ZXMuam9pbignLCcpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIC8vIGFsc28gY2hlY2sgZm9yIGFscmVhZHkgcHJlZml4ZWQgdHJhbnNpdGlvbnNcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgcHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICB2YXIgb3V0cHV0VmFsdWUgPSBwcmVmaXhWYWx1ZSh2YWx1ZSwgcHJvcGVydHlQcmVmaXhNYXApO1xuICAgIC8vIGlmIHRoZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IHByZWZpeGVkXG4gICAgdmFyIHdlYmtpdE91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8tbW96LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ1dlYmtpdCcpID4gLTEpIHtcbiAgICAgIHJldHVybiB3ZWJraXRPdXRwdXQ7XG4gICAgfVxuXG4gICAgdmFyIG1vek91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8td2Via2l0LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ01veicpID4gLTEpIHtcbiAgICAgIHJldHVybiBtb3pPdXRwdXQ7XG4gICAgfVxuXG4gICAgc3R5bGVbJ1dlYmtpdCcgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSB3ZWJraXRPdXRwdXQ7XG4gICAgc3R5bGVbJ01veicgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSBtb3pPdXRwdXQ7XG4gICAgcmV0dXJuIG91dHB1dFZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIHRyYW5zaXRpb24gPSB1bndyYXBFeHBvcnRzKHRyYW5zaXRpb25fMSk7XG5cbnZhciB3ID0gW1wiV2Via2l0XCJdO1xudmFyIG0gPSBbXCJNb3pcIl07XG52YXIgbXMgPSBbXCJtc1wiXTtcbnZhciB3bSA9IFtcIldlYmtpdFwiLCBcIk1velwiXTtcbnZhciB3bXMgPSBbXCJXZWJraXRcIiwgXCJtc1wiXTtcbnZhciB3bW1zID0gW1wiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIl07XG52YXIgc3RhdGljRGF0YSA9IHtcbiAgcGx1Z2luczogW2JhY2tncm91bmRDbGlwLCBjYWxjLCBjcm9zc0ZhZGUsIGN1cnNvciwgZmlsdGVyLCBmbGV4LCBmbGV4Ym94SUUsIGZsZXhib3hPbGQsIGdyYWRpZW50LCBncmlkLCBpbWFnZVNldCwgbG9naWNhbCwgcG9zaXRpb24sIHNpemluZywgdHJhbnNpdGlvbl0sXG4gIHByZWZpeE1hcDoge1xuICAgIFwidHJhbnNmb3JtXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblwiOiB3bXMsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpbllcIjogd21zLFxuICAgIFwiYmFja2ZhY2VWaXNpYmlsaXR5XCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZVwiOiB3LFxuICAgIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogdyxcbiAgICBcInRyYW5zZm9ybVN0eWxlXCI6IHcsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IHcsXG4gICAgXCJhbmltYXRpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IHcsXG4gICAgXCJhbmltYXRpb25EdXJhdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdyxcbiAgICBcImFuaW1hdGlvbk5hbWVcIjogdyxcbiAgICBcImFuaW1hdGlvblBsYXlTdGF0ZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogdyxcbiAgICBcImFwcGVhcmFuY2VcIjogd20sXG4gICAgXCJ1c2VyU2VsZWN0XCI6IHdtbXMsXG4gICAgXCJmb250S2VybmluZ1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogdyxcbiAgICBcInRleHRFbXBoYXNpc1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzU3R5bGVcIjogdyxcbiAgICBcInRleHRFbXBoYXNpc0NvbG9yXCI6IHcsXG4gICAgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogdyxcbiAgICBcImNsaXBQYXRoXCI6IHcsXG4gICAgXCJtYXNrSW1hZ2VcIjogdyxcbiAgICBcIm1hc2tNb2RlXCI6IHcsXG4gICAgXCJtYXNrUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrUG9zaXRpb25cIjogdyxcbiAgICBcIm1hc2tDbGlwXCI6IHcsXG4gICAgXCJtYXNrT3JpZ2luXCI6IHcsXG4gICAgXCJtYXNrU2l6ZVwiOiB3LFxuICAgIFwibWFza0NvbXBvc2l0ZVwiOiB3LFxuICAgIFwibWFza1wiOiB3LFxuICAgIFwibWFza0JvcmRlclNvdXJjZVwiOiB3LFxuICAgIFwibWFza0JvcmRlck1vZGVcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJTbGljZVwiOiB3LFxuICAgIFwibWFza0JvcmRlcldpZHRoXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyXCI6IHcsXG4gICAgXCJtYXNrVHlwZVwiOiB3LFxuICAgIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uU2tpcFwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uTGluZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogd20sXG4gICAgXCJmaWx0ZXJcIjogdyxcbiAgICBcImZvbnRGZWF0dXJlU2V0dGluZ3NcIjogd20sXG4gICAgXCJicmVha0FmdGVyXCI6IHdtbXMsXG4gICAgXCJicmVha0JlZm9yZVwiOiB3bW1zLFxuICAgIFwiYnJlYWtJbnNpZGVcIjogd21tcyxcbiAgICBcImNvbHVtbkNvdW50XCI6IHdtLFxuICAgIFwiY29sdW1uRmlsbFwiOiB3bSxcbiAgICBcImNvbHVtbkdhcFwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlQ29sb3JcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlU3R5bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlV2lkdGhcIjogd20sXG4gICAgXCJjb2x1bW5zXCI6IHdtLFxuICAgIFwiY29sdW1uU3BhblwiOiB3bSxcbiAgICBcImNvbHVtbldpZHRoXCI6IHdtLFxuICAgIFwid3JpdGluZ01vZGVcIjogd21zLFxuICAgIFwiZmxleFwiOiB3bXMsXG4gICAgXCJmbGV4QmFzaXNcIjogdyxcbiAgICBcImZsZXhEaXJlY3Rpb25cIjogd21zLFxuICAgIFwiZmxleEdyb3dcIjogdyxcbiAgICBcImZsZXhGbG93XCI6IHdtcyxcbiAgICBcImZsZXhTaHJpbmtcIjogdyxcbiAgICBcImZsZXhXcmFwXCI6IHdtcyxcbiAgICBcImFsaWduQ29udGVudFwiOiB3LFxuICAgIFwiYWxpZ25JdGVtc1wiOiB3LFxuICAgIFwiYWxpZ25TZWxmXCI6IHcsXG4gICAgXCJqdXN0aWZ5Q29udGVudFwiOiB3LFxuICAgIFwib3JkZXJcIjogdyxcbiAgICBcInRyYW5zaXRpb25EZWxheVwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogdyxcbiAgICBcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYmFja2Ryb3BGaWx0ZXJcIjogdyxcbiAgICBcInNjcm9sbFNuYXBUeXBlXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNYXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNZXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiB3bXMsXG4gICAgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiB3bXMsXG4gICAgXCJzaGFwZUltYWdlVGhyZXNob2xkXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlTWFyZ2luXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiB3LFxuICAgIFwiaHlwaGVuc1wiOiB3bW1zLFxuICAgIFwiZmxvd0ludG9cIjogd21zLFxuICAgIFwiZmxvd0Zyb21cIjogd21zLFxuICAgIFwicmVnaW9uRnJhZ21lbnRcIjogd21zLFxuICAgIFwidGV4dE9yaWVudGF0aW9uXCI6IHcsXG4gICAgXCJib3hTaXppbmdcIjogbSxcbiAgICBcInRleHRBbGlnbkxhc3RcIjogbSxcbiAgICBcInRhYlNpemVcIjogbSxcbiAgICBcIndyYXBGbG93XCI6IG1zLFxuICAgIFwid3JhcFRocm91Z2hcIjogbXMsXG4gICAgXCJ3cmFwTWFyZ2luXCI6IG1zLFxuICAgIFwidG91Y2hBY3Rpb25cIjogbXMsXG4gICAgXCJ0ZXh0U2l6ZUFkanVzdFwiOiB3bXMsXG4gICAgXCJib3JkZXJJbWFnZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VPdXRzZXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlUmVwZWF0XCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNsaWNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNvdXJjZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VXaWR0aFwiOiB3XG4gIH1cbn07XG5cbnZhciBwcmVmaXhBbGwgPSBjcmVhdGVQcmVmaXhlcihzdGF0aWNEYXRhKTtcbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vaW5kZXguanMnO1xudHlwZSBTdHJpbmdIYW5kbGVycyA9IHsgW2lkOnN0cmluZ106IEZ1bmN0aW9uIH07XG50eXBlIFNlbGVjdG9yQ2FsbGJhY2sgPSAoc2VsZWN0b3I6IHN0cmluZykgPT4gc3RyaW5nW107XG5leHBvcnQgdHlwZSBTZWxlY3RvckhhbmRsZXIgPSAoXG4gICAgc2VsZWN0b3I6IHN0cmluZyxcbiAgICBiYXNlU2VsZWN0b3I6IHN0cmluZyxcbiAgICBjYWxsYmFjazogU2VsZWN0b3JDYWxsYmFja1xuKSA9PiBzdHJpbmdbXSB8IHN0cmluZyB8IG51bGw7XG4qL1xuXG4vKipcbiAqIGBzZWxlY3RvckhhbmRsZXJzYCBhcmUgZnVuY3Rpb25zIHdoaWNoIGhhbmRsZSBzcGVjaWFsIHNlbGVjdG9ycyB3aGljaCBhY3RcbiAqIGRpZmZlcmVudGx5IHRoYW4gbm9ybWFsIHN0eWxlIGRlZmluaXRpb25zLiBUaGVzZSBmdW5jdGlvbnMgbG9vayBhdCB0aGVcbiAqIGN1cnJlbnQgc2VsZWN0b3IgYW5kIGNhbiBnZW5lcmF0ZSBDU1MgZm9yIHRoZSBzdHlsZXMgaW4gdGhlaXIgc3VidHJlZSBieVxuICogY2FsbGluZyB0aGUgY2FsbGJhY2sgd2l0aCBhIG5ldyBzZWxlY3Rvci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgd2hlbiBnZW5lcmF0aW5nIHN0eWxlcyB3aXRoIGEgYmFzZSBzZWxlY3RvciBvZiAnLmZvbycgYW5kIHRoZVxuICogZm9sbG93aW5nIHN0eWxlcyBvYmplY3Q6XG4gKlxuICogICB7XG4gKiAgICAgJzpudGgtY2hpbGQoMm4pJzoge1xuICogICAgICAgJzpob3Zlcic6IHtcbiAqICAgICAgICAgY29sb3I6ICdyZWQnXG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICB9XG4gKlxuICogd2hlbiB3ZSByZWFjaCB0aGUgJzpob3Zlcicgc3R5bGUsIHdlIHdvdWxkIGNhbGwgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIGxpa2VcbiAqXG4gKiAgIGhhbmRsZXIoJzpob3ZlcicsICcuZm9vOm50aC1jaGlsZCgybiknLCBjYWxsYmFjaylcbiAqXG4gKiBTaW5jZSBvdXIgYHBzZXVkb1NlbGVjdG9yc2AgaGFuZGxlcyAnOmhvdmVyJyBzdHlsZXMsIHRoYXQgaGFuZGxlciB3b3VsZCBjYWxsXG4gKiB0aGUgY2FsbGJhY2sgbGlrZVxuICpcbiAqICAgY2FsbGJhY2soJy5mb286bnRoLWNoaWxkKDJuKTpob3ZlcicpXG4gKlxuICogdG8gZ2VuZXJhdGUgaXRzIHN1YnRyZWUgYHsgY29sb3I6ICdyZWQnIH1gIHN0eWxlcyB3aXRoIGFcbiAqICcuZm9vOm50aC1jaGlsZCgybik6aG92ZXInIHNlbGVjdG9yLiBUaGUgY2FsbGJhY2sgd291bGQgcmV0dXJuIGFuIGFycmF5IG9mIENTU1xuICogcnVsZXMgbGlrZVxuICpcbiAqICAgWycuZm9vOm50aC1jaGlsZCgybik6aG92ZXJ7Y29sb3I6cmVkICFpbXBvcnRhbnQ7fSddXG4gKlxuICogYW5kIHRoZSBoYW5kbGVyIHdvdWxkIHRoZW4gcmV0dXJuIHRoYXQgcmVzdWx0aW5nIENTUy5cbiAqXG4gKiBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGlzIHRoZSBsaXN0IG9mIGRlZmF1bHQgaGFuZGxlcnMgdXNlZCBpbiBhIGNhbGwgdG9cbiAqIGBnZW5lcmF0ZUNTU2AuXG4gKlxuICogQG5hbWUgU2VsZWN0b3JIYW5kbGVyXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogVGhlIGN1cnJlbnRseSBpbnNwZWN0ZWQgc2VsZWN0b3IuICc6aG92ZXInIGluIHRoZVxuICogICAgIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVNlbGVjdG9yOiBUaGUgc2VsZWN0b3Igb2YgdGhlIHBhcmVudCBzdHlsZXMuXG4gKiAgICAgJy5mb286bnRoLWNoaWxkKDJuKScgaW4gdGhlIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXM6IEEgZnVuY3Rpb24gd2hpY2ggY2FuIGJlIGNhbGxlZCB0b1xuICogICAgIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN1YnRyZWUgb2Ygc3R5bGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNlbGVjdG9yLlxuICogICAgIEFjY2VwdHMgYSBuZXcgYmFzZVNlbGVjdG9yIHRvIHVzZSBmb3IgZ2VuZXJhdGluZyB0aG9zZSBzdHlsZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nW10gfCBzdHJpbmcgfCBudWxsfSBUaGUgZ2VuZXJhdGVkIENTUyBmb3IgdGhpcyBzZWxlY3Rvciwgb3JcbiAqICAgICBudWxsIGlmIHdlIGRvbid0IGhhbmRsZSB0aGlzIHNlbGVjdG9yLlxuICovXG5cbnZhciBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuPSBbLy8gSGFuZGxlIHBzZXVkby1zZWxlY3RvcnMsIGxpa2UgOmhvdmVyIGFuZCA6bnRoLWNoaWxkKDNuKVxuZnVuY3Rpb24gcHNldWRvU2VsZWN0b3JzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiOlwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKGJhc2VTZWxlY3RvciArIHNlbGVjdG9yKTtcbn0sIC8vIEhhbmRsZSBtZWRpYSBxdWVyaWVzIChvciBmb250LWZhY2VzKVxuZnVuY3Rpb24gbWVkaWFRdWVyaWVzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiQFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gR2VuZXJhdGUgdGhlIHN0eWxlcyBub3JtYWxseSwgYW5kIHRoZW4gd3JhcCB0aGVtIGluIHRoZSBtZWRpYSBxdWVyeS5cblxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yKTtcbiAgcmV0dXJuIFtcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChnZW5lcmF0ZWQuam9pbignJyksIFwifVwiKV07XG59XTtcbi8qKlxuICogR2VuZXJhdGUgQ1NTIGZvciBhIHNlbGVjdG9yIGFuZCBzb21lIHN0eWxlcy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIG1lZGlhIHF1ZXJpZXMgYW5kIHBzZXVkbyBzZWxlY3RvcnMgdGhhdCBjYW4gYmUgdXNlZFxuICogaW4gYXBocm9kaXRlIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IEEgYmFzZSBDU1Mgc2VsZWN0b3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgZ2VuZXJhdGVkXG4gKiAgICAgd2l0aC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVR5cGVzOiBBIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgcmV0dXJuIHR5cGUgb2ZcbiAqICAgICBTdHlsZVNoZWV0LmNyZWF0ZSwgZS5nLiBbc3R5bGVzLnJlZCwgc3R5bGVzLmJsdWVdLlxuICogQHBhcmFtIHtBcnJheS48U2VsZWN0b3JIYW5kbGVyPn0gc2VsZWN0b3JIYW5kbGVyczogQSBsaXN0IG9mIHNlbGVjdG9yXG4gKiAgICAgaGFuZGxlcnMgdG8gdXNlIGZvciBoYW5kbGluZyBzcGVjaWFsIHNlbGVjdG9ycy4gU2VlXG4gKiAgICAgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYC5cbiAqIEBwYXJhbSBzdHJpbmdIYW5kbGVyczogU2VlIGBnZW5lcmF0ZUNTU1J1bGVzZXRgXG4gKiBAcGFyYW0gdXNlSW1wb3J0YW50OiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqXG4gKiBUbyBhY3R1YWxseSBnZW5lcmF0ZSB0aGUgQ1NTIHNwZWNpYWwtY29uc3RydWN0LWxlc3Mgc3R5bGVzIGFyZSBwYXNzZWQgdG9cbiAqIGBnZW5lcmF0ZUNTU1J1bGVzZXRgLlxuICpcbiAqIEZvciBpbnN0YW5jZSwgYSBjYWxsIHRvXG4gKlxuICogICAgIGdlbmVyYXRlQ1NTKFwiLmZvb1wiLCBbe1xuICogICAgICAgY29sb3I6IFwicmVkXCIsXG4gKiAgICAgICBcIkBtZWRpYSBzY3JlZW5cIjoge1xuICogICAgICAgICBoZWlnaHQ6IDIwLFxuICogICAgICAgICBcIjpob3ZlclwiOiB7XG4gKiAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCJcbiAqICAgICAgICAgfVxuICogICAgICAgfSxcbiAqICAgICAgIFwiOmFjdGl2ZVwiOiB7XG4gKiAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiXG4gKiAgICAgICB9XG4gKiAgICAgfV0sIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzKTtcbiAqXG4gKiB3aXRoIHRoZSBkZWZhdWx0IGBzZWxlY3RvckhhbmRsZXJzYCB3aWxsIG1ha2UgNSBjYWxscyB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGA6XG4gKlxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBjb2xvcjogXCJyZWRcIiB9LCAuLi4pXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvbzphY3RpdmVcIiwgeyBmb250V2VpZ2h0OiBcImJvbGRcIiB9LCAuLi4pXG4gKiAgICAgLy8gVGhlc2UgMiB3aWxsIGJlIHdyYXBwZWQgaW4gQG1lZGlhIHNjcmVlbiB7fVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBoZWlnaHQ6IDIwIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmhvdmVyXCIsIHsgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCIgfSwgLi4uKVxuICovXG5cbnZhciBnZW5lcmF0ZUNTUyA9IGZ1bmN0aW9uIGdlbmVyYXRlQ1NTKHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBzdHlsZVR5cGVzXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbilcbi8qIDogc3RyaW5nW10gKi9cbntcbiAgdmFyIG1lcmdlZCA9IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICBtZXJnZWQuYWRkU3R5bGVUeXBlKHN0eWxlVHlwZXNbaV0pO1xuICB9XG5cbiAgdmFyIHBsYWluRGVjbGFyYXRpb25zID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuICB2YXIgZ2VuZXJhdGVkU3R5bGVzID0gW107IC8vIFRPRE8oZW1pbHkpOiBiZW5jaG1hcmsgdGhpcyB0byBzZWUgaWYgYSBwbGFpbiBmb3IgbG9vcCB3b3VsZCBiZSBmYXN0ZXIuXG5cbiAgbWVyZ2VkLmZvckVhY2goZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgLy8gRm9yIGVhY2gga2V5LCBzZWUgaWYgb25lIG9mIHRoZSBzZWxlY3RvciBoYW5kbGVycyB3aWxsIGhhbmRsZSB0aGVzZVxuICAgIC8vIHN0eWxlcy5cbiAgICB2YXIgZm91bmRIYW5kbGVyID0gc2VsZWN0b3JIYW5kbGVycy5zb21lKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gaGFuZGxlcihrZXksIHNlbGVjdG9yLCBmdW5jdGlvbiAobmV3U2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlQ1NTKG5ld1NlbGVjdG9yLCBbdmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIC8vIElmIHRoZSBoYW5kbGVyIHJldHVybmVkIHNvbWV0aGluZywgYWRkIGl0IHRvIHRoZSBnZW5lcmF0ZWRcbiAgICAgICAgLy8gQ1NTIGFuZCBzdG9wIGxvb2tpbmcgZm9yIGFub3RoZXIgaGFuZGxlci5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgIGdlbmVyYXRlZFN0eWxlcy5wdXNoLmFwcGx5KGdlbmVyYXRlZFN0eWxlcywgX3RvQ29uc3VtYWJsZUFycmF5KHJlc3VsdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgIGNvbnNvbGUud2FybignV0FSTklORzogU2VsZWN0b3IgaGFuZGxlcnMgc2hvdWxkIHJldHVybiBhbiBhcnJheSBvZiBydWxlcy4nICsgJ1JldHVybmluZyBhIHN0cmluZyBjb250YWluaW5nIG11bHRpcGxlIHJ1bGVzIGlzIGRlcHJlY2F0ZWQuJywgaGFuZGxlcik7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2goXCJAbWVkaWEgYWxsIHtcIi5jb25jYXQocmVzdWx0LCBcIn1cIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7IC8vIElmIG5vbmUgb2YgdGhlIGhhbmRsZXJzIGhhbmRsZWQgaXQsIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBwbGFpblxuICAgIC8vIHN0eWxlIGRlY2xhcmF0aW9ucy5cblxuICAgIGlmICghZm91bmRIYW5kbGVyKSB7XG4gICAgICBwbGFpbkRlY2xhcmF0aW9ucy5zZXQoa2V5LCB2YWwsIHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIHZhciBnZW5lcmF0ZWRSdWxlc2V0ID0gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yLCBwbGFpbkRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycyk7XG5cbiAgaWYgKGdlbmVyYXRlZFJ1bGVzZXQpIHtcbiAgICBnZW5lcmF0ZWRTdHlsZXMudW5zaGlmdChnZW5lcmF0ZWRSdWxlc2V0KTtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZWRTdHlsZXM7XG59O1xuLyoqXG4gKiBIZWxwZXIgbWV0aG9kIG9mIGdlbmVyYXRlQ1NTUnVsZXNldCB0byBmYWNpbGl0YXRlIGN1c3RvbSBoYW5kbGluZyBvZiBjZXJ0YWluXG4gKiBDU1MgcHJvcGVydGllcy4gVXNlZCBmb3IgZS5nLiBmb250IGZhbWlsaWVzLlxuICpcbiAqIFNlZSBnZW5lcmF0ZUNTU1J1bGVzZXQgZm9yIHVzYWdlIGFuZCBkb2N1bWVudGF0aW9uIG9mIHBhcmFtYXRlciB0eXBlcy5cbiAqL1xuXG52YXIgcnVuU3RyaW5nSGFuZGxlcnMgPSBmdW5jdGlvbiBydW5TdHJpbmdIYW5kbGVycyhkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogdm9pZCAqL1xue1xuICBpZiAoIXN0cmluZ0hhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHN0cmluZ0hhbmRsZXJLZXlzID0gT2JqZWN0LmtleXMoc3RyaW5nSGFuZGxlcnMpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nSGFuZGxlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gc3RyaW5nSGFuZGxlcktleXNbaV07XG5cbiAgICBpZiAoZGVjbGFyYXRpb25zLmhhcyhrZXkpKSB7XG4gICAgICAvLyBBIGRlY2xhcmF0aW9uIGV4aXN0cyBmb3IgdGhpcyBwYXJ0aWN1bGFyIHN0cmluZyBoYW5kbGVyLCBzbyB3ZVxuICAgICAgLy8gbmVlZCB0byBsZXQgdGhlIHN0cmluZyBoYW5kbGVyIGludGVycHJldCB0aGUgZGVjbGFyYXRpb24gZmlyc3RcbiAgICAgIC8vIGJlZm9yZSBwcm9jZWVkaW5nLlxuICAgICAgLy9cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiBQYXNzIGluIGEgY2FsbGJhY2sgd2hpY2ggZ2VuZXJhdGVzIENTUywgc2ltaWxhciB0b1xuICAgICAgLy8gaG93IG91ciBzZWxlY3RvciBoYW5kbGVycyB3b3JrLCBpbnN0ZWFkIG9mIHBhc3NpbmcgaW5cbiAgICAgIC8vIGBzZWxlY3RvckhhbmRsZXJzYCBhbmQgaGF2ZSB0aGVtIG1ha2UgY2FsbHMgdG8gYGdlbmVyYXRlQ1NTYFxuICAgICAgLy8gdGhlbXNlbHZlcy4gUmlnaHQgbm93LCB0aGlzIGlzIGltcHJhY3RpY2FsIGJlY2F1c2Ugb3VyIHN0cmluZ1xuICAgICAgLy8gaGFuZGxlcnMgYXJlIHZlcnkgc3BlY2lhbGl6ZWQgYW5kIGRvIGNvbXBsZXggdGhpbmdzLlxuICAgICAgZGVjbGFyYXRpb25zLnNldChrZXksIHN0cmluZ0hhbmRsZXJzW2tleV0oZGVjbGFyYXRpb25zLmdldChrZXkpLCBzZWxlY3RvckhhbmRsZXJzKSwgLy8gUHJlc2VydmUgb3JkZXIgaGVyZSwgc2luY2Ugd2UgYXJlIHJlYWxseSByZXBsYWNpbmcgYW5cbiAgICAgIC8vIHVucHJvY2Vzc2VkIHN0eWxlIHdpdGggYSBwcm9jZXNzZWQgc3R5bGUsIG5vdCBvdmVycmlkaW5nIGFuXG4gICAgICAvLyBlYXJsaWVyIHN0eWxlXG4gICAgICBmYWxzZSk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgdHJhbnNmb3JtUnVsZSA9IGZ1bmN0aW9uIHRyYW5zZm9ybVJ1bGUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCB2YWx1ZVxuLyogOiBzdHJpbmcgKi9cbiwgdHJhbnNmb3JtVmFsdWVcbi8qIDogZnVuY3Rpb24gKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgXCJcIi5jb25jYXQoa2ViYWJpZnlTdHlsZU5hbWUoa2V5KSwgXCI6XCIpLmNvbmNhdCh0cmFuc2Zvcm1WYWx1ZShrZXksIHZhbHVlKSwgXCI7XCIpXG4gICk7XG59O1xuXG52YXIgYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyKGFjYywgdmFsKSB7XG4gIGFjY1t2YWxdID0gdHJ1ZTtcbiAgcmV0dXJuIGFjYztcbn07XG4vKipcbiAqIEdlbmVyYXRlIGEgQ1NTIHJ1bGVzZXQgd2l0aCB0aGUgc2VsZWN0b3IgYW5kIGNvbnRhaW5pbmcgdGhlIGRlY2xhcmF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgZ2l2ZW4gZGVjbGFyYXRpb25zIGRvbid0IGNvbnRhaW4gYW55IHNwZWNpYWxcbiAqIGNoaWxkcmVuIChzdWNoIGFzIG1lZGlhIHF1ZXJpZXMsIHBzZXVkby1zZWxlY3RvcnMsIG9yIGRlc2NlbmRhbnQgc3R5bGVzKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBtZXRob2QgZG9lcyBub3QgZGVhbCB3aXRoIG5lc3RpbmcgdXNlZCBmb3IgZS5nLlxuICogcHN1ZWRvLXNlbGVjdG9ycyBvciBtZWRpYSBxdWVyaWVzLiBUaGF0IHJlc3BvbnNpYmlsaXR5IGlzIGxlZnQgdG8gIHRoZVxuICogYGdlbmVyYXRlQ1NTYCBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IHRoZSBzZWxlY3RvciBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGVzZXRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWNsYXJhdGlvbnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1MgcHJvcGVydHkgbmFtZSB0byBDU1NcbiAqICAgICBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsIGZ1bmN0aW9uPn0gc3RyaW5nSGFuZGxlcnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1NcbiAqICAgICBwcm9wZXJ0eSBuYW1lIHRvIGEgZnVuY3Rpb24gd2hpY2ggd2lsbCBtYXAgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSB2YWx1ZVxuICogICAgIHRoYXQgaXMgb3V0cHV0LlxuICogQHBhcmFtIHtib29sfSB1c2VJbXBvcnRhbnQ6IEEgYm9vbGVhbiBzYXlpbmcgd2hldGhlciB0byBhcHBlbmQgXCIhaW1wb3J0YW50XCJcbiAqICAgICB0byBlYWNoIG9mIHRoZSBDU1MgZGVjbGFyYXRpb25zLlxuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgcmF3IENTUy5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWQgIWltcG9ydGFudDt9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge30sIGZhbHNlKVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogcmVkfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0sIHtjb2xvcjogYyA9PiBjLnRvVXBwZXJDYXNlfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IFJFRH1cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWg6aG92ZXJcIiwgeyBjb2xvcjogXCJyZWRcIiB9KVxuICogICAgLT4gXCIuYmxhaDpob3Zlcntjb2xvcjogcmVkfVwiXG4gKi9cblxuXG52YXIgZ2VuZXJhdGVDU1NSdWxlc2V0ID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIC8vIE11dGF0ZXMgZGVjbGFyYXRpb25zXG4gIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICB2YXIgb3JpZ2luYWxFbGVtZW50cyA9IE9iamVjdC5rZXlzKGRlY2xhcmF0aW9ucy5lbGVtZW50cykucmVkdWNlKGFycmF5VG9PYmplY3RLZXlzUmVkdWNlciwgT2JqZWN0LmNyZWF0ZShudWxsKSk7IC8vIE5PVEUoZW1pbHkpOiBUaGlzIG11dGF0ZXMgaGFuZGxlZERlY2xhcmF0aW9ucy5lbGVtZW50cy5cblxuICB2YXIgcHJlZml4ZWRFbGVtZW50cyA9IHByZWZpeEFsbChkZWNsYXJhdGlvbnMuZWxlbWVudHMpO1xuICB2YXIgZWxlbWVudE5hbWVzID0gT2JqZWN0LmtleXMocHJlZml4ZWRFbGVtZW50cyk7XG5cbiAgaWYgKGVsZW1lbnROYW1lcy5sZW5ndGggIT09IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGgpIHtcbiAgICAvLyBUaGVyZSBhcmUgc29tZSBwcmVmaXhlZCB2YWx1ZXMsIHNvIHdlIG5lZWQgdG8gZmlndXJlIG91dCBob3cgdG8gc29ydFxuICAgIC8vIHRoZW0uXG4gICAgLy9cbiAgICAvLyBMb29wIHRocm91Z2ggcHJlZml4ZWRFbGVtZW50cywgbG9va2luZyBmb3IgYW55dGhpbmcgdGhhdCBpcyBub3QgaW5cbiAgICAvLyBzb3J0T3JkZXIsIHdoaWNoIG1lYW5zIGl0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIFRoaXMgbWVhbnMgdGhhdCB3ZVxuICAgIC8vIG5lZWQgdG8gZmlndXJlIG91dCB3aGVyZSBpdCBzaG91bGQgYXBwZWFyIGluIHRoZSBzb3J0T3JkZXIuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50TmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghb3JpZ2luYWxFbGVtZW50c1tlbGVtZW50TmFtZXNbaV1dKSB7XG4gICAgICAgIC8vIFRoaXMgZWxlbWVudCBpcyBub3QgaW4gdGhlIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgaXMgYSBwcmVmaXhlZFxuICAgICAgICAvLyB2YWx1ZSB0aGF0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIExldCdzIHRyeSB0byBmaWd1cmUgb3V0IHdoZXJlIGl0XG4gICAgICAgIC8vIGdvZXMuXG4gICAgICAgIHZhciBvcmlnaW5hbFN0eWxlID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChlbGVtZW50TmFtZXNbaV1bMF0gPT09ICdXJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBXZWJraXQtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJXZWJraXRUcmFuc2l0aW9uXCIuIExldCdzXG4gICAgICAgICAgLy8gZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bNl0udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg3KTtcbiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50TmFtZXNbaV1bMV0gPT09ICdvJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBNb3otcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNb3pUcmFuc2l0aW9uXCIuIFdlIGNoZWNrXG4gICAgICAgICAgLy8gdGhlIHNlY29uZCBjaGFyYWN0ZXIgdG8gYXZvaWQgY29sbGlkaW5nIHdpdGggTXMtcHJlZml4ZWRcbiAgICAgICAgICAvLyBzdHlsZXMuIExldCdzIGZpbmQgaXRzIG9yaWdpbmFsIHN0eWxlJ3Mgc29ydCBvcmRlci5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzNdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoNCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ3MnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1zLXByZWZpeGVkIHN0eWxlLCBsaWtlIFwiTXNUcmFuc2l0aW9uXCIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVsyXS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9yaWdpbmFsU3R5bGUgJiYgb3JpZ2luYWxFbGVtZW50c1tvcmlnaW5hbFN0eWxlXSkge1xuICAgICAgICAgIHZhciBvcmlnaW5hbEluZGV4ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmluZGV4T2Yob3JpZ2luYWxTdHlsZSk7XG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnNwbGljZShvcmlnaW5hbEluZGV4LCAwLCBlbGVtZW50TmFtZXNbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFdlIGRvbid0IGtub3cgd2hhdCB0aGUgb3JpZ2luYWwgc3R5bGUgd2FzLCBzbyBzb3J0IGl0IHRvXG4gICAgICAgICAgLy8gdG9wLiBUaGlzIGNhbiBoYXBwZW4gZm9yIHN0eWxlcyB0aGF0IGFyZSBhZGRlZCB0aGF0IGRvbid0XG4gICAgICAgICAgLy8gaGF2ZSB0aGUgc2FtZSBiYXNlIG5hbWUgYXMgdGhlIG9yaWdpbmFsIHN0eWxlLlxuICAgICAgICAgIGRlY2xhcmF0aW9ucy5rZXlPcmRlci51bnNoaWZ0KGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgdHJhbnNmb3JtVmFsdWUgPSB1c2VJbXBvcnRhbnQgPT09IGZhbHNlID8gc3RyaW5naWZ5VmFsdWUgOiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZTtcbiAgdmFyIHJ1bGVzID0gW107XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGg7IF9pKyspIHtcbiAgICB2YXIga2V5ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyW19pXTtcbiAgICB2YXIgdmFsdWUgPSBwcmVmaXhlZEVsZW1lbnRzW2tleV07XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIC8vIGlubGluZS1zdHlsZS1wcmVmaXhlciByZXR1cm5zIGFuIGFycmF5IHdoZW4gdGhlcmUgc2hvdWxkIGJlXG4gICAgICAvLyBtdWx0aXBsZSBydWxlcyBmb3IgdGhlIHNhbWUga2V5LiBIZXJlIHdlIGZsYXR0ZW4gdG8gbXVsdGlwbGVcbiAgICAgIC8vIHBhaXJzIHdpdGggdGhlIHNhbWUga2V5LlxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZVtqXSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcnVsZXMucHVzaCh0cmFuc2Zvcm1SdWxlKGtleSwgdmFsdWUsIHRyYW5zZm9ybVZhbHVlKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHJ1bGVzLmxlbmd0aCkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChydWxlcy5qb2luKFwiXCIpLCBcIn1cIik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiwgU2hlZXREZWZpbml0aW9ucyB9IGZyb20gJy4vaW5kZXguanMnO1xuaW1wb3J0IHR5cGUgeyBNYXliZVNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuKi9cbi8vIFRoZSBjdXJyZW50IDxzdHlsZT4gdGFnIHdlIGFyZSBpbnNlcnRpbmcgaW50bywgb3IgbnVsbCBpZiB3ZSBoYXZlbid0XG4vLyBpbnNlcnRlZCBhbnl0aGluZyB5ZXQuIFdlIGNvdWxkIGZpbmQgdGhpcyBlYWNoIHRpbWUgdXNpbmdcbi8vIGBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVcIl0pYCwgYnV0IGhvbGRpbmcgb250byBpdCBpc1xuLy8gZmFzdGVyLlxuXG52YXIgc3R5bGVUYWdcbi8qIDogP0hUTUxTdHlsZUVsZW1lbnQgKi9cbj0gbnVsbDsgLy8gSW5qZWN0IGEgc2V0IG9mIHJ1bGVzIGludG8gYSA8c3R5bGU+IHRhZyBpbiB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuIFRoaXNcbi8vIHdpbGwgYXV0b21hdGljYWxseSBjcmVhdGUgYSBzdHlsZSB0YWcgYW5kIHRoZW4gY29udGludWUgdG8gdXNlIGl0IGZvclxuLy8gbXVsdGlwbGUgaW5qZWN0aW9ucy4gSXQgd2lsbCBhbHNvIHVzZSBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgXG4vLyB0YWcgb24gaXQgaWYgdGhhdCBleGlzdHMgaW4gdGhlIERPTS4gVGhpcyBjb3VsZCBiZSB1c2VkIGZvciBlLmcuIHJldXNpbmcgdGhlXG4vLyBzYW1lIHN0eWxlIHRhZyB0aGF0IHNlcnZlci1zaWRlIHJlbmRlcmluZyBpbnNlcnRzLlxuXG52YXIgaW5qZWN0U3R5bGVUYWcgPSBmdW5jdGlvbiBpbmplY3RTdHlsZVRhZyhjc3NSdWxlc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgLy8gVHJ5IHRvIGZpbmQgYSBzdHlsZSB0YWcgd2l0aCB0aGUgYGRhdGEtYXBocm9kaXRlYCBhdHRyaWJ1dGUgZmlyc3QuXG4gICAgc3R5bGVUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVdXCIpXG4gICAgLyogOiBhbnkgKi9cbiAgICA7IC8vIElmIHRoYXQgZG9lc24ndCB3b3JrLCBnZW5lcmF0ZSBhIG5ldyBzdHlsZSB0YWcuXG5cbiAgICBpZiAoc3R5bGVUYWcgPT0gbnVsbCkge1xuICAgICAgLy8gVGFrZW4gZnJvbVxuICAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81MjQ2OTYvaG93LXRvLWNyZWF0ZS1hLXN0eWxlLXRhZy13aXRoLWphdmFzY3JpcHRcbiAgICAgIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdO1xuICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgc3R5bGVUYWcudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFwaHJvZGl0ZVwiLCBcIlwiKTtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpO1xuICAgIH1cbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgc2hlZXQgPSBzdHlsZVRhZy5zdHlsZVNoZWV0IHx8IHN0eWxlVGFnLnNoZWV0XG4gIC8qIDogYW55ICovXG4gIDtcblxuICBpZiAoc2hlZXQuaW5zZXJ0UnVsZSkge1xuICAgIHZhciBudW1SdWxlcyA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcbiAgICBjc3NSdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIG51bVJ1bGVzKTtcbiAgICAgICAgbnVtUnVsZXMgKz0gMTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsvLyBUaGUgc2VsZWN0b3IgZm9yIHRoaXMgcnVsZSB3YXNuJ3QgY29tcGF0aWJsZSB3aXRoIHRoZSBicm93c2VyXG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gKHN0eWxlVGFnLmlubmVyVGV4dCB8fCAnJykgKyBjc3NSdWxlcy5qb2luKCcnKTtcbiAgfVxufTsgLy8gQ3VzdG9tIGhhbmRsZXJzIGZvciBzdHJpbmdpZnlpbmcgQ1NTIHZhbHVlcyB0aGF0IGhhdmUgc2lkZSBlZmZlY3RzXG4vLyAoc3VjaCBhcyBmb250RmFtaWx5LCB3aGljaCBjYW4gY2F1c2UgQGZvbnQtZmFjZSBydWxlcyB0byBiZSBpbmplY3RlZClcblxuXG52YXIgc3RyaW5nSGFuZGxlcnMgPSB7XG4gIC8vIFdpdGggZm9udEZhbWlseSB3ZSBsb29rIGZvciBvYmplY3RzIHRoYXQgYXJlIHBhc3NlZCBpbiBhbmQgaW50ZXJwcmV0XG4gIC8vIHRoZW0gYXMgQGZvbnQtZmFjZSBydWxlcyB0aGF0IHdlIG5lZWQgdG8gaW5qZWN0LiBUaGUgdmFsdWUgb2YgZm9udEZhbWlseVxuICAvLyBjYW4gZWl0aGVyIGJlIGEgc3RyaW5nIChhcyBub3JtYWwpLCBhbiBvYmplY3QgKGEgc2luZ2xlIGZvbnQgZmFjZSksIG9yXG4gIC8vIGFuIGFycmF5IG9mIG9iamVjdHMgYW5kIHN0cmluZ3MuXG4gIGZvbnRGYW1pbHk6IGZ1bmN0aW9uIGZvbnRGYW1pbHkodmFsKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgdmFyIG5hbWVNYXAgPSB7fTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIG5hbWVNYXBbZm9udEZhbWlseSh2KV0gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMobmFtZU1hcCkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGluamVjdFN0eWxlT25jZSh2YWwuc3JjLCBcIkBmb250LWZhY2VcIiwgW3ZhbF0sIGZhbHNlKTtcbiAgICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodmFsLmZvbnRGYW1pbHksIFwiXFxcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH0sXG4gIC8vIFdpdGggYW5pbWF0aW9uTmFtZSB3ZSBsb29rIGZvciBhbiBvYmplY3QgdGhhdCBjb250YWlucyBrZXlmcmFtZXMgYW5kXG4gIC8vIGluamVjdCB0aGVtIGFzIGFuIGBAa2V5ZnJhbWVzYCBibG9jaywgcmV0dXJuaW5nIGEgdW5pcXVlbHkgZ2VuZXJhdGVkXG4gIC8vIG5hbWUuIFRoZSBrZXlmcmFtZXMgb2JqZWN0IHNob3VsZCBsb29rIGxpa2VcbiAgLy8gIGFuaW1hdGlvbk5hbWU6IHtcbiAgLy8gICAgZnJvbToge1xuICAvLyAgICAgIGxlZnQ6IDAsXG4gIC8vICAgICAgdG9wOiAwLFxuICAvLyAgICB9LFxuICAvLyAgICAnNTAlJzoge1xuICAvLyAgICAgIGxlZnQ6IDE1LFxuICAvLyAgICAgIHRvcDogNSxcbiAgLy8gICAgfSxcbiAgLy8gICAgdG86IHtcbiAgLy8gICAgICBsZWZ0OiAyMCxcbiAgLy8gICAgICB0b3A6IDIwLFxuICAvLyAgICB9XG4gIC8vICB9XG4gIC8vIFRPRE8oZW1pbHkpOiBgc3RyaW5nSGFuZGxlcnNgIGRvZXNuJ3QgbGV0IHVzIHJlbmFtZSB0aGUga2V5LCBzbyBJIGhhdmVcbiAgLy8gdG8gdXNlIGBhbmltYXRpb25OYW1lYCBoZXJlLiBJbXByb3ZlIHRoYXQgc28gd2UgY2FuIGNhbGwgdGhpc1xuICAvLyBgYW5pbWF0aW9uYCBpbnN0ZWFkIG9mIGBhbmltYXRpb25OYW1lYC5cbiAgYW5pbWF0aW9uTmFtZTogZnVuY3Rpb24gYW5pbWF0aW9uTmFtZSh2YWwsIHNlbGVjdG9ySGFuZGxlcnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXR1cm4gdmFsLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTmFtZSh2LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgIH0gZWxzZSBpZiAoX3R5cGVvZih2YWwpID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAvLyBHZW5lcmF0ZSBhIHVuaXF1ZSBuYW1lIGJhc2VkIG9uIHRoZSBoYXNoIG9mIHRoZSBvYmplY3QuIFdlIGNhbid0XG4gICAgICAvLyBqdXN0IHVzZSB0aGUgaGFzaCBiZWNhdXNlIHRoZSBuYW1lIGNhbid0IHN0YXJ0IHdpdGggYSBudW1iZXIuXG4gICAgICAvLyBUT0RPKGVtaWx5KTogdGhpcyBwcm9iYWJseSBtYWtlcyBkZWJ1Z2dpbmcgaGFyZCwgYWxsb3cgYSBjdXN0b21cbiAgICAgIC8vIG5hbWU/XG4gICAgICB2YXIgbmFtZSA9IFwia2V5ZnJhbWVfXCIuY29uY2F0KGhhc2hPYmplY3QodmFsKSk7IC8vIFNpbmNlIGtleWZyYW1lcyBuZWVkIDMgbGF5ZXJzIG9mIG5lc3RpbmcsIHdlIHVzZSBgZ2VuZXJhdGVDU1NgIHRvXG4gICAgICAvLyBidWlsZCB0aGUgaW5uZXIgbGF5ZXJzIGFuZCB3cmFwIGl0IGluIGBAa2V5ZnJhbWVzYCBvdXJzZWx2ZXMuXG5cbiAgICAgIHZhciBmaW5hbFZhbCA9IFwiQGtleWZyYW1lcyBcIi5jb25jYXQobmFtZSwgXCJ7XCIpOyAvLyBUT0RPIHNlZSBpZiB3ZSBjYW4gZmluZCBhIHdheSB3aGVyZSBjaGVja2luZyBmb3IgT3JkZXJlZEVsZW1lbnRzXG4gICAgICAvLyBoZXJlIGlzIG5vdCBuZWNlc3NhcnkuIEFsdGVybmF0aXZlbHksIHBlcmhhcHMgd2Ugc2hvdWxkIGhhdmUgYVxuICAgICAgLy8gdXRpbGl0eSBtZXRob2QgdGhhdCBjYW4gaXRlcmF0ZSBvdmVyIGVpdGhlciBhIHBsYWluIG9iamVjdCwgYW5cbiAgICAgIC8vIGluc3RhbmNlIG9mIE9yZGVyZWRFbGVtZW50cywgb3IgYSBNYXAsIGFuZCB0aGVuIHVzZSB0aGF0IGhlcmUgYW5kXG4gICAgICAvLyBlbHNld2hlcmUuXG5cbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHZhbFZhbCwgdmFsS2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1ModmFsS2V5LCBbdmFsVmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3Qua2V5cyh2YWwpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIGZpbmFsVmFsICs9IGdlbmVyYXRlQ1NTKGtleSwgW3ZhbFtrZXldXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGZpbmFsVmFsICs9ICd9JztcbiAgICAgIGluamVjdEdlbmVyYXRlZENTU09uY2UobmFtZSwgW2ZpbmFsVmFsXSk7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn07IC8vIFRoaXMgaXMgYSBtYXAgZnJvbSBBcGhyb2RpdGUncyBnZW5lcmF0ZWQgY2xhc3MgbmFtZXMgdG8gYHRydWVgIChhY3RpbmcgYXMgYVxuLy8gc2V0IG9mIGNsYXNzIG5hbWVzKVxuXG52YXIgYWxyZWFkeUluamVjdGVkID0ge307IC8vIFRoaXMgaXMgdGhlIGJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cblxudmFyIGluamVjdGlvbkJ1ZmZlclxuLyogOiBzdHJpbmdbXSAqL1xuPSBbXTsgLy8gQSBmbGFnIHRvIHRlbGwgaWYgd2UgYXJlIGFscmVhZHkgYnVmZmVyaW5nIHN0eWxlcy4gVGhpcyBjb3VsZCBoYXBwZW4gZWl0aGVyXG4vLyBiZWNhdXNlIHdlIHNjaGVkdWxlZCBhIGZsdXNoIGNhbGwgYWxyZWFkeSwgc28gbmV3bHkgYWRkZWQgc3R5bGVzIHdpbGxcbi8vIGFscmVhZHkgYmUgZmx1c2hlZCwgb3IgYmVjYXVzZSB3ZSBhcmUgc3RhdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlci5cblxudmFyIGlzQnVmZmVyaW5nID0gZmFsc2U7XG5cbnZhciBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlID0gZnVuY3Rpb24gaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShrZXksIGdlbmVyYXRlZENTUykge1xuICB2YXIgX2luamVjdGlvbkJ1ZmZlcjtcblxuICBpZiAoYWxyZWFkeUluamVjdGVkW2tleV0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWlzQnVmZmVyaW5nKSB7XG4gICAgLy8gV2Ugc2hvdWxkIG5ldmVyIGJlIGF1dG9tYXRpY2FsbHkgYnVmZmVyaW5nIG9uIHRoZSBzZXJ2ZXIgKG9yIGFueVxuICAgIC8vIHBsYWNlIHdpdGhvdXQgYSBkb2N1bWVudCksIHNvIGd1YXJkIGFnYWluc3QgdGhhdC5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYXV0b21hdGljYWxseSBidWZmZXIgd2l0aG91dCBhIGRvY3VtZW50XCIpO1xuICAgIH0gLy8gSWYgd2UncmUgbm90IGFscmVhZHkgYnVmZmVyaW5nLCBzY2hlZHVsZSBhIGNhbGwgdG8gZmx1c2ggdGhlXG4gICAgLy8gY3VycmVudCBzdHlsZXMuXG5cblxuICAgIGlzQnVmZmVyaW5nID0gdHJ1ZTtcbiAgICBhc2FwKGZsdXNoVG9TdHlsZVRhZyk7XG4gIH1cblxuICAoX2luamVjdGlvbkJ1ZmZlciA9IGluamVjdGlvbkJ1ZmZlcikucHVzaC5hcHBseShfaW5qZWN0aW9uQnVmZmVyLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2VuZXJhdGVkQ1NTKSk7XG5cbiAgYWxyZWFkeUluamVjdGVkW2tleV0gPSB0cnVlO1xufTtcblxudmFyIGluamVjdFN0eWxlT25jZSA9IGZ1bmN0aW9uIGluamVjdFN0eWxlT25jZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWZpbml0aW9uc1xuLyogOiBTaGVldERlZmluaXRpb25bXSAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKSB7XG4gIHZhciBzZWxlY3RvckhhbmRsZXJzXG4gIC8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiAgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IFtdO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZUNTUyhzZWxlY3RvciwgZGVmaW5pdGlvbnMsIHNlbGVjdG9ySGFuZGxlcnMsIHN0cmluZ0hhbmRsZXJzLCB1c2VJbXBvcnRhbnQpO1xuICBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkKTtcbn07XG52YXIgcmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIGFscmVhZHlJbmplY3RlZCA9IHt9O1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICBzdHlsZVRhZyA9IG51bGw7XG59O1xudmFyIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IGZ1bmN0aW9uIHJlc2V0SW5qZWN0ZWRTdHlsZShrZXlcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgZGVsZXRlIGFscmVhZHlJbmplY3RlZFtrZXldO1xufTtcbnZhciBnZXRCdWZmZXJlZFN0eWxlcyA9IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzKCkge1xuICByZXR1cm4gaW5qZWN0aW9uQnVmZmVyO1xufTtcbnZhciBzdGFydEJ1ZmZlcmluZyA9IGZ1bmN0aW9uIHN0YXJ0QnVmZmVyaW5nKCkge1xuICBpZiAoaXNCdWZmZXJpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYnVmZmVyIHdoaWxlIGFscmVhZHkgYnVmZmVyaW5nXCIpO1xuICB9XG5cbiAgaXNCdWZmZXJpbmcgPSB0cnVlO1xufTtcblxudmFyIGZsdXNoVG9BcnJheSA9IGZ1bmN0aW9uIGZsdXNoVG9BcnJheSgpIHtcbiAgaXNCdWZmZXJpbmcgPSBmYWxzZTtcbiAgdmFyIHJldCA9IGluamVjdGlvbkJ1ZmZlcjtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIHJldHVybiByZXQ7XG59O1xuXG52YXIgZmx1c2hUb1N0cmluZyA9IGZ1bmN0aW9uIGZsdXNoVG9TdHJpbmcoKSB7XG4gIHJldHVybiBmbHVzaFRvQXJyYXkoKS5qb2luKCcnKTtcbn07XG52YXIgZmx1c2hUb1N0eWxlVGFnID0gZnVuY3Rpb24gZmx1c2hUb1N0eWxlVGFnKCkge1xuICB2YXIgY3NzUnVsZXMgPSBmbHVzaFRvQXJyYXkoKTtcblxuICBpZiAoY3NzUnVsZXMubGVuZ3RoID4gMCkge1xuICAgIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzKTtcbiAgfVxufTtcbnZhciBnZXRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICByZXR1cm4gT2JqZWN0LmtleXMoYWxyZWFkeUluamVjdGVkKTtcbn07XG52YXIgYWRkUmVuZGVyZWRDbGFzc05hbWVzID0gZnVuY3Rpb24gYWRkUmVuZGVyZWRDbGFzc05hbWVzKGNsYXNzTmFtZXNcbi8qIDogc3RyaW5nW10gKi9cbikge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGFscmVhZHlJbmplY3RlZFtjbGFzc05hbWVdID0gdHJ1ZTtcbiAgfSk7XG59O1xuXG52YXIgaXNWYWxpZFN0eWxlRGVmaW5pdGlvbiA9IGZ1bmN0aW9uIGlzVmFsaWRTdHlsZURlZmluaXRpb24oZGVmXG4vKiA6IE9iamVjdCAqL1xuKSB7XG4gIHJldHVybiBcIl9kZWZpbml0aW9uXCIgaW4gZGVmICYmIFwiX25hbWVcIiBpbiBkZWYgJiYgXCJfbGVuXCIgaW4gZGVmO1xufTtcblxudmFyIHByb2Nlc3NTdHlsZURlZmluaXRpb25zID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9uc1xuLyogOiBhbnlbXSAqL1xuLCBjbGFzc05hbWVCaXRzXG4vKiA6IHN0cmluZ1tdICovXG4sIGRlZmluaXRpb25CaXRzXG4vKiA6IE9iamVjdFtdICovXG4sIGxlbmd0aFxuLyogOiBudW1iZXIgKi9cbilcbi8qIDogbnVtYmVyICovXG57XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVEZWZpbml0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIC8vIEZpbHRlciBvdXQgZmFsc3kgdmFsdWVzIGZyb20gdGhlIGlucHV0LCB0byBhbGxvdyBmb3JcbiAgICAvLyBgY3NzKGEsIHRlc3QgJiYgYylgXG4gICAgaWYgKHN0eWxlRGVmaW5pdGlvbnNbaV0pIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIC8vIFdlJ3ZlIGVuY291bnRlcmVkIGFuIGFycmF5LCBzbyBsZXQncyByZWN1cnNlXG4gICAgICAgIGxlbmd0aCArPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zW2ldLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihzdHlsZURlZmluaXRpb25zW2ldKSkge1xuICAgICAgICBjbGFzc05hbWVCaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fbmFtZSk7XG4gICAgICAgIGRlZmluaXRpb25CaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fZGVmaW5pdGlvbik7XG4gICAgICAgIGxlbmd0aCArPSBzdHlsZURlZmluaXRpb25zW2ldLl9sZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFN0eWxlIERlZmluaXRpb246IFN0eWxlcyBzaG91bGQgYmUgZGVmaW5lZCB1c2luZyB0aGUgU3R5bGVTaGVldC5jcmVhdGUgbWV0aG9kLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbGVuZ3RoO1xufTtcbi8qKlxuICogSW5qZWN0IHN0eWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHBhc3NlZCBzdHlsZSBkZWZpbml0aW9uIG9iamVjdHMsIGFuZCByZXR1cm5cbiAqIGFuIGFzc29jaWF0ZWQgQ1NTIGNsYXNzIG5hbWUuXG4gKlxuICogQHBhcmFtIHtib29sZWFufSB1c2VJbXBvcnRhbnQgSWYgdHJ1ZSwgd2lsbCBhcHBlbmQgIWltcG9ydGFudCB0byBnZW5lcmF0ZWRcbiAqICAgICBDU1Mgb3V0cHV0LiBlLmcuIHtjb2xvcjogcmVkfSAtPiBcImNvbG9yOiByZWQgIWltcG9ydGFudFwiLlxuICogQHBhcmFtIHsoT2JqZWN0fE9iamVjdFtdKVtdfSBzdHlsZURlZmluaXRpb25zIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgb3JcbiAqICAgICBhcmJpdHJhcmlseSBuZXN0ZWQgYXJyYXlzIG9mIHRoZW0sIGFzIHJldHVybmVkIGFzIHByb3BlcnRpZXMgb2YgdGhlXG4gKiAgICAgcmV0dXJuIHZhbHVlIG9mIFN0eWxlU2hlZXQuY3JlYXRlKCkuXG4gKi9cblxuXG52YXIgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lID0gZnVuY3Rpb24gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHN0eWxlRGVmaW5pdGlvbnNcbi8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuLCBzZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICB2YXIgY2xhc3NOYW1lQml0cyA9IFtdO1xuICB2YXIgZGVmaW5pdGlvbkJpdHMgPSBbXTsgLy8gTXV0YXRlcyBjbGFzc05hbWVCaXRzIGFuZCBkZWZpbml0aW9uQml0cyBhbmQgcmV0dXJucyBhIGxlbmd0aCB3aGljaCB3ZVxuICAvLyB3aWxsIGFwcGVuZCB0byB0aGUgaGFzaCB0byBkZWNyZWFzZSB0aGUgY2hhbmNlIG9mIGhhc2ggY29sbGlzaW9ucy5cblxuICB2YXIgbGVuZ3RoID0gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9ucywgY2xhc3NOYW1lQml0cywgZGVmaW5pdGlvbkJpdHMsIDApOyAvLyBCcmVhayBpZiB0aGVyZSBhcmVuJ3QgYW55IHZhbGlkIHN0eWxlcy5cblxuICBpZiAoY2xhc3NOYW1lQml0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIHZhciBjbGFzc05hbWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMSA/IFwiX1wiLmNvbmNhdChjbGFzc05hbWVCaXRzWzBdKSA6IFwiX1wiLmNvbmNhdChoYXNoU3RyaW5nKGNsYXNzTmFtZUJpdHMuam9pbigpKSkuY29uY2F0KChsZW5ndGggJSAzNikudG9TdHJpbmcoMzYpKTtcbiAgfSBlbHNlIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmpvaW4oXCItb19PLVwiKTtcbiAgfVxuXG4gIGluamVjdFN0eWxlT25jZShjbGFzc05hbWUsIFwiLlwiLmNvbmNhdChjbGFzc05hbWUpLCBkZWZpbml0aW9uQml0cywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuZXhwb3J0IHR5cGUgU2hlZXREZWZpbml0aW9uID0geyBbaWQ6c3RyaW5nXTogYW55IH07XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb25zID0gU2hlZXREZWZpbml0aW9uIHwgU2hlZXREZWZpbml0aW9uW107XG50eXBlIFJlbmRlckZ1bmN0aW9uID0gKCkgPT4gc3RyaW5nO1xudHlwZSBFeHRlbnNpb24gPSB7XG4gICAgc2VsZWN0b3JIYW5kbGVyOiBTZWxlY3RvckhhbmRsZXJcbn07XG5leHBvcnQgdHlwZSBNYXliZVNoZWV0RGVmaW5pdGlvbiA9IFNoZWV0RGVmaW5pdGlvbiB8IGZhbHNlIHwgbnVsbCB8IHZvaWRcbiovXG5cbnZhciB1bm1pbmlmaWVkSGFzaEZuID0gZnVuY3Rpb24gdW5taW5pZmllZEhhc2hGbihzdHJcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gXCJcIi5jb25jYXQoa2V5LCBcIl9cIikuY29uY2F0KGhhc2hTdHJpbmcoc3RyKSk7XG59OyAvLyBTdHlsZVNoZWV0LmNyZWF0ZSBpcyBpbiBhIGhvdCBwYXRoIHNvIHdlIHdhbnQgdG8ga2VlcCBhcyBtdWNoIGxvZ2ljIG91dCBvZiBpdFxuLy8gYXMgcG9zc2libGUuIFNvLCB3ZSBmaWd1cmUgb3V0IHdoaWNoIGhhc2ggZnVuY3Rpb24gdG8gdXNlIG9uY2UsIGFuZCBvbmx5XG4vLyBzd2l0Y2ggaXQgb3V0IHZpYSBtaW5pZnkoKSBhcyBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyBpcyBpbiBhbiBleHBvcnRlZCBmdW5jdGlvbiB0byBtYWtlIGl0IGVhc2llciB0byB0ZXN0LlxuXG5cbnZhciBpbml0aWFsSGFzaEZuID0gZnVuY3Rpb24gaW5pdGlhbEhhc2hGbigpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBoYXNoU3RyaW5nIDogdW5taW5pZmllZEhhc2hGbjtcbn07XG52YXIgaGFzaEZuID0gaW5pdGlhbEhhc2hGbigpO1xudmFyIFN0eWxlU2hlZXQgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHNoZWV0RGVmaW5pdGlvblxuICAvKiA6IFNoZWV0RGVmaW5pdGlvbiAqL1xuICApXG4gIC8qIDogT2JqZWN0ICovXG4gIHtcbiAgICB2YXIgbWFwcGVkU2hlZXREZWZpbml0aW9uID0ge307XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzaGVldERlZmluaXRpb24pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgIHZhciB2YWwgPSBzaGVldERlZmluaXRpb25ba2V5XTtcbiAgICAgIHZhciBzdHJpbmdWYWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICAgICAgbWFwcGVkU2hlZXREZWZpbml0aW9uW2tleV0gPSB7XG4gICAgICAgIF9sZW46IHN0cmluZ1ZhbC5sZW5ndGgsXG4gICAgICAgIF9uYW1lOiBoYXNoRm4oc3RyaW5nVmFsLCBrZXkpLFxuICAgICAgICBfZGVmaW5pdGlvbjogdmFsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBtYXBwZWRTaGVldERlZmluaXRpb247XG4gIH0sXG4gIHJlaHlkcmF0ZTogZnVuY3Rpb24gcmVoeWRyYXRlKCkge1xuICAgIHZhciByZW5kZXJlZENsYXNzTmFtZXNcbiAgICAvKiA6IHN0cmluZ1tdICovXG4gICAgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgIGFkZFJlbmRlcmVkQ2xhc3NOYW1lcyhyZW5kZXJlZENsYXNzTmFtZXMpO1xuICB9XG59O1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIHVzaW5nIEFwaHJvZGl0ZSBzZXJ2ZXItc2lkZS5cbiAqXG4gKiBUaGlzIGNhbiBiZSBtaW5pZmllZCBvdXQgaW4gY2xpZW50LW9ubHkgYnVuZGxlcyBieSByZXBsYWNpbmcgYHR5cGVvZiB3aW5kb3dgXG4gKiB3aXRoIGBcIm9iamVjdFwiYCwgZS5nLiB2aWEgV2VicGFjaydzIERlZmluZVBsdWdpbjpcbiAqXG4gKiAgIG5ldyB3ZWJwYWNrLkRlZmluZVBsdWdpbih7XG4gKiAgICAgXCJ0eXBlb2Ygd2luZG93XCI6IEpTT04uc3RyaW5naWZ5KFwib2JqZWN0XCIpXG4gKiAgIH0pXG4gKi9cblxudmFyIFN0eWxlU2hlZXRTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IG51bGwgOiB7XG4gIHJlbmRlclN0YXRpYzogZnVuY3Rpb24gcmVuZGVyU3RhdGljKHJlbmRlckZ1bmNcbiAgLyogOiBSZW5kZXJGdW5jdGlvbiAqL1xuICApIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gICAgdmFyIGh0bWwgPSByZW5kZXJGdW5jKCk7XG4gICAgdmFyIGNzc0NvbnRlbnQgPSBmbHVzaFRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGh0bWw6IGh0bWwsXG4gICAgICBjc3M6IHtcbiAgICAgICAgY29udGVudDogY3NzQ29udGVudCxcbiAgICAgICAgcmVuZGVyZWRDbGFzc05hbWVzOiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIGluIHRlc3RzLlxuICpcbiAqIE5vdCBtZWFudCB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gbnVsbCA6IHtcbiAgLyoqXG4gICogUHJldmVudCBzdHlsZXMgZnJvbSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBET00uXG4gICpcbiAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBzaXR1YXRpb25zIHdoZXJlIHlvdSdkIGxpa2UgdG8gdGVzdCByZW5kZXJpbmcgVUlcbiAgKiBjb21wb25lbnRzIHdoaWNoIHVzZSBBcGhyb2RpdGUgd2l0aG91dCBhbnkgb2YgdGhlIHNpZGUtZWZmZWN0cyBvZlxuICAqIEFwaHJvZGl0ZSBoYXBwZW5pbmcuIFBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHRlc3RpbmcgdGhlIG91dHB1dCBvZlxuICAqIGNvbXBvbmVudHMgd2hlbiB5b3UgaGF2ZSBubyBET00sIGUuZy4gdGVzdGluZyBpbiBOb2RlIHdpdGhvdXQgYSBmYWtlIERPTS5cbiAgKlxuICAqIFNob3VsZCBiZSBwYWlyZWQgd2l0aCBhIHN1YnNlcXVlbnQgY2FsbCB0b1xuICAqIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24uXG4gICovXG4gIHN1cHByZXNzU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIHN1cHByZXNzU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgICBzdGFydEJ1ZmZlcmluZygpO1xuICB9LFxuXG4gIC8qKlxuICAqIE9wcG9zaXRlIG1ldGhvZCBvZiBwcmV2ZW50U3R5bGVJbmplY3QuXG4gICovXG4gIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgfSxcblxuICAvKipcbiAgKiBSZXR1cm5zIGEgc3RyaW5nIG9mIGJ1ZmZlcmVkIHN0eWxlcyB3aGljaCBoYXZlIG5vdCBiZWVuIGZsdXNoZWRcbiAgKlxuICAqIEByZXR1cm5zIHtzdHJpbmd9ICBCdWZmZXIgb2Ygc3R5bGVzIHdoaWNoIGhhdmUgbm90IHlldCBiZWVuIGZsdXNoZWQuXG4gICovXG4gIGdldEJ1ZmZlcmVkU3R5bGVzOiBmdW5jdGlvbiBnZXRCdWZmZXJlZFN0eWxlcyQxKCkge1xuICAgIHJldHVybiBnZXRCdWZmZXJlZFN0eWxlcygpO1xuICB9XG59O1xuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgQXBocm9kaXRlIEFQSSBleHBvcnRzLCB3aXRoIGdpdmVuIGBzZWxlY3RvckhhbmRsZXJzYCBhbmRcbiAqIGB1c2VJbXBvcnRhbnRgIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnM7XG4gIHJldHVybiB7XG4gICAgU3R5bGVTaGVldDogX29iamVjdFNwcmVhZCh7fSwgU3R5bGVTaGVldCwge1xuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIGEgdmVyc2lvbiBvZiB0aGUgZXhwb3J0cyBvZiBBcGhyb2RpdGUgKGkuZS4gYW4gb2JqZWN0XG4gICAgICAgKiB3aXRoIGBjc3NgIGFuZCBgU3R5bGVTaGVldGAgcHJvcGVydGllcykgd2hpY2ggaGF2ZSBzb21lXG4gICAgICAgKiBleHRlbnNpb25zIGluY2x1ZGVkLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGV4dGVuc2lvbnM6IEFuIGFycmF5IG9mIGV4dGVuc2lvbnMgdG9cbiAgICAgICAqICAgICBhZGQgdG8gdGhpcyBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuIEVhY2ggb2JqZWN0IHNob3VsZCBoYXZlIGFcbiAgICAgICAqICAgICBzaW5nbGUgcHJvcGVydHkgb24gaXQsIGRlZmluaW5nIHdoaWNoIGtpbmQgb2YgZXh0ZW5zaW9uIHRvXG4gICAgICAgKiAgICAgYWRkLlxuICAgICAgICogQHBhcmFtIHtTZWxlY3RvckhhbmRsZXJ9IFtleHRlbnNpb25zW10uc2VsZWN0b3JIYW5kbGVyXTogQVxuICAgICAgICogICAgIHNlbGVjdG9yIGhhbmRsZXIgZXh0ZW5zaW9uLiBTZWUgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYCBpblxuICAgICAgICogICAgIGdlbmVyYXRlLmpzLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBleHBvcnRzIG9mIHRoZSBuZXdcbiAgICAgICAqICAgICBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuXG4gICAgICAgKi9cbiAgICAgIGV4dGVuZDogZnVuY3Rpb24gZXh0ZW5kKGV4dGVuc2lvbnNcbiAgICAgIC8qIDogRXh0ZW5zaW9uW10gKi9cbiAgICAgICkge1xuICAgICAgICB2YXIgZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyA9IGV4dGVuc2lvbnMgLy8gUHVsbCBvdXQgZXh0ZW5zaW9ucyB3aXRoIGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5XG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGV4dGVuc2lvbikge1xuICAgICAgICAgIHJldHVybiBleHRlbnNpb24uc2VsZWN0b3JIYW5kbGVyO1xuICAgICAgICB9KSAvLyBSZW1vdmUgbnVsbHMgKGkuZS4gZXh0ZW5zaW9ucyB3aXRob3V0IGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5KS5cbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycy5jb25jYXQoZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycykpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIFN0eWxlU2hlZXRTZXJ2ZXI6IFN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlsczogU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBtaW5pZnk6IGZ1bmN0aW9uIG1pbmlmeShzaG91bGRNaW5pZnlcbiAgICAvKiA6IGJvb2xlYW4gKi9cbiAgICApIHtcbiAgICAgIGhhc2hGbiA9IHNob3VsZE1pbmlmeSA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xuICAgIH0sXG4gICAgY3NzOiBmdW5jdGlvbiBjc3MoKVxuICAgIC8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuICAgIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHlsZURlZmluaXRpb25zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBzdHlsZURlZmluaXRpb25zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudCwgc3R5bGVEZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycyk7XG4gICAgfSxcbiAgICBmbHVzaFRvU3R5bGVUYWc6IGZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWU6IGluamVjdEFuZEdldENsYXNzTmFtZSxcbiAgICBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyczogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQ6IHJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZTogcmVzZXRJbmplY3RlZFN0eWxlXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VFeHBvcnRzIGFzIGEgfTtcbiIsImltcG9ydCB7IGEgYXMgbWFrZUV4cG9ydHMgfSBmcm9tICcuL2NodW5rLWZlYmNlNDZiLmpzJztcbmltcG9ydCAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0ICdhc2FwJztcblxudmFyIHVzZUltcG9ydGFudCA9IHRydWU7IC8vIEFkZCAhaW1wb3J0YW50IHRvIGFsbCBzdHlsZSBkZWZpbml0aW9uc1xuXG52YXIgQXBocm9kaXRlID0gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50KTtcbnZhciBTdHlsZVNoZWV0ID0gQXBocm9kaXRlLlN0eWxlU2hlZXQsXG4gICAgU3R5bGVTaGVldFNlcnZlciA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0U2VydmVyLFxuICAgIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBBcGhyb2RpdGUuU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBjc3MgPSBBcGhyb2RpdGUuY3NzLFxuICAgIG1pbmlmeSA9IEFwaHJvZGl0ZS5taW5pZnksXG4gICAgZmx1c2hUb1N0eWxlVGFnID0gQXBocm9kaXRlLmZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBBcGhyb2RpdGUuaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzID0gQXBocm9kaXRlLmRlZmF1bHRTZWxlY3RvckhhbmRsZXJzLFxuICAgIHJlc2V0ID0gQXBocm9kaXRlLnJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IEFwaHJvZGl0ZS5yZXNldEluamVjdGVkU3R5bGU7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlU2hlZXRTZXJ2ZXIsIFN0eWxlU2hlZXRUZXN0VXRpbHMsIGNzcywgbWluaWZ5LCBmbHVzaFRvU3R5bGVUYWcsIGluamVjdEFuZEdldENsYXNzTmFtZSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsIHJlc2V0LCByZXNldEluamVjdGVkU3R5bGUgfTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBjb25zdCB1c2VyID0ge1xuICBlbWFpbDogJycsXG4gIHBhc3N3b3JkOiAnJyxcbiAgaXNMb2dnZWRJbjogZmFsc2UsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gbG9nT3V0KCkge1xuICB1c2VyLmlzTG9nZ2VkSW4gPSBmYWxzZTtcbn1cblxuZXhwb3J0IGNvbnN0IEFwcENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KHtcbiAgdXNlcixcbiAgbG9nT3V0LFxufSk7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBsb2dvIGZyb20gJy4uL2Fzc2V0cy9ob2xiZXJ0b25fbG9nby5qcGcnO1xuaW1wb3J0IHsgY3NzLCBTdHlsZVNoZWV0IH0gZnJvbSAnYXBocm9kaXRlJztcbmltcG9ydCB7IEFwcENvbnRleHQgfSBmcm9tICcuLi9BcHAvQXBwQ29udGV4dCc7XG5cbmZ1bmN0aW9uIEhlYWRlcigpIHtcbiAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChBcHBDb250ZXh0KTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhoZWFkZXJTdHlsZXMuYXBwSGVhZGVyKX0+XG4gICAgICAgIDxpbWcgc3JjPXtsb2dvfSBhbHQ9XCJsb2dvXCIgY2xhc3NOYW1lPXtjc3MoaGVhZGVyU3R5bGVzLmFwcExvZ28pfSAvPlxuICAgICAgICA8aDEgY2xhc3NOYW1lPXtjc3MoaGVhZGVyU3R5bGVzLmgxKX0+U2Nob29sIGRhc2hib2FyZDwvaDE+XG4gICAgICA8L2Rpdj5cbiAgICAgIHtjb250ZXh0VmFsdWUudXNlci5pc0xvZ2dlZEluID8gKFxuICAgICAgICA8c2VjdGlvbiBpZD0nbG9nb3V0U2VjdGlvbic+XG4gICAgICAgICAgV2VsY29tZSB7Y29udGV4dFZhbHVlLnVzZXIuZW1haWx9XG4gICAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXtjb250ZXh0VmFsdWUubG9nT3V0fT5cbiAgICAgICAgICAgIDxlbT4obG9nb3V0KTwvZW0+XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICApIDogbnVsbH1cbiAgICA8Lz5cbiAgKTtcbn1cbmNvbnN0IGhlYWRlclN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgaDE6IHtcbiAgICBtYXJnaW5MZWZ0OiAnM3JlbScsXG4gIH0sXG5cbiAgYXBwSGVhZGVyOiB7XG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGNvbG9yOiAnI0UxMUQzRicsXG4gICAgYm9yZGVyQm90dG9tOiAnMXB4IHNvbGlkICNFMTFEM0YnLFxuICB9LFxuXG4gIGFwcExvZ286IHtcbiAgICBoZWlnaHQ6ICcyMDBweCcsXG4gICAgd2lkdGg6ICcyMDBweCcsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgZ2V0Rm9vdGVyQ29weSwgZ2V0RnVsbFllYXIgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHNcIjtcblxuZnVuY3Rpb24gRm9vdGVyKCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiQXBwLWZvb3RlclwiPlxuICAgICAgPHA+XG4gICAgICAgIENvcHlyaWdodCB7Z2V0RnVsbFllYXIoKX0gLSB7Z2V0Rm9vdGVyQ29weSgpfVxuICAgICAgPC9wPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBGb290ZXI7XG4iLCJleHBvcnQgZnVuY3Rpb24gZ2V0RnVsbFllYXIoKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEZvb3RlckNvcHkoaXNJbmRleCkge1xuICAgIHJldHVybiBpc0luZGV4ID09PSB0cnVlID8gJ0hvbGJlcnRvbiBTY2hvb2wnIDogJ0hvbGJlcnRvbiBTY2hvb2wgbWFpbiBkYXNoYm9hcmQnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkge1xuICAgIHJldHVybiAnPHN0cm9uZz5VcmdlbnQgcmVxdWlyZW1lbnQ8L3N0cm9uZz4gLSBjb21wbGV0ZSBieSBFT0QnO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImM2MDU4MzMzZjdmZjM5YjU2OTMzZjQ0ZDJhZmU5ZjMzLnBuZ1wiOyIsImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNzcywgU3R5bGVTaGVldCB9IGZyb20gJ2FwaHJvZGl0ZSc7XG5cbmNsYXNzIE5vdGlmaWNhdGlvbkl0ZW0gZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB0eXBlIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHN0eWxlID1cbiAgICAgIHR5cGUgPT09ICd1cmdlbnQnXG4gICAgICAgID8gbm90aWZpY2F0aW9uSXRlbXN0eWxlLnVyZ2VudFxuICAgICAgICA6IG5vdGlmaWNhdGlvbkl0ZW1zdHlsZS5kZWZhdWx0O1xuICAgIHJldHVybiB0aGlzLnByb3BzLnZhbHVlID8gKFxuICAgICAgPGxpXG4gICAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3RoaXMucHJvcHMudHlwZX1cbiAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5wcm9wcy5tYXJrQXNSZWFkKHRoaXMucHJvcHMuaWQpfVxuICAgICAgICBjbGFzc05hbWU9e2NzcyhzdHlsZSwgbm90aWZpY2F0aW9uSXRlbXN0eWxlLmxpKX1cbiAgICAgID5cbiAgICAgICAge3RoaXMucHJvcHMudmFsdWV9XG4gICAgICA8L2xpPlxuICAgICkgOiAoXG4gICAgICA8bGlcbiAgICAgICAgZGF0YS1ub3RpZmljYXRpb24tdHlwZT17dGhpcy5wcm9wcy50eXBlfVxuICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17dGhpcy5wcm9wcy5odG1sfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnByb3BzLm1hcmtBc1JlYWQodGhpcy5wcm9wcy5pZCl9XG4gICAgICAgIGNsYXNzTmFtZT17Y3NzKHN0eWxlLCBub3RpZmljYXRpb25JdGVtc3R5bGUubGkpfVxuICAgICAgPjwvbGk+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBub3RpZmljYXRpb25JdGVtc3R5bGUgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGxpOiB7XG4gICAgJ0BtZWRpYSAobWF4LXdpZHRoOiA5MDBweCknOiB7XG4gICAgICBsaXN0U3R5bGU6ICdub25lJyxcbiAgICAgIGJvcmRlckJvdHRvbTogJzFweCBzb2xpZCBibGFjaycsXG4gICAgICBwYWRkaW5nOiAnMTBweCA4cHgnLFxuICAgICAgbWFyZ2luOiAwLFxuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIGZvbnRTaXplOiAnMjBweCcsXG4gICAgfSxcbiAgfSxcbiAgZGVmYXVsdDoge1xuICAgIGNvbG9yOiAnYmx1ZScsXG4gIH0sXG4gIHVyZ2VudDoge1xuICAgIGNvbG9yOiAncmVkJyxcbiAgfSxcbn0pO1xuXG5Ob3RpZmljYXRpb25JdGVtLmRlZmF1bHRQcm9wcyA9IHtcbiAgdHlwZTogJ2RlZmF1bHQnLFxuICBtYXJrQXNSZWFkOiAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2VtcHR5IGZ1bmMnKTtcbiAgfSxcbiAgaWQ6IDAsXG59O1xuXG5Ob3RpZmljYXRpb25JdGVtLnByb3BUeXBlcyA9IHtcbiAgaHRtbDogUHJvcFR5cGVzLnNoYXBlKHsgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nIH0pLFxuICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBtYXJrQXNSZWFkOiBQcm9wVHlwZXMuZnVuYyxcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JdGVtO1xuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBQcm9wVHlwZXMuc2hhcGUoe1xuICBpZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoeyBfX2h0bWw6IFByb3BUeXBlcy5zdHJpbmcgfSksXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG59KTtcbiIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbG9zZUljb24gZnJvbSAnLi4vYXNzZXRzL2Nsb3NlLWljb24ucG5nJztcbmltcG9ydCBOb3RpZmljYXRpb25JdGVtIGZyb20gJy4vTm90aWZpY2F0aW9uSXRlbSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSBmcm9tICcuL05vdGlmaWNhdGlvbkl0ZW1TaGFwZSc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xuXG5jbGFzcyBOb3RpZmljYXRpb25zIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wcykge1xuICAgIC8vIE9ubHkgdXBkYXRlIGlmIHRoZSBuZXcgbGlzdCBpcyBsb25nZXIgdGhhbiB0aGUgcHJldmlvdXMgb25lXG4gICAgLy9vciBpZiB0aGUgZGlzcGxheURyYXdlcnByb3AgaXMgdXBkYXRlZFxuICAgIHJldHVybiAoXG4gICAgICBuZXh0UHJvcHMubGlzdE5vdGlmaWNhdGlvbnMubGVuZ3RoID5cbiAgICAgICAgdGhpcy5wcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggfHxcbiAgICAgIG5leHRQcm9wcy5kaXNwbGF5RHJhd2VyICE9IHRoaXMucHJvcHMuZGlzcGxheURyYXdlclxuICAgICk7XG4gIH1cblxuICBtYXJrQXNSZWFkID0gKGlkKSA9PiB7XG4gICAgY29uc29sZS5sb2coYE5vdGlmaWNhdGlvbiAke2lkfSBoYXMgYmVlbiBtYXJrZWQgYXMgcmVhZGApO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgeyF0aGlzLnByb3BzLmRpc3BsYXlEcmF3ZXIgPyAoXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjc3Mobm90aWZpY2F0aW9uU3R5bGVzLm1lbnVJdGVtKX1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMucHJvcHMuaGFuZGxlRGlzcGxheURyYXdlcigpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFlvdXIgbm90aWZpY2F0aW9uc1xuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogbnVsbH1cbiAgICAgICAge3RoaXMucHJvcHMuZGlzcGxheURyYXdlciA/IChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKG5vdGlmaWNhdGlvblN0eWxlcy5ub3RpZmljYXRpb25zKX0+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgY29sb3I6ICcjM2EzYTNhJyxcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJ25vbmUnLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTVweCcsXG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICAgICAgcmlnaHQ6ICczcHgnLFxuICAgICAgICAgICAgICAgIHRvcDogJzNweCcsXG4gICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICAgICAgICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiQ2xvc2VcIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2Nzcyhub3RpZmljYXRpb25TdHlsZXMuYnV0dG9uKX1cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDbG9zZSBidXR0b24gaGFzIGJlZW4gY2xpY2tlZCcpO1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuaGFuZGxlSGlkZURyYXdlcigpO1xuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW1nIHNyYz17Y2xvc2VJY29ufSBhbHQ9XCJjbG9zZSBpY29uXCIgd2lkdGg9XCIxNXB4XCIgLz5cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAge3RoaXMucHJvcHMubGlzdE5vdGlmaWNhdGlvbnMubGVuZ3RoICE9IDAgPyAoXG4gICAgICAgICAgICAgIDxwPkhlcmUgaXMgdGhlIGxpc3Qgb2Ygbm90aWZpY2F0aW9uczwvcD5cbiAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggPT0gMCA/IChcbiAgICAgICAgICAgICAgICA8Tm90aWZpY2F0aW9uSXRlbVxuICAgICAgICAgICAgICAgICAgdHlwZT1cImRlZmF1bHRcIlxuICAgICAgICAgICAgICAgICAgdmFsdWU9XCJObyBuZXcgbm90aWZpY2F0aW9uIGZvciBub3dcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5tYXAoKHZhbCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8Tm90aWZpY2F0aW9uSXRlbVxuICAgICAgICAgICAgICAgICAgICB0eXBlPXt2YWwudHlwZX1cbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbC52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgaHRtbD17dmFsLmh0bWx9XG4gICAgICAgICAgICAgICAgICAgIGtleT17dmFsLmlkfVxuICAgICAgICAgICAgICAgICAgICBtYXJrQXNSZWFkPXt0aGlzLm1hcmtBc1JlYWR9XG4gICAgICAgICAgICAgICAgICAgIGlkPXt2YWwuaWR9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8Lz5cbiAgICApO1xuICB9XG59XG5jb25zdCBmYWRlSW4gPSB7XG4gICcwJSc6IHtcbiAgICBvcGFjaXR5OiAwLjUsXG4gIH0sXG4gICcxMDAlJzoge1xuICAgIG9wYWNpdHk6IDEsXG4gIH0sXG59O1xuXG5jb25zdCBib3VuY2UgPSB7XG4gICcwJSc6IHtcbiAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDBweCknLFxuICB9LFxuICAnMzMlJzoge1xuICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTVweCknLFxuICB9LFxuICAnNjYlJzoge1xuICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoNXB4KScsXG4gIH0sXG4gICcxMDAlJzoge1xuICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMHB4KScsXG4gIH0sXG59O1xuXG5jb25zdCBub3RpZmljYXRpb25TdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIG5vdGlmaWNhdGlvbnM6IHtcbiAgICBib3JkZXI6ICczcHggZG90dGVkICNFMTFEM0YnLFxuICAgIHBhZGRpbmc6ICc2cHggMTJweCcsXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiAnMjFweCcsXG4gICAgcmlnaHQ6ICc3cHgnLFxuICAgIG1hcmdpblRvcDogJzEycHgnLFxuICAgIHpJbmRleDogJzEwMCcsXG4gICAgJ0BtZWRpYSAobWF4LXdpZHRoOiA5MDBweCknOiB7XG4gICAgICBwYWRkaW5nOiAnMCcsXG4gICAgICBmb250U2l6ZTogJzIwcHgnLFxuICAgICAgcmVsYXRpdmU6ICcxMnB4JyxcbiAgICAgIHRvcDogJzAnLFxuICAgICAgcmlnaHQ6ICcwJyxcbiAgICAgIGJvdHRvbTogJzAnLFxuICAgICAgbGVmdDogJzAnLFxuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2ZmZmZmZicsXG4gICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgIH0sXG4gIH0sXG5cbiAgYnV0dG9uOiB7XG4gICAgJ21lZGlhIChtYXgtd2lkdGg6IDkwMHB4KSc6IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgZmxvYXQ6ICdyaWdodCcsXG4gICAgfSxcbiAgfSxcblxuICBtZW51SXRlbToge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIHpJbmRleDogMTAwLFxuICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmY4ZjgnLFxuICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgIGZsb2F0OiAncmlnaHQnLFxuICAgICc6aG92ZXInOiB7XG4gICAgICBhbmltYXRpb25OYW1lOiBbZmFkZUluLCBib3VuY2VdLFxuICAgICAgYW5pbWF0aW9uRHVyYXRpb246ICcxcywgMC41cycsXG4gICAgICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogJzMnLFxuICAgIH0sXG4gIH0sXG59KTtcblxuTm90aWZpY2F0aW9ucy5kZWZhdWx0UHJvcHMgPSB7XG4gIGRpc3BsYXlEcmF3ZXI6IGZhbHNlLFxuICBsaXN0Tm90aWZpY2F0aW9uczogW10sXG4gIGhhbmRsZURpc3BsYXlEcmF3ZXI6ICgpID0+IHt9LFxuICBoYW5kbGVIaWRlRHJhd2VyOiAoKSA9PiB7fSxcbn07XG5cbk5vdGlmaWNhdGlvbnMucHJvcFR5cGVzID0ge1xuICBkaXNwbGF5RHJhd2VyOiBQcm9wVHlwZXMuYm9vbCxcbiAgbGlzdE5vdGlmaWNhdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSksXG4gIGhhbmRsZURpc3BsYXlEcmF3ZXI6IFByb3BUeXBlcy5mdW5jLFxuICBoYW5kbGVIaWRlRHJhd2VyOiBQcm9wVHlwZXMuZnVuYyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbnM7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5mdW5jdGlvbiBMb2dpbihwcm9wcykge1xuICBjb25zdCBbZW1haWwsIHNldEVtYWlsXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3Bhc3N3b3JkLCBzZXRQYXNzd29yZF0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IFtlbmFibGVTdWJtaXQsIHNldEVuYWJsZVN1Ym1pdF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgY29uc3QgaGFuZGxlTG9naW5TdWJtaXQgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHByb3BzLmxvZ0luKFxuICAgICAgZXZlbnQudGFyZ2V0LmVsZW1lbnRzLmVtYWlsLnZhbHVlLFxuICAgICAgZXZlbnQudGFyZ2V0LmVsZW1lbnRzLnBhc3N3b3JkLnZhbHVlXG4gICAgKTtcbiAgfTtcbiAgY29uc3QgaGFuZGxlQ2hhbmdlRW1haWwgPSAoZXZlbnQpID0+IHtcbiAgICBzZXRFbWFpbChldmVudC50YXJnZXQudmFsdWUpO1xuICB9O1xuICBjb25zdCBoYW5kbGVDaGFuZ2VQYXNzd29yZCA9IChldmVudCkgPT4ge1xuICAgIHNldFBhc3N3b3JkKGV2ZW50LnRhcmdldC52YWx1ZSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRFbmFibGVTdWJtaXQoZW1haWwgIT09ICcnICYmIHBhc3N3b3JkICE9PSAnJyk7XG4gIH0sIFtlbWFpbCwgcGFzc3dvcmRdKTtcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3MobG9naW5TdHlsZXMuYXBwQm9keSl9PlxuICAgICAgICA8cD5Mb2dpbiB0byBhY2Nlc3MgdGhlIGZ1bGwgZGFzaGJvYXJkPC9wPlxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17aGFuZGxlTG9naW5TdWJtaXR9PlxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiZW1haWxcIj5FbWFpbDogPC9sYWJlbD5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJlbWFpbFwiXG4gICAgICAgICAgICBpZD1cImVtYWlsXCJcbiAgICAgICAgICAgIG5hbWU9XCJlbWFpbFwiXG4gICAgICAgICAgICBjbGFzc05hbWU9e2xvZ2luU3R5bGVzLmlucHV0c31cbiAgICAgICAgICAgIHZhbHVlPXtlbWFpbH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2VFbWFpbH1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3MobG9naW5TdHlsZXMuZGlzcGxheSl9PlxuICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJwYXNzd29yZFwiPlBhc3N3b3JkOiA8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgIHR5cGU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgICAgIGlkPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICBuYW1lPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2xvZ2luU3R5bGVzLmlucHV0c31cbiAgICAgICAgICAgICAgdmFsdWU9e3Bhc3N3b3JkfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlUGFzc3dvcmR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICBjbGFzc05hbWU9e2Nzcyhsb2dpblN0eWxlcy5idXR0b24pfVxuICAgICAgICAgICAgdmFsdWU9XCJPS1wiXG4gICAgICAgICAgICBkaXNhYmxlZD17IWVuYWJsZVN1Ym1pdH1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Zvcm0+XG4gICAgICA8L2Rpdj5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApO1xufVxuXG5jb25zdCBsb2dpblN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgYXBwQm9keToge1xuICAgIHBhZGRpbmc6ICczNnB4IDI0cHgnLFxuICB9LFxuXG4gIGlucHV0czoge1xuICAgIG1hcmdpbjogJzAgMTZweCAwIDhweCcsXG4gIH0sXG5cbiAgZGlzcGxheToge1xuICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICdAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpJzoge1xuICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICB9LFxuICB9LFxuICBidXR0b246IHtcbiAgICBib3JkZXJDb2xvcjogJ3llbGxvdycsXG4gIH0sXG59KTtcblxuTG9naW4ucHJvcFR5cGVzID0ge1xuICBsb2dJbjogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiIsImltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjcmVkaXQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbn0pO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHsgY3NzLCBTdHlsZVNoZWV0IH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuXG5mdW5jdGlvbiBDb3Vyc2VMaXN0Um93KHsgaXNIZWFkZXIsIHRleHRGaXJzdENlbGwsIHRleHRTZWNvbmRDZWxsIH0pIHtcbiAgY29uc3Qgcm93Q29sb3IgPSB7IGJhY2tncm91bmRDb2xvcjogXCIjZjVmNWY1YWJcIiB9O1xuICBjb25zdCBoZWFkZXJDb2xvciA9IHsgYmFja2dyb3VuZENvbG9yOiBcIiNkZWI1YjU0NVwiIH07XG5cbiAgcmV0dXJuIChcbiAgICA8dHIgc3R5bGU9e2lzSGVhZGVyID8gaGVhZGVyQ29sb3IgOiByb3dDb2xvcn0+XG4gICAgICB7aXNIZWFkZXIgPyAoXG4gICAgICAgIHRleHRTZWNvbmRDZWxsID09PSBudWxsID8gKFxuICAgICAgICAgIDx0aCBjb2xTcGFuPXsyfSBjbGFzc05hbWU9e2Nzcyhyb3dzU3R5bGVzLnRoY2VudGVyKX0+XG4gICAgICAgICAgICB7dGV4dEZpcnN0Q2VsbH1cbiAgICAgICAgICA8L3RoPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDw+XG4gICAgICAgICAgICA8dGggY2xhc3NOYW1lPXtjc3Mocm93c1N0eWxlcy50aCl9PlxuICAgICAgICAgICAgICB7dGV4dEZpcnN0Q2VsbH1cbiAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICA8dGggY2xhc3NOYW1lPXtjc3Mocm93c1N0eWxlcy50aCl9Pnt0ZXh0U2Vjb25kQ2VsbH08L3RoPlxuICAgICAgICAgIDwvPlxuICAgICAgICApXG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIDx0ZCBjbGFzc05hbWU9e2Nzcyhyb3dzU3R5bGVzLnRkKX0+e3RleHRGaXJzdENlbGx9PC90ZD5cbiAgICAgICAgICA8dGQgY2xhc3NOYW1lPXtjc3Mocm93c1N0eWxlcy50ZCl9Pnt0ZXh0U2Vjb25kQ2VsbH08L3RkPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC90cj5cbiAgKTtcbn1cblxuY29uc3Qgcm93c1N0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgdGhjZW50ZXI6IHtcbiAgICBib3JkZXJCb3R0b206IFwiMXB4IHNvbGlkIGdyYXlcIixcbiAgICBtYXJnaW46IDAsXG4gICAgcGFkZGluZzogMCxcbiAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gIH0sXG4gIHRoOiB7XG4gICAgYm9yZGVyQm90dG9tOiBcIjFweCBzb2xpZCBncmF5XCIsXG4gICAgbWFyZ2luOiAwLFxuICAgIHBhZGRpbmc6IDAsXG4gICAgdGV4dEFsaWduOiBcImxlZnRcIixcbiAgfSxcbiAgdGQ6IHtcbiAgICBwYWRkaW5nTGVmdDogMyxcbiAgfSxcbn0pO1xuXG5Db3Vyc2VMaXN0Um93LnByb3BUeXBlcyA9IHtcbiAgaXNIZWFkZXI6IFByb3BUeXBlcy5ib29sLFxuICB0ZXh0Rmlyc3RDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHRTZWNvbmRDZWxsOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSksXG59O1xuXG5Db3Vyc2VMaXN0Um93LmRlZmF1bHRQcm9wcyA9IHtcbiAgaXNIZWFkZXI6IGZhbHNlLFxuICB0ZXh0U2Vjb25kQ2VsbDogbnVsbCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvdXJzZUxpc3RSb3c7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGUgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBDb3Vyc2VTaGFwZSBmcm9tIFwiLi9Db3Vyc2VTaGFwZVwiO1xuaW1wb3J0IENvdXJzZUxpc3RSb3cgZnJvbSBcIi4vQ291cnNlTGlzdFJvd1wiO1xuaW1wb3J0IHsgY3NzLCBTdHlsZVNoZWV0IH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuXG5mdW5jdGlvbiBDb3Vyc2VMaXN0KHsgbGlzdENvdXJzZXMgfSkge1xuICByZXR1cm4gKFxuICAgIDx0YWJsZSBpZD1cIkNvdXJzZUxpc3RcIiBjbGFzc05hbWU9e2Nzcyhjb3Vyc2VMaXN0U3R5bGVzLnRhYmxlKX0+XG4gICAgICA8dGhlYWQ+XG4gICAgICAgIDxDb3Vyc2VMaXN0Um93IGlzSGVhZGVyIHRleHRGaXJzdENlbGw9XCJBdmFpbGFibGUgY291cnNlc1wiIC8+XG4gICAgICAgIDxDb3Vyc2VMaXN0Um93XG4gICAgICAgICAgaXNIZWFkZXJcbiAgICAgICAgICB0ZXh0Rmlyc3RDZWxsPVwiQ291cnNlIG5hbWVcIlxuICAgICAgICAgIHRleHRTZWNvbmRDZWxsPVwiQ3JlZGl0XCJcbiAgICAgICAgLz5cbiAgICAgIDwvdGhlYWQ+XG4gICAgICA8dGJvZHk+XG4gICAgICAgIHtsaXN0Q291cnNlcy5sZW5ndGggPT0gMCA/IChcbiAgICAgICAgICA8Q291cnNlTGlzdFJvd1xuICAgICAgICAgICAgaXNIZWFkZXI9e2ZhbHNlfVxuICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD1cIk5vIGNvdXJzZSBhdmFpbGFibGUgeWV0XCJcbiAgICAgICAgICAvPlxuICAgICAgICApIDogbnVsbH1cbiAgICAgICAge2xpc3RDb3Vyc2VzLm1hcCgodmFsKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxDb3Vyc2VMaXN0Um93XG4gICAgICAgICAgICAgIGlzSGVhZGVyPXtmYWxzZX1cbiAgICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD17dmFsLm5hbWV9XG4gICAgICAgICAgICAgIHRleHRTZWNvbmRDZWxsPXt2YWwuY3JlZGl0fVxuICAgICAgICAgICAgICBrZXk9e3ZhbC5pZH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSl9XG4gICAgICA8L3Rib2R5PlxuICAgIDwvdGFibGU+XG4gICk7XG59XG5cbmNvbnN0IGNvdXJzZUxpc3RTdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIHRhYmxlOiB7XG4gICAgZGlzcGxheTogXCJ0YWJsZVwiLFxuICAgIGJvcmRlcjogXCIxcHggc29saWRcIixcbiAgICBib3JkZXJDb2xsYXBzZTogXCJjb2xsYXBzZVwiLFxuICAgIG1hcmdpbjogXCIycmVtIGF1dG8gMCBhdXRvXCIsXG4gICAgd2lkdGg6IFwiOTAlXCIsXG4gIH0sXG59KTtcblxuQ291cnNlTGlzdC5kZWZhdWx0UHJvcHMgPSB7XG4gIGxpc3RDb3Vyc2VzOiBbXSxcbn07XG5cbkNvdXJzZUxpc3QuUHJvcFR5cGUgPSB7XG4gIGxpc3RDb3Vyc2VzOiBQcm9wVHlwZS5hcnJheU9mKENvdXJzZVNoYXBlKSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvdXJzZUxpc3Q7XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNsYXNzIEJvZHlTZWN0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgdGl0bGUsIGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvZHlTZWN0aW9uXCI+XG4gICAgICAgIDxoMj57dGl0bGV9PC9oMj5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5Cb2R5U2VjdGlvbi5wcm9wVHlwZXMgPSB7XG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZWxlbWVudF0pLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb247XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQm9keVNlY3Rpb24gZnJvbSBcIi4vQm9keVNlY3Rpb25cIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNzcywgU3R5bGVTaGVldCB9IGZyb20gXCJhcGhyb2RpdGVcIjtcblxuY2xhc3MgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKGJvZHlTZWN0aW9uU3R5bGVzLm1hcmdpbkJvdHRvbSl9PlxuICAgICAgICA8Qm9keVNlY3Rpb24gey4uLnRoaXMucHJvcHN9IC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5jb25zdCBib2R5U2VjdGlvblN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgbWFyZ2luQm90dG9tOiB7XG4gICAgbWFyZ2luQm90dG9tOiBcIjQwcHhcIixcbiAgfSxcbn0pO1xuXG5Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uZGVmYXVsdFByb3BzID0ge1xuICBjaGlsZHJlbjogPFJlYWN0LkZyYWdtZW50IC8+LFxufTtcblxuQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLlByb3B0eXBlcyA9IHtcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5lbGVtZW50XSksXG59O1xuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vSGVhZGVyL0hlYWRlcic7XG5pbXBvcnQgRm9vdGVyIGZyb20gJy4uL0Zvb3Rlci9Gb290ZXInO1xuaW1wb3J0IE5vdGlmaWNhdGlvbiBmcm9tICcuLi9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbnMnO1xuaW1wb3J0IExvZ2luIGZyb20gJy4uL0xvZ2luL0xvZ2luJztcbmltcG9ydCBDb3Vyc2VMaXN0IGZyb20gJy4uL0NvdXJzZUxpc3QvQ291cnNlTGlzdCc7XG5pbXBvcnQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIGZyb20gJy4uL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSc7XG5pbXBvcnQgQm9keVNlY3Rpb24gZnJvbSAnLi4vQm9keVNlY3Rpb24vQm9keVNlY3Rpb24nO1xuaW1wb3J0IHsgZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcbmltcG9ydCB7IHVzZXIsIEFwcENvbnRleHQgfSBmcm9tICcuL0FwcENvbnRleHQnO1xuXG5jbGFzcyBBcHAgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgZGlzcGxheURyYXdlcjogZmFsc2UsXG4gICAgICB1c2VyOiB1c2VyLFxuICAgICAgbG9nT3V0OiB0aGlzLmxvZ091dCxcbiAgICB9O1xuICB9XG5cbiAgbG9nSW4gPSAoZW1haWwsIHBhc3N3b3JkKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICB1c2VyOiB7XG4gICAgICAgIGVtYWlsLFxuICAgICAgICBwYXNzd29yZCxcbiAgICAgICAgaXNMb2dnZWRJbjogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH07XG5cbiAgbG9nT3V0ID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgdXNlcjogdXNlcixcbiAgICB9KTtcbiAgfTtcblxuICBoYW5kbGVEaXNwbGF5RHJhd2VyID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZGlzcGxheURyYXdlcjogdHJ1ZSxcbiAgICB9KTtcbiAgfTtcblxuICBoYW5kbGVIaWRlRHJhd2VyID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZGlzcGxheURyYXdlcjogZmFsc2UsXG4gICAgfSk7XG4gIH07XG5cbiAgaGFuZGxlS2V5RG93biA9IChldmVudCkgPT4ge1xuICAgIGlmIChldmVudC5jdHJsS2V5ICYmIGV2ZW50LmtleSA9PT0gJ2gnKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBhbGVydCgnTG9nZ2luZyB5b3Ugb3V0Jyk7XG4gICAgICB0aGlzLmxvZ091dCgpO1xuICAgIH1cbiAgfTtcblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlS2V5RG93bik7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlS2V5RG93bik7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxBcHBDb250ZXh0LlByb3ZpZGVyXG4gICAgICAgIHZhbHVlPXt7XG4gICAgICAgICAgdXNlcjogdGhpcy5zdGF0ZS51c2VyLFxuICAgICAgICAgIGxvZ091dDogdGhpcy5zdGF0ZS5sb2dPdXQsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICA8Tm90aWZpY2F0aW9uXG4gICAgICAgICAgICBsaXN0Tm90aWZpY2F0aW9ucz17bGlzdE5vdGlmaWNhdGlvbnN9XG4gICAgICAgICAgICBkaXNwbGF5RHJhd2VyPXt0aGlzLnN0YXRlLmRpc3BsYXlEcmF3ZXJ9XG4gICAgICAgICAgICBoYW5kbGVEaXNwbGF5RHJhd2VyPXt0aGlzLmhhbmRsZURpc3BsYXlEcmF3ZXJ9XG4gICAgICAgICAgICBoYW5kbGVIaWRlRHJhd2VyPXt0aGlzLmhhbmRsZUhpZGVEcmF3ZXJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKGJvZHlTdHlsZXMuQXBwKX0+XG4gICAgICAgICAgICA8SGVhZGVyIC8+XG4gICAgICAgICAgICB7dGhpcy5zdGF0ZS51c2VyLmlzTG9nZ2VkSW4gPyAoXG4gICAgICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9XCJDb3Vyc2UgbGlzdFwiPlxuICAgICAgICAgICAgICAgIDxDb3Vyc2VMaXN0IGxpc3RDb3Vyc2VzPXtsaXN0Q291cnNlc30gLz5cbiAgICAgICAgICAgICAgPC9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8Qm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIHRpdGxlPVwiTG9nIGluIHRvIGNvbnRpbnVlXCI+XG4gICAgICAgICAgICAgICAgPExvZ2luIGxvZ0luPXt0aGlzLmxvZ0lufSAvPlxuICAgICAgICAgICAgICA8L0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbT5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8Qm9keVNlY3Rpb24gdGl0bGU9XCJOZXdzIGZyb20gdGhlIFNjaG9vbFwiPlxuICAgICAgICAgICAgICA8cD5CZWdpbiB5b3VyIGZyb250ZW5kIGRyZWFtcyB0b2RheTwvcD5cbiAgICAgICAgICAgIDwvQm9keVNlY3Rpb24+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKGZvb3RlclN0eWxlcy5mb290ZXIpfT5cbiAgICAgICAgICAgICAgPEZvb3RlciAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8L0FwcENvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBib2R5U3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBBcHA6IHtcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICBtaW5IZWlnaHQ6ICcxMDB2aCcsXG4gIH0sXG59KTtcblxuY29uc3QgZm9vdGVyU3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBmb290ZXI6IHtcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGJvcmRlclRvcDogJzNweCBzb2xpZCAjRTExRDNGJyxcbiAgICBwYWRkaW5nOiAnMXJlbScsXG4gICAgZm9udFN0eWxlOiAnaXRhbGljJyxcbiAgfSxcbn0pO1xuXG5jb25zdCBsaXN0Q291cnNlcyA9IFtcbiAgeyBpZDogMSwgbmFtZTogJ0VTNicsIGNyZWRpdDogNjAgfSxcbiAgeyBpZDogMiwgbmFtZTogJ1dlYnBhY2snLCBjcmVkaXQ6IDIwIH0sXG4gIHsgaWQ6IDMsIG5hbWU6ICdSZWFjdCcsIGNyZWRpdDogNDAgfSxcbl07XG5cbmNvbnN0IGxpc3ROb3RpZmljYXRpb25zID0gW1xuICB7IGlkOiAxLCB2YWx1ZTogJ05ldyBjb3Vyc2UgYXZhaWxhYmxlJywgdHlwZTogJ2RlZmF1bHQnIH0sXG4gIHsgaWQ6IDIsIHZhbHVlOiAnTmV3IHJlc3VtZSBhdmFpbGFibGUnLCB0eXBlOiAndXJnZW50JyB9LFxuICB7IGlkOiAzLCBodG1sOiB7IF9faHRtbDogZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkgfSwgdHlwZTogJ3VyZ2VudCcgfSxcbl07XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAvQXBwJztcblxuUmVhY3RET00ucmVuZGVyKFxuICA8UmVhY3QuU3RyaWN0TW9kZT5cbiAgICA8QXBwIC8+XG4gIDwvUmVhY3QuU3RyaWN0TW9kZT4sXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jylcbik7XG4iXSwibmFtZXMiOlsicmF3QXNhcCIsImZyZWVUYXNrcyIsInBlbmRpbmdFcnJvcnMiLCJyZXF1ZXN0RXJyb3JUaHJvdyIsIm1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lciIsImxlbmd0aCIsInNoaWZ0IiwiYXNhcCIsInRhc2siLCJyYXdUYXNrIiwicG9wIiwiUmF3VGFzayIsInRoaXMiLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvdG90eXBlIiwiY2FsbCIsImVycm9yIiwib25lcnJvciIsInB1c2giLCJxdWV1ZSIsInJlcXVlc3RGbHVzaCIsImluZGV4IiwiY2FwYWNpdHkiLCJmbHVzaCIsImN1cnJlbnRJbmRleCIsInNjYW4iLCJuZXdMZW5ndGgiLCJ0b2dnbGUiLCJvYnNlcnZlciIsIm5vZGUiLCJzY29wZSIsImciLCJzZWxmIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImNhbGxiYWNrIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJoYW5kbGVUaW1lciIsImludGVydmFsSGFuZGxlIiwic2V0SW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiZGF0YSIsImdldE93blByb3BlcnR5U3ltYm9scyIsIk9iamVjdCIsImhhc093blByb3BlcnR5IiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJpIiwiZnJvbUNoYXJDb2RlIiwibWFwIiwibiIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImtleXMiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwiVHlwZUVycm9yIiwidG9PYmplY3QiLCJzIiwiYXJndW1lbnRzIiwia2V5IiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJFcnJvciIsIm5hbWUiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJiaWdpbnQiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwiciIsInUiLCJhIiwiYiIsImMiLCJlbmNvZGVVUklDb21wb25lbnQiLCJiYSIsImQiLCJlIiwiZiIsImgiLCJrIiwibCIsIkFycmF5Iiwic2xpY2UiLCJhcHBseSIsIm0iLCJvbkVycm9yIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwibGEiLCJtYSIsIm5hIiwib2EiLCJ0eXBlIiwiY3VycmVudFRhcmdldCIsImthIiwicGEiLCJxYSIsInJhIiwiaW5kZXhPZiIsInNhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJ0YSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwidWEiLCJyZWdpc3RyYXRpb25OYW1lIiwidmEiLCJ3YSIsImRlcGVuZGVuY2llcyIsInhhIiwieWEiLCJ3aW5kb3ciLCJjcmVhdGVFbGVtZW50IiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJzdGF0ZU5vZGUiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwidiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsIkMiLCJ0b0xvd2VyQ2FzZSIsIlVhIiwiVmEiLCJ0b1VwcGVyQ2FzZSIsInJlcGxhY2UiLCJ4bGlua0hyZWYiLCJXYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiWGEiLCJTYSIsImlzTmFOIiwiVGEiLCJ0ZXN0IiwiUmEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJjdXJyZW50IiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJzdXNwZW5zZSIsIllhIiwiRSIsIlN5bWJvbCIsImZvciIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJqYiIsImtiIiwibGIiLCJtYiIsIml0ZXJhdG9yIiwibmIiLCJwYiIsImRpc3BsYXlOYW1lIiwiJCR0eXBlb2YiLCJyZW5kZXIiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsInFiIiwidGFnIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZXR1cm4iLCJyYiIsInNiIiwibm9kZU5hbWUiLCJ4YiIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJjb25zdHJ1Y3RvciIsImdldCIsInNldCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ0YiIsInliIiwiY2hlY2tlZCIsInZhbHVlIiwiemIiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJiIiwiQ2IiLCJEYiIsIkViIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJHYiIsImNoaWxkcmVuIiwiQ2hpbGRyZW4iLCJGYiIsIkhiIiwib3B0aW9ucyIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJJYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiSmIiLCJpc0FycmF5IiwiS2IiLCJMYiIsInRleHRDb250ZW50IiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwidG9TdHJpbmciLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJSYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwiU2IiLCJUYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlViIiwiVmIiLCJXYiIsInN0eWxlIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsIldlYWtNYXAiLCJNYXAiLCJjYyIsImRjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZWMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImZjIiwiaGMiLCJjaGlsZCIsInNpYmxpbmciLCJnYyIsImljIiwiY29uY2F0IiwiamMiLCJrYyIsImxjIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwibWMiLCJuYyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwiaGFzIiwidmMiLCJGIiwid2MiLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJLYyIsImJsb2NrZWRPbiIsImNvbnRhaW5lciIsIkxjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiTWMiLCJOYyIsIlBjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJVYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIlZjIiwiV2MiLCJZYyIsIlpjIiwiJGMiLCJhZCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImV2ZW50UHJpb3JpdHkiLCJiZCIsImNkIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImJpbmQiLCJoZCIsImlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImtkIiwibGQiLCJ0cmltIiwibWQiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsImlzIiwicWQiLCJyZCIsInNkIiwidGQiLCJib2R5IiwidWQiLCJ2ZCIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwieGQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsImF1dG9Gb2N1cyIsIkdkIiwiX19odG1sIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJMZCIsIk1hdGgiLCJyYW5kb20iLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiRyIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImVlIiwiZXZlbnRQb29sIiwiZmUiLCJkZXN0cnVjdG9yIiwiZGUiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwicmUiLCJkZXRhaWwiLCJzZSIsInZlIiwibG9jYWxlIiwid2hpY2giLCJ0ZSIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInVlIiwid2UiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsInAiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJrZiIsIm9uU2VsZWN0IiwibGYiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwibWYiLCJjbGlwYm9hcmREYXRhIiwibmYiLCJvZiIsImNoYXJDb2RlIiwicGYiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwicWYiLCJyZiIsInJlcGVhdCIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkgiLCJJIiwiQWYiLCJKIiwiSyIsIkJmIiwiQ2YiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJMIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJEZiIsIkVmIiwiRmYiLCJnZXRDaGlsZENvbnRleHQiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkxmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiTWYiLCJ1bnN0YWJsZV9ub3ciLCJOZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiT2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlBmIiwiUWYiLCJSZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiU2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJUZiIsIlVmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJkZWZhdWx0UHJvcHMiLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJfY29udGV4dCIsIl9jdXJyZW50VmFsdWUiLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwicmciLCJzZyIsImNvbnRleHQiLCJvYnNlcnZlZEJpdHMiLCJuZXh0IiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsInhnIiwieWciLCJ6ZyIsIngiLCJ6IiwiY2EiLCJBZyIsIkQiLCJ0IiwiQmciLCJDZyIsIkRnIiwiRWciLCJDb21wb25lbnQiLCJyZWZzIiwiRmciLCJKZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJHZyIsIkhnIiwiSWciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiS2ciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkxnIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsIm1vZGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsInkiLCJBIiwicSIsImRvbmUiLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsIk0iLCJoaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwiTiIsIk8iLCJQIiwibWgiLCJRIiwibmgiLCJvaCIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlRGVidWdWYWx1ZSIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlJlYWN0Q3VycmVudE93bmVyIiwiUiIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY29tcGFyZSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2kiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJvaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJTIiwidGkiLCJ1aSIsInZpIiwid2kiLCJUIiwieGkiLCJVIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJTZXQiLCJDaSIsImNvbnNvbGUiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJhZGQiLCJ0aGVuIiwiV2kiLCJYaSIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsIlYiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImlqIiwiamoiLCJXIiwiWCIsImtqIiwibGoiLCJtaiIsIm5qIiwib2oiLCJwaiIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJaIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInciLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwiQiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJfY3RvciIsImRlZmF1bHQiLCJvYiIsIlhqIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwia2siLCJqayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm0iLCJMaiIsImxrIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJZaiIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVQcm9wcyIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwicmVzdWx0Iiwia2V5UHJlZml4IiwiY291bnQiLCJlc2NhcGUiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsInRvQXJyYXkiLCJvbmx5IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJzdHIiLCJoYXNoIiwiY2hhckNvZGVBdCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm8iLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJvYmoiLCJwcm9wIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJfdHlwZW9mIiwiX2RlZmluZVByb3BlcnR5Iiwid3JpdGFibGUiLCJfb2JqZWN0U3ByZWFkIiwib3duS2V5cyIsImZpbHRlciIsInN5bSIsIl90b0NvbnN1bWFibGVBcnJheSIsImFyciIsImFycjIiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJpdGVyIiwiX2l0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVNwcmVhZCIsIlVQUEVSQ0FTRV9SRSIsIlVQUEVSQ0FTRV9SRV9UT19LRUJBQiIsIm1hdGNoIiwiaXNVbml0bGVzc051bWJlciIsInByZWZpeGVzIiwicHJlZml4IiwicHJlZml4S2V5Iiwic3RyaW5naWZ5VmFsdWUiLCJzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZSIsImltcG9ydGFudGlmeSIsImhhc2hTdHJpbmciLCJNQVBfRVhJU1RTIiwiT3JkZXJlZEVsZW1lbnRzIiwiZWxlbWVudHMiLCJrZXlPcmRlciIsIl9wcm90byIsInNob3VsZFJlb3JkZXIiLCJzcGxpY2UiLCJuZXN0ZWQiLCJfbmVzdGVkIiwiYWRkU3R5bGVUeXBlIiwic3R5bGVUeXBlIiwiX3RoaXMiLCJ1bndyYXBFeHBvcnRzIiwiY3JlYXRlQ29tbW9uanNNb2R1bGUiLCJmbiIsImNhcGl0YWxpemVTdHJpbmdfMSIsInByZWZpeFByb3BlcnR5XzEiLCJwcmVmaXhQcm9wZXJ0aWVzIiwicHJvcGVydHkiLCJuZXdTdHlsZSIsInJlcXVpcmVkUHJlZml4ZXMiLCJjYXBpdGFsaXplZFByb3BlcnR5IiwiX2NhcGl0YWxpemVTdHJpbmcyIiwic3R5bGVQcm9wZXJ0eSIsImoiLCJwcmVmaXhWYWx1ZV8xIiwicGx1Z2lucyIsIm1ldGFEYXRhIiwibGVuIiwicHJvY2Vzc2VkVmFsdWUiLCJhZGROZXdWYWx1ZXNPbmx5XzEiLCJhZGRJZk5ldyIsImxpc3QiLCJ2YWx1ZXMiLCJpc09iamVjdF8xIiwiY3JlYXRlUHJlZml4ZXIiLCJfcmVmIiwicHJlZml4TWFwIiwiX2lzT2JqZWN0MiIsImNvbWJpbmVkVmFsdWUiLCJfcHJlZml4VmFsdWUyIiwiX2FkZE5ld1ZhbHVlc09ubHkyIiwiX3Byb2Nlc3NlZFZhbHVlIiwiX3ByZWZpeFByb3BlcnR5MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJiYWNrZ3JvdW5kQ2xpcCIsImlzUHJlZml4ZWRWYWx1ZV8xIiwicmVnZXgiLCJjYWxjXzEiLCJfaXNQcmVmaXhlZFZhbHVlMiIsImNhbGMiLCJjcm9zc0ZhZGVfMSIsImNyb3NzRmFkZSIsImN1cnNvcl8xIiwiZ3JhYiIsImdyYWJiaW5nIiwiY3Vyc29yIiwiZmlsdGVyXzEiLCJmbGV4Ym94SUVfMSIsImFsdGVybmF0aXZlUHJvcHMiLCJhbHRlcm5hdGl2ZVZhbHVlcyIsImZsZXhTaG9ydGhhbmRNYXBwaW5ncyIsIm1zRmxleCIsImZsZXhWYWx1ZXMiLCJhbGlnbkNvbnRlbnQiLCJhbGlnblNlbGYiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4QmFzaXMiLCJhdXRvIiwiaW5oZXJpdCIsImluaXRpYWwiLCJub25lIiwidW5zZXQiLCJmbGV4Ym94SUUiLCJmbGV4Ym94T2xkIiwiV2Via2l0Qm94T3JpZW50IiwiV2Via2l0Qm94RGlyZWN0aW9uIiwid3JhcCIsImZsZXhXcmFwIiwiZ3JhZGllbnRfMSIsImdyYWQiLCJncmFkaWVudCIsImdyaWRfMSIsIl9zbGljZWRUb0FycmF5IiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwiX2kiLCJzbGljZUl0ZXJhdG9yIiwiaXNTaW1wbGVQb3NpdGlvblZhbHVlIiwiZGlzcGxheVZhbHVlcyIsInByb3BlcnR5Q29udmVydGVycyIsInByb3BlcnR5Q29udmVydGVyIiwiYWxpZ25tZW50VmFsdWVzIiwiZ3JpZCIsIm1zR3JpZFJvd0FsaWduIiwibXNHcmlkQ29sdW1uIiwiX3ZhbHVlJHNwbGl0JG1hcCIsInBvc2l0aW9uIiwiX3ZhbHVlJHNwbGl0JG1hcDIiLCJtc0dyaWRDb2x1bW5TcGFuIiwibXNHcmlkUm93IiwiX3ZhbHVlJHNwbGl0JG1hcDMiLCJfdmFsdWUkc3BsaXQkbWFwNCIsIm1zR3JpZFJvd1NwYW4iLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwibXNHcmlkQ29sdW1ucyIsImdyaWRUZW1wbGF0ZVJvd3MiLCJtc0dyaWRSb3dzIiwianVzdGlmeVNlbGYiLCJtc0dyaWRDb2x1bW5BbGlnbiIsImltYWdlU2V0XzEiLCJpbWFnZVNldCIsImxvZ2ljYWwiLCJhbHRlcm5hdGl2ZVByb3BMaXN0IiwibWFyZ2luQmxvY2tTdGFydCIsIm1hcmdpbkJsb2NrRW5kIiwibWFyZ2luSW5saW5lU3RhcnQiLCJtYXJnaW5JbmxpbmVFbmQiLCJwYWRkaW5nQmxvY2tTdGFydCIsInBhZGRpbmdCbG9ja0VuZCIsInBhZGRpbmdJbmxpbmVTdGFydCIsInBhZGRpbmdJbmxpbmVFbmQiLCJib3JkZXJCbG9ja1N0YXJ0IiwiYm9yZGVyQmxvY2tTdGFydENvbG9yIiwiYm9yZGVyQmxvY2tTdGFydFN0eWxlIiwiYm9yZGVyQmxvY2tTdGFydFdpZHRoIiwiYm9yZGVyQmxvY2tFbmQiLCJib3JkZXJCbG9ja0VuZENvbG9yIiwiYm9yZGVyQmxvY2tFbmRTdHlsZSIsImJvcmRlckJsb2NrRW5kV2lkdGgiLCJib3JkZXJJbmxpbmVTdGFydCIsImJvcmRlcklubGluZVN0YXJ0Q29sb3IiLCJib3JkZXJJbmxpbmVTdGFydFN0eWxlIiwiYm9yZGVySW5saW5lU3RhcnRXaWR0aCIsImJvcmRlcklubGluZUVuZCIsImJvcmRlcklubGluZUVuZENvbG9yIiwiYm9yZGVySW5saW5lRW5kU3R5bGUiLCJib3JkZXJJbmxpbmVFbmRXaWR0aCIsInNpemluZ18xIiwicHJvcGVydGllcyIsIm1heEhlaWdodCIsIm1heFdpZHRoIiwiY29sdW1uV2lkdGgiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsInNpemluZyIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJjYWNoZSIsInRvSHlwaGVuTG93ZXIiLCJfaHlwaGVuYXRlU3R5bGVOYW1lIiwiZnJlZXplIiwiaE5hbWUiLCJoeXBoZW5hdGVQcm9wZXJ0eV8xIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZTIiLCJ0cmFuc2l0aW9uXzEiLCJwcm9wZXJ0eVByZWZpeE1hcCIsIm91dHB1dFZhbHVlIiwibXVsdGlwbGVWYWx1ZXMiLCJzaW5nbGVWYWx1ZSIsImRhc2hDYXNlUHJvcGVydHkiLCJfaHlwaGVuYXRlUHJvcGVydHkyIiwicExlbiIsInVuc2hpZnQiLCJwcmVmaXhNYXBwaW5nIiwicHJlZml4VmFsdWUiLCJ3ZWJraXRPdXRwdXQiLCJtb3pPdXRwdXQiLCJ0cmFuc2l0aW9uUHJvcGVydHkiLCJXZWJraXRUcmFuc2l0aW9uIiwiV2Via2l0VHJhbnNpdGlvblByb3BlcnR5IiwiTW96VHJhbnNpdGlvbiIsIk1velRyYW5zaXRpb25Qcm9wZXJ0eSIsIldlYmtpdCIsIk1veiIsIm1zIiwid20iLCJ3bXMiLCJ3bW1zIiwicHJlZml4QWxsIiwiZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMiLCJzZWxlY3RvciIsImJhc2VTZWxlY3RvciIsImdlbmVyYXRlU3VidHJlZVN0eWxlcyIsImdlbmVyYXRlZCIsImdlbmVyYXRlQ1NTIiwic3R5bGVUeXBlcyIsInNlbGVjdG9ySGFuZGxlcnMiLCJzdHJpbmdIYW5kbGVycyIsInVzZUltcG9ydGFudCIsIm1lcmdlZCIsInBsYWluRGVjbGFyYXRpb25zIiwiZ2VuZXJhdGVkU3R5bGVzIiwic29tZSIsImhhbmRsZXIiLCJuZXdTZWxlY3RvciIsIndhcm4iLCJnZW5lcmF0ZWRSdWxlc2V0IiwiZ2VuZXJhdGVDU1NSdWxlc2V0IiwidHJhbnNmb3JtUnVsZSIsInRyYW5zZm9ybVZhbHVlIiwiYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyIiwiYWNjIiwiZGVjbGFyYXRpb25zIiwic3RyaW5nSGFuZGxlcktleXMiLCJydW5TdHJpbmdIYW5kbGVycyIsIm9yaWdpbmFsRWxlbWVudHMiLCJyZWR1Y2UiLCJwcmVmaXhlZEVsZW1lbnRzIiwiZWxlbWVudE5hbWVzIiwib3JpZ2luYWxTdHlsZSIsIm9yaWdpbmFsSW5kZXgiLCJydWxlcyIsInN0eWxlVGFnIiwiZm9udEZhbWlseSIsIm5hbWVNYXAiLCJpbmplY3RTdHlsZU9uY2UiLCJmaW5hbFZhbCIsInZhbFZhbCIsInZhbEtleSIsImluamVjdEdlbmVyYXRlZENTU09uY2UiLCJhbHJlYWR5SW5qZWN0ZWQiLCJpbmplY3Rpb25CdWZmZXIiLCJpc0J1ZmZlcmluZyIsImdlbmVyYXRlZENTUyIsIl9pbmplY3Rpb25CdWZmZXIiLCJmbHVzaFRvU3R5bGVUYWciLCJkZWZpbml0aW9ucyIsInJlc2V0SW5qZWN0ZWRTdHlsZSIsImZsdXNoVG9BcnJheSIsInJldCIsImNzc1J1bGVzIiwicXVlcnlTZWxlY3RvciIsImhlYWQiLCJzaGVldCIsInN0eWxlU2hlZXQiLCJpbnNlcnRSdWxlIiwibnVtUnVsZXMiLCJydWxlIiwiaW5uZXJUZXh0IiwiaW5qZWN0U3R5bGVUYWciLCJwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyIsInN0eWxlRGVmaW5pdGlvbnMiLCJjbGFzc05hbWVCaXRzIiwiZGVmaW5pdGlvbkJpdHMiLCJkZWYiLCJfbmFtZSIsIl9kZWZpbml0aW9uIiwiX2xlbiIsImluamVjdEFuZEdldENsYXNzTmFtZSIsImNsYXNzTmFtZSIsInVubWluaWZpZWRIYXNoRm4iLCJoYXNoRm4iLCJTdHlsZVNoZWV0Iiwic2hlZXREZWZpbml0aW9uIiwibWFwcGVkU2hlZXREZWZpbml0aW9uIiwic3RyaW5nVmFsIiwicmVoeWRyYXRlIiwiU3R5bGVTaGVldFNlcnZlciIsInJlbmRlclN0YXRpYyIsInJlbmRlckZ1bmMiLCJzdGFydEJ1ZmZlcmluZyIsImh0bWwiLCJjc3MiLCJjb250ZW50IiwicmVuZGVyZWRDbGFzc05hbWVzIiwiQXBocm9kaXRlIiwibWFrZUV4cG9ydHMiLCJleHRlbnNpb25zIiwiZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyIsImV4dGVuc2lvbiIsInNlbGVjdG9ySGFuZGxlciIsIlN0eWxlU2hlZXRUZXN0VXRpbHMiLCJtaW5pZnkiLCJzaG91bGRNaW5pZnkiLCJfa2V5IiwicmVzZXQiLCJ1c2VyIiwiaXNMb2dnZWRJbiIsIkFwcENvbnRleHQiLCJSZWFjdCIsImxvZ091dCIsImhlYWRlclN0eWxlcyIsImgxIiwibWFyZ2luTGVmdCIsImFwcEhlYWRlciIsImZsZXhEaXJlY3Rpb24iLCJib3JkZXJCb3R0b20iLCJhcHBMb2dvIiwiY29udGV4dFZhbHVlIiwibG9nbyIsImFsdCIsImdldEZ1bGxZZWFyIiwiTm90aWZpY2F0aW9uSXRlbSIsIl9QdXJlQ29tcG9uZW50IiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiX2NsYXNzQ2FsbENoZWNrIiwibm90aWZpY2F0aW9uSXRlbXN0eWxlIiwidXJnZW50IiwibWFya0FzUmVhZCIsImxpc3RTdHlsZSIsInBhZGRpbmciLCJtYXJnaW4iLCJmb250U2l6ZSIsImxvZyIsInByb3BUeXBlcyIsIk5vdGlmaWNhdGlvbnMiLCJfUmVhY3QkQ29tcG9uZW50IiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIm5leHRQcm9wcyIsImxpc3ROb3RpZmljYXRpb25zIiwiZGlzcGxheURyYXdlciIsIl90aGlzMiIsIm5vdGlmaWNhdGlvblN0eWxlcyIsIm1lbnVJdGVtIiwiaGFuZGxlRGlzcGxheURyYXdlciIsIm5vdGlmaWNhdGlvbnMiLCJiYWNrZ3JvdW5kIiwiYm9yZGVyIiwicmlnaHQiLCJvdXRsaW5lIiwiaGFuZGxlSGlkZURyYXdlciIsImNsb3NlSWNvbiIsIm1hcmdpblRvcCIsInJlbGF0aXZlIiwiYm90dG9tIiwiYmFja2dyb3VuZENvbG9yIiwiYm94U2l6aW5nIiwiZmxvYXQiLCJ0cmFuc2Zvcm0iLCJhbmltYXRpb25EdXJhdGlvbiIsIk5vdGlmaWNhdGlvbkl0ZW1TaGFwZSIsIkxvZ2luIiwiX3VzZVN0YXRlMiIsInNldEVtYWlsIiwiX3VzZVN0YXRlNCIsInNldFBhc3N3b3JkIiwiX3VzZVN0YXRlNiIsImVuYWJsZVN1Ym1pdCIsInNldEVuYWJsZVN1Ym1pdCIsImxvZ2luU3R5bGVzIiwiYXBwQm9keSIsIm9uU3VibWl0IiwiZXZlbnQiLCJsb2dJbiIsImh0bWxGb3IiLCJpbnB1dHMiLCJvbkNoYW5nZSIsImJvcmRlckNvbG9yIiwiY3JlZGl0IiwiQ291cnNlTGlzdFJvdyIsImlzSGVhZGVyIiwidGV4dEZpcnN0Q2VsbCIsInRleHRTZWNvbmRDZWxsIiwiY29sU3BhbiIsInJvd3NTdHlsZXMiLCJ0aGNlbnRlciIsInRleHRBbGlnbiIsInBhZGRpbmdMZWZ0IiwiQ291cnNlTGlzdCIsImxpc3RDb3Vyc2VzIiwiY291cnNlTGlzdFN0eWxlcyIsInRhYmxlIiwiYm9yZGVyQ29sbGFwc2UiLCJQcm9wVHlwZSIsIkNvdXJzZVNoYXBlIiwiQm9keVNlY3Rpb24iLCJfQ29tcG9uZW50IiwiX3RoaXMkcHJvcHMiLCJ0aXRsZSIsIkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSIsImJvZHlTZWN0aW9uU3R5bGVzIiwibWFyZ2luQm90dG9tIiwiUHJvcHR5cGVzIiwiQXBwIiwiYWxlcnQiLCJoYW5kbGVLZXlEb3duIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIk5vdGlmaWNhdGlvbiIsImJvZHlTdHlsZXMiLCJIZWFkZXIiLCJmb290ZXJTdHlsZXMiLCJmb290ZXIiLCJGb290ZXIiLCJib3JkZXJUb3AiLCJmb250U3R5bGUiLCJSZWFjdERPTSIsImdldEVsZW1lbnRCeUlkIl0sInNvdXJjZVJvb3QiOiIifQ==